{
  "openapi": "3.0.1",
  "info": {
    "title": "Beamable API",
    "contact": {
      "name": "Beamable Support",
      "url": "https://beamable.com/contact-us",
      "email": "support@beamable.com"
    },
    "version": "1.0",
    "x-beamable-semantic-type": "Semantic type information for use in automatic SDK generation"
  },
  "servers": [
    {
      "url": "https://api.beamable.com"
    }
  ],
  "paths": {
    "/api/admin/inflight/failures": {
      "get": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "serviceName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceObjectId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminActorInFlightFailureResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchDeleteInFlightRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/auth/refresh-token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Generate a new access token for a previously authenticated account. DEPRECATED: Use `tokens/refresh-token` instead.",
        "requestBody": {
          "description": "`RefreshTokenAuthRequest`",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenAuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/auth/tokens/refresh-token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Generate a new access token for a previously authenticated account.",
        "requestBody": {
          "description": "`RefreshTokenAuthRequest`",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenAuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/auth/tokens/guest": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Generate a new access token for a brand-new player.",
        "requestBody": {
          "description": "`GuestAuthRequest`",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuestAuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/auth/tokens/password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Generate a new access token when given email and password credentials",
        "requestBody": {
          "description": "`PasswordAuthRequest`",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordAuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/auth/server": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Generate a new access token for a machine with a shared secret",
        "requestBody": {
          "description": "`ServerTokenAuthRequest`",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerTokenAuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/manifests": {
      "post": {
        "tags": [
          "Beamo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeamoV2PostManifestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2ManifestChecksum"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Beamo"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2GetManifestsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/manifests/{manifestId}": {
      "get": {
        "tags": [
          "Beamo"
        ],
        "parameters": [
          {
            "name": "manifestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2Manifest"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2ProtoError"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/manifests/current": {
      "get": {
        "tags": [
          "Beamo"
        ],
        "parameters": [
          {
            "name": "archived",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2Manifest"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2ProtoError"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Beamo"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2EmptyMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/manifests/promote": {
      "post": {
        "tags": [
          "Beamo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeamoV2PromoteBeamoManifestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2EmptyMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2ProblemDetails"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/templates": {
      "get": {
        "tags": [
          "Beamo"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2GetTemplatesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/status": {
      "get": {
        "tags": [
          "Beamo"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2GetStatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/registry-uri": {
      "get": {
        "tags": [
          "Beamo"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2UriResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/services/registrations": {
      "post": {
        "tags": [
          "Beamo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeamoV2ServiceRegistrationQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2ServiceRegistrationResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/services/federation": {
      "post": {
        "tags": [
          "Beamo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeamoV2ServiceRegistrationQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2FederationRegistrationResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/services/{serviceName}/federation/traffic": {
      "put": {
        "tags": [
          "Beamo"
        ],
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeamoV2ServiceRegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2EmptyMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Beamo"
        ],
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeamoV2DeleteRegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2EmptyMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/services/{serviceName}/metrics-request": {
      "post": {
        "tags": [
          "Beamo"
        ],
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeamoV2GetMetricsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2SignedRequest"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/services/{serviceName}/logs/query": {
      "post": {
        "tags": [
          "Beamo"
        ],
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeamoV2StartServiceLogsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2QueryResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/services/logs/query/{queryId}": {
      "delete": {
        "tags": [
          "Beamo"
        ],
        "parameters": [
          {
            "name": "queryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2ApiBeamoServicesLogsQueryDeleteBeamoResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Beamo"
        ],
        "parameters": [
          {
            "name": "queryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2SignedRequest"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/services/secret": {
      "get": {
        "tags": [
          "Beamo"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2GetServiceSecretResponse"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/storage/connection": {
      "get": {
        "tags": [
          "Beamo"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2ConnectionStringResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/storage/{storageObjectName}/performance": {
      "get": {
        "tags": [
          "Beamo"
        ],
        "parameters": [
          {
            "name": "storageObjectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Period",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Granularity",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2StoragePerformance"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/services/{serviceName}/logs/context": {
      "get": {
        "tags": [
          "Beamo"
        ],
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routingKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2ServiceLoggingContext"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Beamo"
        ],
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeamoV2ServiceLoggingContext"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2EmptyMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Beamo"
        ],
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routingKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2EmptyMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/services/logs/context": {
      "get": {
        "tags": [
          "Beamo"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoV2GetAllServiceLoggingContexts"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/otel/views": {
      "get": {
        "tags": [
          "BeamoOtel"
        ],
        "parameters": [
          {
            "name": "playerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OtelViewsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtelViewsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtelViewsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "BeamoOtel"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtelView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OtelView"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtelView"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtelView"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/otel/views/{viewId}": {
      "delete": {
        "tags": [
          "BeamoOtel"
        ],
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiBeamoOtelViewsDeleteBeamoOtelResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "BeamoOtel"
        ],
        "parameters": [
          {
            "name": "viewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOtelViewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OtelView"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtelView"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtelView"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/otel/auth/reader/config": {
      "get": {
        "tags": [
          "BeamoOtel"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OtelAuthConfig"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtelAuthConfig"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtelAuthConfig"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/beamo/otel/auth/writer/config": {
      "get": {
        "tags": [
          "BeamoOtel"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OtelAuthConfig"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtelAuthConfig"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtelAuthConfig"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/customers": {
      "post": {
        "tags": [
          "Customer"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerActorNewCustomerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerActorNewCustomerResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Customer"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerActorCustomersResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/customers/verify": {
      "post": {
        "tags": [
          "Customer"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerActorNewCustomerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerActorNewCustomerResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/customers/activate": {
      "put": {
        "tags": [
          "Customer"
        ],
        "responses": {
          "200": {
            "description": "null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiCustomersActivatePutCustomerResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/customers/{customerId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerActorCustomerView"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/customers/{customerId}/admin-view": {
      "get": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerActorCustomer"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/customers/{customerId}/config": {
      "get": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerActorRealmConfigResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/customers/{customerId}/games": {
      "get": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGamesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGameRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealmView"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/customers/{customerId}/games/{gameId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gameId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGamesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gameId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerActorUpdateGameHierarchyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/customers/{customerId}/realms": {
      "post": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRealmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/customers/{customerId}/realms/{realmId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "realmId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealmView"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "realmId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "realmId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/customers/{customerId}/realms/{realmId}/rename": {
      "put": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "realmId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenameRealmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/customers/{customerId}/realms/{realmId}/config": {
      "get": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "realmId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerActorRealmConfigResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "realmId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerActorRealmConfigSaveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "realmId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealmConfigChangeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/customers/{customerId}/realms/{realmId}/client-defaults": {
      "get": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "realmId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerActorRealmConfiguration"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/customers/{customerId}/realms/{destinationRealmId}/promotion": {
      "post": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destinationRealmId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerActorPromoteRealmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerActorPromoteRealmResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destinationRealmId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceRealmId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotables",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentIds",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerActorPromoteRealmResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/customers/aliases/{alias}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerActorAliasAvailableResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/customers/{customerId}/alias": {
      "put": {
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetCustomerAliasRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/lobbies": {
      "get": {
        "tags": [
          "Lobby"
        ],
        "summary": "Query for active lobbies",
        "parameters": [
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MatchType",
            "in": "query",
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "ContentId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LobbyQueryResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Lobby"
        ],
        "summary": "Create a lobby. A leader is not necessary to create a lobby.",
        "requestBody": {
          "description": "The Create request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLobby"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lobby"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Lobby"
        ],
        "summary": "Exposes the internal \"SetLobby\" behavior as an Admin only endpoint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Lobby"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetLobbyResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/lobbies/{id}": {
      "get": {
        "tags": [
          "Lobby"
        ],
        "summary": "Get the current status of a lobby by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The lobby id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lobby"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Lobby"
        ],
        "summary": "Join a lobby",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the lobby",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The join lobby request. Includes tags.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinLobby"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lobby"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Lobby"
        ],
        "summary": "Remove the requested player from the lobby. The host is able to remove anyone. Others may\nonly remove themselves without error.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the lobby",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Request including the player requested to remove",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveFromLobby"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Acknowledge"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/lobbies/passcode": {
      "put": {
        "tags": [
          "Lobby"
        ],
        "summary": "Join a lobby by passcode.",
        "requestBody": {
          "description": "The join lobby request. Includes tags.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinLobby"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lobby"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/lobbies/{id}/metadata": {
      "put": {
        "tags": [
          "Lobby"
        ],
        "summary": "Update the properties of a lobby",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the lobby",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The update lobby request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLobby"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lobby"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/lobbies/{id}/tags": {
      "put": {
        "tags": [
          "Lobby"
        ],
        "summary": "Add the request tags to the requested player.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the lobby",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Includes the player ID and tags to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTags"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lobby"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Lobby"
        ],
        "summary": "Remove the request tags from the requested player.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the lobby",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Includes the player ID and the tags to remove.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveTags"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lobby"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/lobbies/{id}/server": {
      "post": {
        "tags": [
          "Lobby"
        ],
        "summary": "Invoke the Lobby actor to make the federated game server request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the lobby",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Includes an optional matchtype",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFederatedGameServer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiLobbiesServerPostLobbyResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/mailbox/publish": {
      "post": {
        "tags": [
          "Mailbox"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMailboxPublishPostMailboxResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/parties": {
      "post": {
        "tags": [
          "Party"
        ],
        "summary": "Create a party for the current player.",
        "requestBody": {
          "description": "Argument to pass to the party actor to initialize state.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParty"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Party"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/parties/{id}/metadata": {
      "put": {
        "tags": [
          "Party"
        ],
        "summary": "Updates party state.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the party",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Argument to pass to the party actor to update state.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateParty"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Party"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/parties/{id}": {
      "get": {
        "tags": [
          "Party"
        ],
        "summary": "Return the status of a party.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the party",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Party"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Party"
        ],
        "summary": "Join a party",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the party",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Party"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/parties/{id}/promote": {
      "put": {
        "tags": [
          "Party"
        ],
        "summary": "Promote a party member to leader.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the party",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Player to promote to leader",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromoteNewLeader"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Party"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/parties/{id}/invite": {
      "post": {
        "tags": [
          "Party"
        ],
        "summary": "Invite a player to a party",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the party",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Player to invite to the party",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteToParty"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiPartiesInvitePostPartyResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Party"
        ],
        "summary": "Cancel party invitation.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the party",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Player to be uninvited",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelInviteToParty"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiPartiesInviteDeletePartyResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/parties/{id}/members": {
      "delete": {
        "tags": [
          "Party"
        ],
        "summary": "Remove the requested player from the party. The leader is able to remove anyone. Others may\nonly remove themselves without error.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the party",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The leave party request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeaveParty"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiPartiesMembersDeletePartyResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/players/{playerId}/lobbies": {
      "get": {
        "tags": [
          "PlayerLobby"
        ],
        "summary": "Fetch the requested player's lobby information",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "description": "Player Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lobby"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "PlayerLobby"
        ],
        "summary": "If the requested player is in a lobby, remove the player",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "description": "Player Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiPlayersLobbiesDeletePlayerLobbyResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/players/{playerId}/parties": {
      "get": {
        "tags": [
          "PlayerParty"
        ],
        "summary": "Fetch the requested player's party information",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "description": "Player Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Party"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "PlayerParty"
        ],
        "summary": "If the requested player is in a party, remove the player",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "description": "Player Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiPlayersPartiesDeletePlayerPartyResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/players/{playerId}/parties/invites": {
      "get": {
        "tags": [
          "PlayerParty"
        ],
        "summary": "Return list of party invites for player.",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "description": "PlayerId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyInvitesForPlayerResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/players/{playerId}/party/invites": {
      "get": {
        "tags": [
          "PlayerParty"
        ],
        "summary": "Return list of party invites for player.",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "description": "PlayerId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyInvitesForPlayerResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/players/{playerId}/matchmaking/tickets": {
      "get": {
        "tags": [
          "PlayerTicket"
        ],
        "summary": "Fetch the requested player's active Ticket information",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "description": "Player Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketQueryResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/presence/query": {
      "post": {
        "tags": [
          "Presence"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnlineStatusQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayersStatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/internal/scheduler/job/execute": {
      "post": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Called by the Dispatcher lambda function to start a job execution at the appropriate time.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobExecutionEvent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobExecutionResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/scheduler/job": {
      "post": {
        "tags": [
          "Scheduler"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobDefinitionSaveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobDefinitionView"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/internal/scheduler/job": {
      "post": {
        "tags": [
          "Scheduler"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobDefinitionSaveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobDefinitionView"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/scheduler/jobs": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSchedulerJobsGetSchedulerResponse"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/scheduler/jobs-paged": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onlyUnique",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobDefinitionViewCursorPagedResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/scheduler/jobs/suspended": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobDefinitionViewCursorPagedResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/scheduler/job/{jobId}": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobDefinitionView"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Scheduler"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSchedulerJobDeleteSchedulerResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/scheduler/job/{jobId}/activity": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSchedulerJobActivityGetSchedulerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/scheduler/job/{jobId}/activity-paged": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobActivityViewCursorPagedResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/scheduler/jobs/activity-paged": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobActivityViewCursorPagedResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/scheduler/job/{jobId}/next-executions": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 200
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSchedulerJobNextExecutionsGetSchedulerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/scheduler/job/{jobId}/cancel": {
      "put": {
        "tags": [
          "Scheduler"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSchedulerJobCancelPutSchedulerResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/service-plans": {
      "get": {
        "tags": [
          "ServicePlan"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicePlanActorServicePlansResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "ServicePlan"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServicePlanRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/service-plans/{name}": {
      "get": {
        "tags": [
          "ServicePlan"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicePlanActorServicePlan"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ServicePlan"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/matchmaking/matches/{id}": {
      "get": {
        "tags": [
          "Match"
        ],
        "summary": "Fetch a match by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Match ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Match"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/matchmaking/tickets": {
      "get": {
        "tags": [
          "Ticket"
        ],
        "summary": "Query for active tickets",
        "parameters": [
          {
            "name": "Players",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-beamable-semantic-type": "Gamertag"
            }
          },
          {
            "name": "IncludeInactive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketQueryResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Ticket"
        ],
        "summary": "Create a ticket representing 1 or more players to be matched\nwith others.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketReservationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketReservationResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/matchmaking/tickets/{id}": {
      "get": {
        "tags": [
          "Ticket"
        ],
        "summary": "Fetch a ticket by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Ticket ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Ticket"
        ],
        "summary": "Cancel a pending ticket. If no ticket with the id exists, this will\nstill return a 204.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiMatchmakingTicketsDeleteTicketResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/players/{playerId}/presence": {
      "put": {
        "tags": [
          "PlayerPresence"
        ],
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiPlayersPresencePutPlayerPresenceResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "PlayerPresence"
        ],
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineStatus"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/api/players/{playerId}/presence/status": {
      "put": {
        "tags": [
          "PlayerPresence"
        ],
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPresenceStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineStatus"
                }
              }
            }
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the playerId of the requester. This is only necessary when not using a JWT bearer token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/content/manifests/unarchive": {
      "post": {
        "tags": [
          "content basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArchiveOrUnarchiveManifestsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/content/manifest/pull": {
      "post": {
        "tags": [
          "content basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PullManifestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentBasicManifest"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/content/manifest/history": {
      "get": {
        "tags": [
          "content basic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "ContentManifestId"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetManifestHistoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/content/binary": {
      "post": {
        "tags": [
          "content basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveBinaryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveBinaryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/content/manifests/pull": {
      "post": {
        "tags": [
          "content basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PullAllManifestsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentBasicManifestChecksums"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/content/content": {
      "get": {
        "tags": [
          "content basic"
        ],
        "parameters": [
          {
            "name": "contentId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "ContentId"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentOrText"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/content/localizations": {
      "get": {
        "tags": [
          "content basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLocalizationsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "content basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutLocalizationsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "content basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteLocalizationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/content/text": {
      "post": {
        "tags": [
          "content basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveTextRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveTextResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/content/manifest/exact": {
      "get": {
        "tags": [
          "content basic"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentBasicManifest"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/content/manifest": {
      "get": {
        "tags": [
          "content basic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the content manifest",
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "ContentManifestId"
            }
          },
          {
            "name": "uid",
            "in": "query",
            "description": "UID of the content manifest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentBasicManifest"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "content basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveManifestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveManifestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/content/manifest/diffs": {
      "get": {
        "tags": [
          "content basic"
        ],
        "parameters": [
          {
            "name": "manifestId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "ContentManifestId"
            }
          },
          {
            "name": "fromUid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toUid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetManifestDiffsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/content/manifests/archive": {
      "post": {
        "tags": [
          "content basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArchiveOrUnarchiveManifestsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/content/": {
      "post": {
        "tags": [
          "content basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveContentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveContentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/content/manifest/public": {
      "get": {
        "tags": [
          "content basic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the content manifest",
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "ContentManifestId"
            }
          },
          {
            "name": "uid",
            "in": "query",
            "description": "UID of the content manifest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ClientManifestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/content/manifest/public/json": {
      "get": {
        "tags": [
          "content basic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Content ID of the content manifest",
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "ContentManifestId"
            }
          },
          {
            "name": "uid",
            "in": "query",
            "description": "UID of the content manifest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientManifestJsonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/content/manifest/repeat": {
      "put": {
        "tags": [
          "content basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepeatManifestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/content/manifest/private/json": {
      "get": {
        "tags": [
          "content basic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Content ID of the content manifest",
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "ContentManifestId"
            }
          },
          {
            "name": "uid",
            "in": "query",
            "description": "UID of the content manifest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientManifestJsonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/content/manifest/private": {
      "get": {
        "tags": [
          "content basic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the content manifest",
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "ContentManifestId"
            }
          },
          {
            "name": "uid",
            "in": "query",
            "description": "UID of the content manifest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ClientManifestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/content/manifest/checksums": {
      "get": {
        "tags": [
          "content basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentBasicManifestChecksums"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/content/manifest/checksum": {
      "get": {
        "tags": [
          "content basic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the content manifest",
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "ContentManifestId"
            }
          },
          {
            "name": "uid",
            "in": "query",
            "description": "UID of the content manifest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentBasicManifestChecksum"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/content/manifests": {
      "get": {
        "tags": [
          "content basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentBasicGetManifestsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/beamo/microservice/registrations": {
      "post": {
        "tags": [
          "beamo basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MicroserviceRegistrationsQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicroserviceRegistrationsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/beamo/microservice/federation/traffic": {
      "put": {
        "tags": [
          "beamo basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MicroserviceRegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "beamo basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MicroserviceRegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/beamo/image/urls": {
      "post": {
        "tags": [
          "beamo basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetServiceURLsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreSignedUrlsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/beamo/metricsUrl": {
      "post": {
        "tags": [
          "beamo basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetMetricsUrlRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSignedUrlResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/beamo/microservice/secret": {
      "get": {
        "tags": [
          "beamo basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicroserviceSecretResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/beamo/queryLogs/result": {
      "post": {
        "tags": [
          "beamo basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSignedUrlResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/beamo/storage/performance": {
      "get": {
        "tags": [
          "beamo basic"
        ],
        "parameters": [
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storageObjectName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "granularity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/beamo/manifests": {
      "get": {
        "tags": [
          "beamo basic"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoBasicGetManifestsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/beamo/templates": {
      "get": {
        "tags": [
          "beamo basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplatesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/beamo/queryLogs": {
      "post": {
        "tags": [
          "beamo basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetLogsInsightUrlRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Query"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "beamo basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/beamo/logsUrl": {
      "post": {
        "tags": [
          "beamo basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetLogsUrlRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSignedUrlResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/beamo/image/commit": {
      "put": {
        "tags": [
          "beamo basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommitImageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LambdaResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/beamo/uploadAPI": {
      "get": {
        "tags": [
          "beamo basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLambdaURI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/beamo/status": {
      "get": {
        "tags": [
          "beamo basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/beamo/manifest/current": {
      "get": {
        "tags": [
          "beamo basic"
        ],
        "parameters": [
          {
            "name": "archived",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentManifestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/beamo/manifest/pull": {
      "post": {
        "tags": [
          "beamo basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PullBeamoManifestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamoBasicManifestChecksums"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/beamo/registry": {
      "get": {
        "tags": [
          "beamo basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetElasticContainerRegistryURI"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/beamo/manifest/deploy": {
      "post": {
        "tags": [
          "beamo basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/beamo/microservice/federation": {
      "post": {
        "tags": [
          "beamo basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MicroserviceRegistrationsQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupportedFederationsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/beamo/storage/connection": {
      "get": {
        "tags": [
          "beamo basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionString"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/beamo/manifest": {
      "get": {
        "tags": [
          "beamo basic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetManifestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "beamo basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostManifestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostManifestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/event-players/{objectId}/": {
      "get": {
        "tags": [
          "event-players object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventPlayerView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/event-players/{objectId}/claim": {
      "post": {
        "tags": [
          "event-players object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventClaimRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventClaimResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/event-players/{objectId}/score": {
      "put": {
        "tags": [
          "event-players object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/events/content": {
      "get": {
        "tags": [
          "events basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventContentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/events/calendar": {
      "get": {
        "tags": [
          "events basic"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventsInDateRangeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/events/applyContent": {
      "post": {
        "tags": [
          "events basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventApplyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/events/running": {
      "get": {
        "tags": [
          "events basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventQueryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/events/{objectId}/endPhase": {
      "put": {
        "tags": [
          "events object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Format: events.event_content_id.event_started_timestamp",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventPhaseEndRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/events/{objectId}/": {
      "get": {
        "tags": [
          "events object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Format: events.event_content_id.event_started_timestamp",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventObjectData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/events/{objectId}/ping": {
      "get": {
        "tags": [
          "events object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Format: events.event_content_id.event_started_timestamp",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingRsp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/events/{objectId}/content": {
      "put": {
        "tags": [
          "events object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Format: events.event_content_id.event_started_timestamp",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetContentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "events object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Format: events.event_content_id.event_started_timestamp",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/events/{objectId}/refresh": {
      "put": {
        "tags": [
          "events object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Format: events.event_content_id.event_started_timestamp",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/group-users/{objectId}/availability": {
      "get": {
        "tags": [
          "group-users object"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/GroupType"
            }
          },
          {
            "name": "subGroup",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/group-users/{objectId}/recommended": {
      "get": {
        "tags": [
          "group-users object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/group-users/{objectId}/join": {
      "post": {
        "tags": [
          "group-users object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupMembershipRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupMembershipResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "group-users object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupMembershipRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupMembershipResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/group-users/{objectId}/group": {
      "post": {
        "tags": [
          "group-users object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/group-users/{objectId}/search": {
      "get": {
        "tags": [
          "group-users object"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scoreMin",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userScore",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "hasSlots",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "enrollmentTypes",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "scoreMax",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subGroup",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortValue",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/GroupType"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/group-users/{objectId}/": {
      "get": {
        "tags": [
          "group-users object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupUser"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/groups/{objectId}/role": {
      "put": {
        "tags": [
          "groups object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleChangeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/groups/{objectId}/kick": {
      "post": {
        "tags": [
          "groups object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KickRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupMembershipResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/groups/{objectId}/apply": {
      "post": {
        "tags": [
          "groups object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupApplication"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/groups/{objectId}/donations": {
      "post": {
        "tags": [
          "groups object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDonationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "groups object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MakeDonationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/groups/{objectId}/member": {
      "delete": {
        "tags": [
          "groups object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KickRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupMembershipResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/groups/{objectId}/": {
      "get": {
        "tags": [
          "groups object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "groups object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "groups object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisbandRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/groups/{objectId}/donations/claim": {
      "put": {
        "tags": [
          "groups object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/groups/{objectId}/invite": {
      "post": {
        "tags": [
          "groups object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupInvite"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/groups/{objectId}/petition": {
      "post": {
        "tags": [
          "groups object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupApplication"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/inventory/items": {
      "get": {
        "tags": [
          "inventory basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemContentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/inventory/currency": {
      "get": {
        "tags": [
          "inventory basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyContentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/inventory/{objectId}/preview": {
      "put": {
        "tags": [
          "inventory object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "Gamertag"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreviewVipBonusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/inventory/{objectId}/multipliers": {
      "get": {
        "tags": [
          "inventory object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "Gamertag"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultipliersGetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/inventory/{objectId}/transaction": {
      "delete": {
        "tags": [
          "inventory object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "Gamertag"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/inventory/{objectId}/": {
      "get": {
        "tags": [
          "inventory object"
        ],
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "Gamertag"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "inventory object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "Gamertag"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryQueryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "inventory object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "Gamertag"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/inventory/{objectId}/proxy/reload": {
      "put": {
        "tags": [
          "inventory object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "Gamertag"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/inventory/{objectId}/transfer": {
      "put": {
        "tags": [
          "inventory object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "Gamertag"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/leaderboards/list": {
      "get": {
        "tags": [
          "leaderboards basic"
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "prefix",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includePartitions",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/leaderboards/player": {
      "get": {
        "tags": [
          "leaderboards basic"
        ],
        "parameters": [
          {
            "name": "dbid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListLeaderBoardViewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/leaderboards/assignment": {
      "get": {
        "tags": [
          "leaderboards basic"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "joinBoard",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardAssignmentInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/leaderboards/uid": {
      "get": {
        "tags": [
          "leaderboards basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardUidResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/leaderboards/{objectId}/entries": {
      "delete": {
        "tags": [
          "leaderboards object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/leaderboards/{objectId}/membership": {
      "get": {
        "tags": [
          "leaderboards object"
        ],
        "parameters": [
          {
            "name": "playerId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardMembershipResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/leaderboards/{objectId}/ranks": {
      "get": {
        "tags": [
          "leaderboards object"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderBoardViewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/leaderboards/{objectId}/partition": {
      "get": {
        "tags": [
          "leaderboards object"
        ],
        "parameters": [
          {
            "name": "playerId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardPartitionInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/leaderboards/{objectId}/friends": {
      "get": {
        "tags": [
          "leaderboards object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderBoardViewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/leaderboards/{objectId}/": {
      "post": {
        "tags": [
          "leaderboards object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeaderboardCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "leaderboards object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/leaderboards/{objectId}/matches": {
      "get": {
        "tags": [
          "leaderboards object"
        ],
        "parameters": [
          {
            "name": "poolSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "windows",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "windowSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchMakingMatchesPvpResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/leaderboards/{objectId}/assignment": {
      "get": {
        "tags": [
          "leaderboards object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardAssignmentInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "leaderboards object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeaderboardRemoveCacheEntryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/leaderboards/{objectId}/entry": {
      "put": {
        "tags": [
          "leaderboards object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeaderboardAddRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "leaderboards object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeaderboardRemoveEntryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/leaderboards/{objectId}/freeze": {
      "put": {
        "tags": [
          "leaderboards object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/leaderboards/{objectId}/details": {
      "get": {
        "tags": [
          "leaderboards object"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "max",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/leaderboards/{objectId}/view": {
      "get": {
        "tags": [
          "leaderboards object"
        ],
        "parameters": [
          {
            "name": "max",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "focus",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "friends",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "outlier",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "guild",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderBoardViewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/leaderboards/{objectId}/swap": {
      "put": {
        "tags": [
          "leaderboards object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeaderboardSwapRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/accounts/me/device": {
      "delete": {
        "tags": [
          "accounts basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteDevicesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountPlayerView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/accounts/me": {
      "get": {
        "tags": [
          "accounts basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountPlayerView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "accounts basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountPlayerView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/accounts/me/third-party": {
      "delete": {
        "tags": [
          "accounts basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThirdPartyAvailableRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountPlayerView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/accounts/get-personally-identifiable-information": {
      "get": {
        "tags": [
          "accounts basic"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountPersonallyIdentifiableInformationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/accounts/search": {
      "get": {
        "tags": [
          "accounts basic"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/accounts/email-update/init": {
      "post": {
        "tags": [
          "accounts basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/accounts/email-update/confirm": {
      "post": {
        "tags": [
          "accounts basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailUpdateConfirmation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/accounts/available/external_identity": {
      "get": {
        "tags": [
          "accounts basic"
        ],
        "parameters": [
          {
            "name": "provider_service",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider_namespace",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAvailableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/accounts/available/third-party": {
      "get": {
        "tags": [
          "accounts basic"
        ],
        "parameters": [
          {
            "name": "thirdParty",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAvailableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/accounts/admin/admin-user": {
      "post": {
        "tags": [
          "accounts basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateElevatedAccountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountPortalView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/accounts/register": {
      "post": {
        "tags": [
          "accounts basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountRegistration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountPlayerView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/accounts/admin/me": {
      "get": {
        "tags": [
          "accounts basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountPortalView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/accounts/password-update/init": {
      "post": {
        "tags": [
          "accounts basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/accounts/admin/admin-users": {
      "get": {
        "tags": [
          "accounts basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdminsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/accounts/find": {
      "get": {
        "tags": [
          "accounts basic"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/accounts/signup": {
      "post": {
        "tags": [
          "accounts basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountWithCredsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAccountWithCredsApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/accounts/available/device-id": {
      "get": {
        "tags": [
          "accounts basic"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAvailableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/accounts/available": {
      "get": {
        "tags": [
          "accounts basic"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAvailableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/accounts/password-update/confirm": {
      "post": {
        "tags": [
          "accounts basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordUpdateConfirmation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/accounts/external_identity": {
      "post": {
        "tags": [
          "accounts basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachExternalIdentityApiRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachExternalIdentityApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "accounts basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteExternalIdentityApiRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/accounts/{objectId}/admin/email": {
      "put": {
        "tags": [
          "accounts object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "AccountId of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "AccountId"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/accounts/{objectId}/available-roles": {
      "get": {
        "tags": [
          "accounts object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "AccountId of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "AccountId"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableRolesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/accounts/{objectId}/role/report": {
      "get": {
        "tags": [
          "accounts object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "AccountId of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "AccountId"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountRolesReport"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/accounts/{objectId}/role": {
      "put": {
        "tags": [
          "accounts object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "AccountId of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "AccountId"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRole"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "accounts object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "AccountId of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "AccountId"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRole"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/accounts/{objectId}/admin/scope": {
      "put": {
        "tags": [
          "accounts object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "AccountId of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "AccountId"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRole"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "accounts object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "AccountId of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "AccountId"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRole"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/accounts/{objectId}/admin/third-party": {
      "put": {
        "tags": [
          "accounts object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "AccountId of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "AccountId"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferThirdPartyAssociation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "accounts object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "AccountId of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "AccountId"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteThirdPartyAssociation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/accounts/{objectId}/": {
      "put": {
        "tags": [
          "accounts object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "AccountId of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "AccountId"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/accounts/{objectId}/admin/forget": {
      "delete": {
        "tags": [
          "accounts object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "AccountId of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "AccountId"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/stats/subscribe": {
      "put": {
        "tags": [
          "stats basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatsSubscribeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "stats basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatsUnsubscribeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/stats/client/batch": {
      "get": {
        "tags": [
          "stats basic"
        ],
        "parameters": [
          {
            "name": "objectIds",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "StatsType"
            }
          },
          {
            "name": "stats",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchReadStatsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/stats/batch": {
      "post": {
        "tags": [
          "stats basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchSetStatsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/stats/search": {
      "post": {
        "tags": [
          "stats basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatsSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatsSearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/stats/search/extended": {
      "post": {
        "tags": [
          "stats basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchExtendedRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchExtendedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/stats/{objectId}/client/stringlist": {
      "post": {
        "tags": [
          "stats object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Format: domain.visibility.type.gamerTag",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "StatsType"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatUpdateRequestStringListFormat"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/stats/{objectId}/": {
      "get": {
        "tags": [
          "stats object"
        ],
        "parameters": [
          {
            "name": "stats",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Format: domain.visibility.type.gamerTag",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "StatsType"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "stats object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Format: domain.visibility.type.gamerTag",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "StatsType"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "stats object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Format: domain.visibility.type.gamerTag",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "StatsType"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/stats/{objectId}/client": {
      "get": {
        "tags": [
          "stats object"
        ],
        "parameters": [
          {
            "name": "stats",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Format: domain.visibility.type.gamerTag",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "StatsType"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "stats object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Format: domain.visibility.type.gamerTag",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "StatsType"
            },
            "x-beamable-object-id": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/tournaments/search/groups": {
      "post": {
        "tags": [
          "tournaments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetStatusForGroupsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatusForGroupsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/tournaments/": {
      "get": {
        "tags": [
          "tournaments basic"
        ],
        "parameters": [
          {
            "name": "isRunning",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "contentId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cycle",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentQueryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "tournaments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/tournaments/me/group": {
      "get": {
        "tags": [
          "tournaments basic"
        ],
        "parameters": [
          {
            "name": "contentId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/tournaments/rewards": {
      "get": {
        "tags": [
          "tournaments basic"
        ],
        "parameters": [
          {
            "name": "tournamentId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "tournaments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RewardsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/tournaments/global": {
      "get": {
        "tags": [
          "tournaments basic"
        ],
        "parameters": [
          {
            "name": "tournamentId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "focus",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cycle",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "contentId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStandingsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/tournaments/standings/group": {
      "get": {
        "tags": [
          "tournaments basic"
        ],
        "parameters": [
          {
            "name": "tournamentId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "focus",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cycle",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "contentId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStandingsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/tournaments/standings": {
      "get": {
        "tags": [
          "tournaments basic"
        ],
        "parameters": [
          {
            "name": "tournamentId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "focus",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cycle",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "contentId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStandingsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/tournaments/admin/player": {
      "get": {
        "tags": [
          "tournaments basic"
        ],
        "parameters": [
          {
            "name": "playerId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "tournamentId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hasUnclaimedRewards",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminGetPlayerStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "tournaments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlayerStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminPlayerStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/tournaments/me": {
      "get": {
        "tags": [
          "tournaments basic"
        ],
        "parameters": [
          {
            "name": "tournamentId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hasUnclaimedRewards",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlayerStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/tournaments/champions": {
      "get": {
        "tags": [
          "tournaments basic"
        ],
        "parameters": [
          {
            "name": "tournamentId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cycles",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "contentId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChampionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/tournaments/score": {
      "post": {
        "tags": [
          "tournaments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/tournaments/groups": {
      "get": {
        "tags": [
          "tournaments basic"
        ],
        "parameters": [
          {
            "name": "tournamentId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "focus",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cycle",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "contentId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/auth/token/list": {
      "get": {
        "tags": [
          "auth basic"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cid",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "x-beamable-semantic-type": "Cid"
            }
          },
          {
            "name": "pid",
            "in": "query",
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "Pid"
            }
          },
          {
            "name": "gamerTagOrAccountId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/auth/token": {
      "get": {
        "tags": [
          "auth basic"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "auth basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequestWrapper"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/auth/token/revoke": {
      "put": {
        "tags": [
          "auth basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/cloudsaving/data/replace": {
      "post": {
        "tags": [
          "cloudsaving basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceObjectsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudsavingBasicManifest"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/cloudsaving/data": {
      "delete": {
        "tags": [
          "cloudsaving basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectRequests"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/cloudsaving/data/downloadURL": {
      "post": {
        "tags": [
          "cloudsaving basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectRequests"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/URLSResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/cloudsaving/data/downloadURLFromPortal": {
      "post": {
        "tags": [
          "cloudsaving basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ObjectRequests"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/URLSResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/cloudsaving/data/move": {
      "put": {
        "tags": [
          "cloudsaving basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerBasicCloudDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudsavingBasicManifest"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/cloudsaving/data/moveFromPortal": {
      "put": {
        "tags": [
          "cloudsaving basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerBasicCloudDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudsavingBasicManifest"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/cloudsaving/data/uploadURLFromPortal": {
      "post": {
        "tags": [
          "cloudsaving basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadRequestsFromPortal"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/URLSResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/cloudsaving/data/commitManifest": {
      "put": {
        "tags": [
          "cloudsaving basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadRequests"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudsavingBasicManifest"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/cloudsaving/data/uploadURL": {
      "post": {
        "tags": [
          "cloudsaving basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadRequests"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/URLSResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/cloudsaving/": {
      "get": {
        "tags": [
          "cloudsaving basic"
        ],
        "parameters": [
          {
            "name": "playerId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudsavingBasicManifest"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/windows/purchase/track": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/audits": {
      "get": {
        "tags": [
          "payments basic"
        ],
        "parameters": [
          {
            "name": "providerid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "txid",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "player",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "start",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAuditResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/windows/purchase/complete": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompletePurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/test/purchase/begin": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeginPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeginPurchaseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/facebook/update": {
      "get": {
        "tags": [
          "payments basic"
        ],
        "parameters": [
          {
            "name": "hubMode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hubChallenge",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hubVerifyToken",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionVerificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FacebookPaymentUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FacebookPaymentUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/steam/purchase/fail": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FailPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/facebook/purchase/complete": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompletePurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/facebook/purchase/fail": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FailPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/test/purchase/complete": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompletePurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/itunes/product": {
      "get": {
        "tags": [
          "payments basic"
        ],
        "parameters": [
          {
            "name": "sku",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/googleplay/purchase/complete": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompletePurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/test/purchase/track": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/googleplay/purchase/begin": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeginPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeginPurchaseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/itunes/purchase/begin": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeginPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeginPurchaseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/googleplay/purchase/verify": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/facebook/purchase/cancel": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/coupon/purchase/track": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/steam/purchase/complete": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompletePurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/facebook/purchase/track": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/itunes/purchase/fail": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FailPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/test/purchase/verify": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/test/purchase/cancel": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/googleplay/purchase/track": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/steam/prices": {
      "get": {
        "tags": [
          "payments basic"
        ],
        "parameters": [
          {
            "name": "steamId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocalizedPriceMap"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/windows/purchase/verify": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/test/purchase/fail": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FailPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/coupon/purchase/cancel": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/itunes/purchase/verify": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/itunes/purchase/complete": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompletePurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/coupon/purchase/begin": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeginPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeginPurchaseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/facebook/purchase/verify": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/steam/purchase/track": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/facebook/purchase/begin": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeginPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeginPurchaseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/steam/order": {
      "get": {
        "tags": [
          "payments basic"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SteamOrderInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/coupon/purchase/verify": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/windows/purchase/begin": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeginPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeginPurchaseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/windows/product": {
      "get": {
        "tags": [
          "payments basic"
        ],
        "parameters": [
          {
            "name": "sku",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/googleplay/purchase/fail": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FailPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/facebook/product": {
      "get": {
        "tags": [
          "payments basic"
        ],
        "parameters": [
          {
            "name": "sku",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/googleplay/purchase/cancel": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/coupon/product": {
      "get": {
        "tags": [
          "payments basic"
        ],
        "parameters": [
          {
            "name": "sku",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/coupon/purchase/fail": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FailPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/steam/purchase/begin": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeginPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeginPurchaseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/steam/products": {
      "get": {
        "tags": [
          "payments basic"
        ],
        "parameters": [
          {
            "name": "steamId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/steam/purchase/cancel": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/steam/auth": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SteamAuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/steam/product": {
      "get": {
        "tags": [
          "payments basic"
        ],
        "parameters": [
          {
            "name": "sku",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/coupon/purchase/complete": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompletePurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/windows/purchase/cancel": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/googleplay/product": {
      "get": {
        "tags": [
          "payments basic"
        ],
        "parameters": [
          {
            "name": "sku",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/windows/purchase/fail": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FailPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/itunes/purchase/cancel": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/test/product": {
      "get": {
        "tags": [
          "payments basic"
        ],
        "parameters": [
          {
            "name": "sku",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/steam/purchase/verify": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/payments/itunes/purchase/track": {
      "post": {
        "tags": [
          "payments basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/push/register": {
      "post": {
        "tags": [
          "push basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyRsp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/push/send": {
      "post": {
        "tags": [
          "push basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyRsp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/notification/channel": {
      "post": {
        "tags": [
          "notification basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/notification/player": {
      "post": {
        "tags": [
          "notification basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/notification/custom": {
      "post": {
        "tags": [
          "notification basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/notification/server": {
      "post": {
        "tags": [
          "notification basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerEvent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/notification/generic": {
      "post": {
        "tags": [
          "notification basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/notification/": {
      "get": {
        "tags": [
          "notification basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriberDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/notification/game": {
      "post": {
        "tags": [
          "notification basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/realms/customer/activate": {
      "get": {
        "tags": [
          "realms basic"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/HtmlResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/realms/project/beamable": {
      "post": {
        "tags": [
          "realms basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/realms/customer/alias/available": {
      "get": {
        "tags": [
          "realms basic"
        ],
        "parameters": [
          {
            "name": "alias",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealmsBasicAliasAvailableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/realms/project": {
      "get": {
        "tags": [
          "realms basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectView"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "realms basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "realms basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnarchiveProjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "realms basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArchiveProjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/realms/customer/verify": {
      "post": {
        "tags": [
          "realms basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealmsBasicNewCustomerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealmsBasicNewCustomerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/realms/games": {
      "get": {
        "tags": [
          "realms basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGameResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/realms/config": {
      "get": {
        "tags": [
          "realms basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealmsBasicRealmConfigResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "realms basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealmConfigChangeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "realms basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealmsBasicRealmConfigSaveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/realms/project/rename": {
      "put": {
        "tags": [
          "realms basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenameProjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/realms/plans": {
      "get": {
        "tags": [
          "realms basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealmsBasicServicePlansResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "realms basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/realms/client/defaults": {
      "get": {
        "tags": [
          "realms basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealmsBasicRealmConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/realms/customer": {
      "get": {
        "tags": [
          "realms basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerViewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "realms basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealmsBasicNewCustomerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealmsBasicNewCustomerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/realms/admin/inflight/failures": {
      "get": {
        "tags": [
          "realms basic"
        ],
        "parameters": [
          {
            "name": "serviceObjectId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealmsBasicInFlightFailureResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "realms basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchDeleteInFlightRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/realms/launch-message": {
      "get": {
        "tags": [
          "realms basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaunchMessageListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "realms basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLaunchMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "realms basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveLaunchMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/realms/is-customer": {
      "get": {
        "tags": [
          "realms basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/realms/admin/customer": {
      "get": {
        "tags": [
          "realms basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/realms/game": {
      "get": {
        "tags": [
          "realms basic"
        ],
        "parameters": [
          {
            "name": "rootPID",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "Pid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGameResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "realms basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGameRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "realms basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealmsBasicUpdateGameHierarchyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/realms/project/promote": {
      "get": {
        "tags": [
          "realms basic"
        ],
        "parameters": [
          {
            "name": "sourcePid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "Pid"
            }
          },
          {
            "name": "promotions",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "blah"
              }
            }
          },
          {
            "name": "contentManifestIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "blah"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromoteRealmResponseOld"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "realms basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealmsBasicPromoteRealmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromoteRealmResponseOld"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/realms/customers": {
      "get": {
        "tags": [
          "realms basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealmsBasicCustomersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/realms/promotion": {
      "get": {
        "tags": [
          "realms basic"
        ],
        "parameters": [
          {
            "name": "sourcePid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "x-beamable-semantic-type": "Pid"
            }
          },
          {
            "name": "promotions",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "blah"
              }
            }
          },
          {
            "name": "contentManifestIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "blah"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealmsBasicPromoteRealmResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "realms basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RealmsBasicPromoteRealmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RealmsBasicPromoteRealmResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/social/my": {
      "get": {
        "tags": [
          "social basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Social"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/social/friends/invite": {
      "post": {
        "tags": [
          "social basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendFriendRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "social basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendFriendRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/social/friends": {
      "delete": {
        "tags": [
          "social basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerIdRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/social/friends/import": {
      "post": {
        "tags": [
          "social basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportFriendsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/social/friends/make": {
      "post": {
        "tags": [
          "social basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MakeFriendshipRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/social/": {
      "get": {
        "tags": [
          "social basic"
        ],
        "parameters": [
          {
            "name": "playerIds",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "blah"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSocialStatusesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/social/blocked": {
      "post": {
        "tags": [
          "social basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerIdRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendshipStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "social basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerIdRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendshipStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/chatV2/{objectId}/rooms": {
      "get": {
        "tags": [
          "chatV2 object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRoomsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "chatV2 object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoomRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoomResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "chatV2 object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeaveRoomRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaveRoomResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/chatV2/{objectId}/": {
      "get": {
        "tags": [
          "chatV2 object"
        ],
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRoomsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/chatV2/{objectId}/messages": {
      "post": {
        "tags": [
          "chatV2 object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/commerce/catalog/legacy": {
      "post": {
        "tags": [
          "commerce basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveCatalogRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/commerce/catalog": {
      "get": {
        "tags": [
          "commerce basic"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCatalogResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/commerce/skus": {
      "get": {
        "tags": [
          "commerce basic"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSKUsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "commerce basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveSKUsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/commerce/{objectId}/": {
      "get": {
        "tags": [
          "commerce object"
        ],
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetActiveOffersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/commerce/{objectId}/coupons/count": {
      "get": {
        "tags": [
          "commerce object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTotalCouponResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/commerce/{objectId}/listings/cooldown": {
      "put": {
        "tags": [
          "commerce object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CooldownModifierRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/commerce/{objectId}/offersAdmin": {
      "get": {
        "tags": [
          "commerce object"
        ],
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stores",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetActiveOffersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/commerce/{objectId}/purchase": {
      "post": {
        "tags": [
          "commerce object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "commerce object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportPurchaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/commerce/{objectId}/listings": {
      "get": {
        "tags": [
          "commerce object"
        ],
        "parameters": [
          {
            "name": "listing",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "store",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActiveListingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/commerce/{objectId}/status": {
      "delete": {
        "tags": [
          "commerce object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClearStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/commerce/{objectId}/coupons": {
      "post": {
        "tags": [
          "commerce object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GiveCouponReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/commerce/{objectId}/stats/update": {
      "post": {
        "tags": [
          "commerce object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatSubscriptionNotification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/commerce/{objectId}/offers": {
      "get": {
        "tags": [
          "commerce object"
        ],
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stores",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetActiveOffersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/calendars/{objectId}/claim": {
      "post": {
        "tags": [
          "calendars object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarClaimRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/calendars/{objectId}/": {
      "get": {
        "tags": [
          "calendars object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarQueryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/announcements/list/tags": {
      "get": {
        "tags": [
          "announcements basic"
        ],
        "parameters": [
          {
            "name": "tagNameFilter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTagsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/announcements/list": {
      "get": {
        "tags": [
          "announcements basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnouncementContentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/announcements/search": {
      "get": {
        "tags": [
          "announcements basic"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnouncementContentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/announcements/list/definitions": {
      "get": {
        "tags": [
          "announcements basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDefinitionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/announcements/": {
      "post": {
        "tags": [
          "announcements basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnouncementDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "announcements basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAnnouncementRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/announcements/content": {
      "get": {
        "tags": [
          "announcements basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnouncementContentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/announcements/{objectId}/read": {
      "put": {
        "tags": [
          "announcements object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnouncementRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/announcements/{objectId}/claim": {
      "post": {
        "tags": [
          "announcements object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnouncementRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/announcements/{objectId}/raw": {
      "get": {
        "tags": [
          "announcements object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnouncementRawResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/announcements/{objectId}/": {
      "get": {
        "tags": [
          "announcements object"
        ],
        "parameters": [
          {
            "name": "include_deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnouncementQueryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "announcements object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnouncementRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/mail/attachments": {
      "put": {
        "tags": [
          "mail basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptMultipleAttachments"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/mail/template": {
      "get": {
        "tags": [
          "mail basic"
        ],
        "parameters": [
          {
            "name": "templateName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gamerTag",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailTemplate"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/mail/": {
      "get": {
        "tags": [
          "mail basic"
        ],
        "parameters": [
          {
            "name": "mid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "mail basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/mail/bulk": {
      "post": {
        "tags": [
          "mail basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkSendMailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/mail/{objectId}/detail": {
      "get": {
        "tags": [
          "mail object"
        ],
        "parameters": [
          {
            "name": "mid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/mail/{objectId}/categories": {
      "get": {
        "tags": [
          "mail object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMailCategoriesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/mail/{objectId}/search": {
      "post": {
        "tags": [
          "mail object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailSearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/mail/{objectId}/bulk": {
      "post": {
        "tags": [
          "mail object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkSendMailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "mail object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUpdateMailObjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/mail/{objectId}/accept/many": {
      "put": {
        "tags": [
          "mail object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptMultipleAttachments"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/object/mail/{objectId}/": {
      "get": {
        "tags": [
          "mail object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailQueryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "mail object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMailObjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "mail object"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "description": "Gamertag of the player.Underlying objectId type is integer in format int64.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-beamable-object-id": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/session/heartbeat": {
      "post": {
        "tags": [
          "session basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionHeartbeat"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/session/history": {
      "get": {
        "tags": [
          "session basic"
        ],
        "parameters": [
          {
            "name": "dbid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "month",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionHistoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/session/status": {
      "get": {
        "tags": [
          "session basic"
        ],
        "parameters": [
          {
            "name": "playerIds",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "intervalSecs",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineStatusResponses"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/session/client/history": {
      "get": {
        "tags": [
          "session basic"
        ],
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionClientHistoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/session/": {
      "post": {
        "tags": [
          "session basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartSessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/trials/admin/data": {
      "get": {
        "tags": [
          "trials basic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetS3DataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/trials/data": {
      "post": {
        "tags": [
          "trials basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadTrialDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveGameDataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "trials basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteTrialDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrialSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/trials/pause": {
      "put": {
        "tags": [
          "trials basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PauseTrialRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrialSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/trials/schedule": {
      "put": {
        "tags": [
          "trials basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleTrialRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrialSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/trials/": {
      "get": {
        "tags": [
          "trials basic"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTrialsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "trials basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrialRestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrialSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "trials basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteTrialRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrialSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/trials/admin": {
      "get": {
        "tags": [
          "trials basic"
        ],
        "parameters": [
          {
            "name": "dbid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlayerTrialsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/basic/trials/start": {
      "put": {
        "tags": [
          "trials basic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartTrialRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrialSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "auth": [ ],
            "scope": [ ]
          }
        ]
      },
      "parameters": [
        {
          "name": "X-BEAM-GAMERTAG",
          "in": "header",
          "description": "Override the Gamer Tag of the player. This is generally inferred by the auth token.",
          "schema": {
            "type": "string"
          }
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "InFlightFailureResponse": {
        "$ref": "#/components/schemas/AdminActorInFlightFailureResponse"
      },
      "BatchDeleteInFlightRequest": {
        "title": "BatchDeleteInFlightRequest",
        "required": [
          "inFlightFailureIds"
        ],
        "type": "object",
        "properties": {
          "inFlightFailureIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "EmptyMessage": {
        "title": "EmptyMessage",
        "type": "object",
        "additionalProperties": false
      },
      "InFlightFailure": {
        "$ref": "#/components/schemas/AdminActorInFlightFailure"
      },
      "InFlightMessage": {
        "$ref": "#/components/schemas/AdminActorInFlightMessage"
      },
      "AdminActorInFlightFailureResponse": {
        "title": "InFlightFailureResponse",
        "required": [
          "failures"
        ],
        "type": "object",
        "properties": {
          "failures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdminActorInFlightFailure"
            }
          }
        },
        "additionalProperties": false
      },
      "AdminActorInFlightFailure": {
        "title": "InFlightFailure",
        "required": [
          "failureId",
          "inFlightMessage",
          "lastError",
          "serviceName",
          "serviceObjectId"
        ],
        "type": "object",
        "properties": {
          "failureId": {
            "type": "string"
          },
          "serviceObjectId": {
            "type": "string"
          },
          "serviceName": {
            "type": "string"
          },
          "inFlightMessage": {
            "$ref": "#/components/schemas/AdminActorInFlightMessage"
          },
          "lastError": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AdminActorInFlightMessage": {
        "title": "InFlightMessage",
        "required": [
          "body",
          "messageId",
          "method",
          "path",
          "service"
        ],
        "type": "object",
        "properties": {
          "service": {
            "type": "string"
          },
          "messageId": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "shard": {
            "type": "string",
            "nullable": true
          },
          "gamerTag": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "limitFailureRetries": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefreshTokenAuthRequest": {
        "title": "RefreshTokenAuthRequest",
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Cid"
          },
          "realmId": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Pid"
          },
          "context": {
            "$ref": "#/components/schemas/AuthActorContextInfo"
          }
        },
        "additionalProperties": false
      },
      "AuthResponse": {
        "title": "AuthResponse",
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "title": "ProblemDetails",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "GuestAuthRequest": {
        "title": "GuestAuthRequest",
        "type": "object",
        "properties": {
          "scope": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Cid"
          },
          "realmId": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Pid"
          },
          "context": {
            "$ref": "#/components/schemas/AuthActorContextInfo"
          },
          "initProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PasswordAuthRequest": {
        "title": "PasswordAuthRequest",
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Cid"
          },
          "realmId": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Pid"
          },
          "context": {
            "$ref": "#/components/schemas/AuthActorContextInfo"
          }
        },
        "additionalProperties": false
      },
      "ServerTokenAuthRequest": {
        "title": "ServerTokenAuthRequest",
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "clientSecret": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Cid"
          },
          "realmId": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Pid"
          }
        },
        "additionalProperties": false
      },
      "ServerTokenResponse": {
        "title": "ServerTokenResponse",
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthActorContextInfo": {
        "title": "ContextInfo",
        "type": "object",
        "properties": {
          "platform": {
            "type": "string",
            "nullable": true
          },
          "device": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BeamoV2PostManifestRequest": {
        "title": "BeamoV2PostManifestRequest",
        "type": "object",
        "properties": {
          "manifest": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2ServiceReference"
            }
          },
          "storageReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2ServiceStorageReference"
            }
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "autoDeploy": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2ManifestChecksum": {
        "title": "BeamoV2ManifestChecksum",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "checksum": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2ProblemDetails": {
        "title": "BeamoV2ProblemDetails",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "BeamoV2GetManifestsResponse": {
        "title": "BeamoV2GetManifestsResponse",
        "type": "object",
        "properties": {
          "manifests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2Manifest"
            }
          }
        },
        "additionalProperties": false
      },
      "BeamoV2Manifest": {
        "title": "BeamoV2Manifest",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "serviceReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2ServiceReference"
            }
          },
          "created": {
            "type": "integer",
            "format": "int64"
          },
          "createdByAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "checksum": {
            "type": "string",
            "readOnly": true
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "storageReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2ServiceStorageReference"
            }
          },
          "storageGroupId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BeamoV2ProtoError": {
        "title": "BeamoV2ProtoError",
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BeamoV2EmptyMessage": {
        "title": "BeamoV2EmptyMessage",
        "type": "object",
        "additionalProperties": false
      },
      "BeamoV2PromoteBeamoManifestRequest": {
        "title": "BeamoV2PromoteBeamoManifestRequest",
        "required": [
          "sourceRealmId"
        ],
        "type": "object",
        "properties": {
          "sourceRealmId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2GetTemplatesResponse": {
        "title": "BeamoV2GetTemplatesResponse",
        "type": "object",
        "properties": {
          "templates": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2ServiceTemplateView"
            }
          }
        },
        "additionalProperties": false
      },
      "BeamoV2GetStatusResponse": {
        "title": "BeamoV2GetStatusResponse",
        "type": "object",
        "properties": {
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2ServiceStatus"
            }
          },
          "isCurrent": {
            "type": "boolean"
          },
          "storageStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2ServiceStorageStatus"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BeamoV2UriResponse": {
        "title": "BeamoV2UriResponse",
        "type": "object",
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2ServiceRegistrationQuery": {
        "title": "BeamoV2ServiceRegistrationQuery",
        "type": "object",
        "properties": {
          "serviceName": {
            "type": "string",
            "nullable": true
          },
          "routingKey": {
            "type": "string",
            "nullable": true
          },
          "localOnly": {
            "type": "boolean",
            "nullable": true
          },
          "federation": {
            "$ref": "#/components/schemas/BeamoV2SupportedFederation"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2ServiceRegistrationResponse": {
        "title": "BeamoV2ServiceRegistrationResponse",
        "type": "object",
        "properties": {
          "registrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2ServiceRegistration"
            }
          }
        },
        "additionalProperties": false
      },
      "BeamoV2FederationRegistrationResponse": {
        "title": "BeamoV2FederationRegistrationResponse",
        "type": "object",
        "properties": {
          "registrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2FederationRegistration"
            }
          }
        },
        "additionalProperties": false
      },
      "BeamoV2ServiceRegistrationRequest": {
        "title": "BeamoV2ServiceRegistrationRequest",
        "type": "object",
        "properties": {
          "routingKey": {
            "type": "string",
            "nullable": true
          },
          "federation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2SupportedFederation"
            },
            "nullable": true
          },
          "trafficFilterEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2DeleteRegistrationRequest": {
        "title": "BeamoV2DeleteRegistrationRequest",
        "type": "object",
        "properties": {
          "routingKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BeamoV2GetMetricsRequest": {
        "title": "BeamoV2GetMetricsRequest",
        "type": "object",
        "properties": {
          "metricName": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "period": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2SignedRequest": {
        "title": "BeamoV2SignedRequest",
        "type": "object",
        "properties": {
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2StringStringKeyValuePair"
            }
          },
          "url": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "method": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2StartServiceLogsRequest": {
        "title": "BeamoV2StartServiceLogsRequest",
        "type": "object",
        "properties": {
          "serviceName": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/BeamoV2OrderDirection"
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BeamoV2QueryResponse": {
        "title": "BeamoV2QueryResponse",
        "type": "object",
        "properties": {
          "queryId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2ApiBeamoServicesLogsQueryDeleteBeamoResponse": {
        "title": "ApiBeamoServicesLogsQueryDeleteBeamoResponse"
      },
      "BeamoV2GetServiceSecretResponse": {
        "title": "BeamoV2GetServiceSecretResponse",
        "type": "object",
        "properties": {
          "secret": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2ConnectionStringResponse": {
        "title": "BeamoV2ConnectionStringResponse",
        "type": "object",
        "properties": {
          "connectionString": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2StoragePerformance": {
        "title": "BeamoV2StoragePerformance",
        "required": [
          "databaseMeasurements",
          "indexes",
          "namespaces",
          "queries"
        ],
        "type": "object",
        "properties": {
          "namespaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2PANamespace"
            }
          },
          "indexes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2PASuggestedIndex"
            }
          },
          "queries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2PASlowQuery"
            }
          },
          "databaseMeasurements": {
            "$ref": "#/components/schemas/BeamoV2DatabaseMeasurements"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2ServiceLoggingContext": {
        "title": "BeamoV2ServiceLoggingContext",
        "required": [
          "defaultLogLevel",
          "routingKey"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/BeamoV2ObjectId"
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          },
          "routingKey": {
            "type": "string"
          },
          "defaultLogLevel": {
            "$ref": "#/components/schemas/BeamoV2LogLevel"
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2LogContextRule"
            }
          }
        },
        "additionalProperties": false
      },
      "BeamoV2GetAllServiceLoggingContexts": {
        "title": "BeamoV2GetAllServiceLoggingContexts",
        "type": "object",
        "properties": {
          "contexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2ServiceLoggingContext"
            }
          }
        },
        "additionalProperties": false
      },
      "BeamoV2SupportedFederation": {
        "title": "BeamoV2SupportedFederation",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BeamoV2FederationType"
          },
          "nameSpace": {
            "type": "string",
            "nullable": true
          },
          "settings": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BeamoV2OrderDirection": {
        "title": "BeamoV2OrderDirection",
        "enum": [
          "Desc",
          "Asc"
        ],
        "type": "string"
      },
      "BeamoV2DatabaseMeasurements": {
        "title": "BeamoV2DatabaseMeasurements",
        "required": [
          "databaseName"
        ],
        "type": "object",
        "properties": {
          "databaseName": {
            "type": "string"
          },
          "granularity": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "hostId": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2Link"
            }
          },
          "measurements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2DatabaseMeasurement"
            },
            "nullable": true
          },
          "processId": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BeamoV2ObjectId": {
        "title": "BeamoV2ObjectId",
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BeamoV2LogLevel": {
        "title": "BeamoV2LogLevel",
        "enum": [
          "Trace",
          "Debug",
          "Information",
          "Warning",
          "Error",
          "Critical",
          "None"
        ],
        "type": "string"
      },
      "BeamoV2ServiceReference": {
        "title": "BeamoV2ServiceReference",
        "type": "object",
        "properties": {
          "serviceName": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "imageId": {
            "type": "string"
          },
          "templateId": {
            "type": "string"
          },
          "comments": {
            "type": "string",
            "nullable": true
          },
          "containerHealthCheckPort": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2ServiceDependencyReference"
            },
            "nullable": true
          },
          "archived": {
            "type": "boolean"
          },
          "imageCpuArch": {
            "type": "string",
            "nullable": true
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2ServiceComponent"
            },
            "nullable": true
          },
          "logProvider": {
            "$ref": "#/components/schemas/BeamoV2LogProvider"
          },
          "checksum": {
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BeamoV2ServiceStorageReference": {
        "title": "BeamoV2ServiceStorageReference",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "storageType": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "templateId": {
            "type": "string",
            "nullable": true
          },
          "archived": {
            "type": "boolean"
          },
          "checksum": {
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BeamoV2ServiceTemplateView": {
        "title": "BeamoV2ServiceTemplateView",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2ServiceStatus": {
        "title": "BeamoV2ServiceStatus",
        "type": "object",
        "properties": {
          "serviceName": {
            "type": "string"
          },
          "running": {
            "type": "boolean"
          },
          "imageId": {
            "type": "string"
          },
          "isCurrent": {
            "type": "boolean"
          },
          "serviceDependencyReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2ServiceDependencyReference"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BeamoV2ServiceStorageStatus": {
        "title": "BeamoV2ServiceStorageStatus",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "storageType": {
            "type": "string"
          },
          "isRunning": {
            "type": "boolean"
          },
          "isCurrent": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2FederationType": {
        "title": "BeamoV2FederationType",
        "enum": [
          "IFederatedLogin",
          "IFederatedInventory",
          "IFederatedCommerce",
          "IFederatedGameServer",
          "IFederatedPlayerInit"
        ],
        "type": "string"
      },
      "BeamoV2ServiceRegistration": {
        "title": "BeamoV2ServiceRegistration",
        "type": "object",
        "properties": {
          "instanceCount": {
            "type": "integer",
            "format": "int32"
          },
          "serviceName": {
            "type": "string"
          },
          "cid": {
            "type": "string"
          },
          "pid": {
            "type": "string"
          },
          "beamoName": {
            "type": "string",
            "nullable": true
          },
          "routingKey": {
            "type": "string",
            "nullable": true
          },
          "startedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "federation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2SupportedFederation"
            },
            "nullable": true
          },
          "trafficFilterEnabled": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BeamoV2FederationRegistration": {
        "title": "BeamoV2FederationRegistration",
        "type": "object",
        "properties": {
          "serviceName": {
            "type": "string"
          },
          "routingKey": {
            "type": "string",
            "nullable": true
          },
          "federation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2SupportedFederation"
            },
            "nullable": true
          },
          "trafficFilterEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "ttl": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BeamoV2StringStringKeyValuePair": {
        "title": "BeamoV2StringStringKeyValuePair",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BeamoV2PANamespace": {
        "title": "BeamoV2PANamespace",
        "required": [
          "namespace",
          "type"
        ],
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2PASuggestedIndex": {
        "title": "BeamoV2PASuggestedIndex",
        "required": [
          "id",
          "impact",
          "index",
          "namespace",
          "weight"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "impact": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "index": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "namespace": {
            "type": "string"
          },
          "weight": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2PASlowQuery": {
        "title": "BeamoV2PASlowQuery",
        "required": [
          "line",
          "namespace"
        ],
        "type": "object",
        "properties": {
          "line": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2LogContextRule": {
        "title": "BeamoV2LogContextRule",
        "required": [
          "enabled",
          "logLevel",
          "ruleFilters"
        ],
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/BeamoV2ObjectId"
          },
          "enabled": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "author": {
            "$ref": "#/components/schemas/BeamoV2LogContextRuleAuthor"
          },
          "whoLastEdit": {
            "$ref": "#/components/schemas/BeamoV2LogContextRuleAuthor"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "updatedAt": {
            "type": "integer",
            "format": "int64"
          },
          "expiresAt": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "logLevel": {
            "$ref": "#/components/schemas/BeamoV2LogLevel"
          },
          "ruleFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2ContextRuleFilter"
            }
          }
        },
        "additionalProperties": false
      },
      "BeamoV2LogProvider": {
        "title": "BeamoV2LogProvider",
        "enum": [
          "Cloudwatch",
          "Clickhouse"
        ],
        "type": "string"
      },
      "BeamoV2Link": {
        "title": "BeamoV2Link",
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "rel": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2DatabaseMeasurement": {
        "title": "BeamoV2DatabaseMeasurement",
        "required": [
          "name",
          "units"
        ],
        "type": "object",
        "properties": {
          "dataPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoV2DataPoint"
            }
          },
          "name": {
            "type": "string"
          },
          "units": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2LogContextRuleAuthor": {
        "title": "BeamoV2LogContextRuleAuthor",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "accountId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2ServiceDependencyReference": {
        "title": "BeamoV2ServiceDependencyReference",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "storageType": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2ServiceComponent": {
        "title": "BeamoV2ServiceComponent",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2ContextRuleFilter": {
        "title": "BeamoV2ContextRuleFilter",
        "type": "object",
        "properties": {
          "playerIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "playerIdOperationType": {
            "$ref": "#/components/schemas/BeamoV2PlayerRuleOperationType"
          },
          "paths": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pathsOperationType": {
            "$ref": "#/components/schemas/BeamoV2PathRuleOperationType"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2DataPoint": {
        "title": "BeamoV2DataPoint",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "timeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "BeamoV2PlayerRuleOperationType": {
        "title": "BeamoV2PlayerRuleOperationType",
        "enum": [
          "Include",
          "GreaterThan",
          "LesserThan"
        ],
        "type": "string"
      },
      "BeamoV2PathRuleOperationType": {
        "title": "BeamoV2PathRuleOperationType",
        "enum": [
          "Include",
          "Contain",
          "StartsWith",
          "EndsWith"
        ],
        "type": "string"
      },
      "OtelViewsResponse": {
        "title": "OtelViewsResponse",
        "required": [
          "views"
        ],
        "type": "object",
        "properties": {
          "views": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OtelView"
            }
          }
        },
        "additionalProperties": false
      },
      "OtelView": {
        "title": "OtelView",
        "required": [
          "name",
          "playerId",
          "query"
        ],
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ObjectId"
          },
          "playerId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "isPublic": {
            "type": "boolean"
          },
          "isFavorite": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApiBeamoOtelViewsDeleteBeamoOtelResponse": {
        "title": "ApiBeamoOtelViewsDeleteBeamoOtelResponse"
      },
      "UpdateOtelViewRequest": {
        "title": "UpdateOtelViewRequest",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "query": {
            "type": "string",
            "nullable": true
          },
          "isPublic": {
            "type": "boolean",
            "nullable": true
          },
          "isFavorite": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OtelAuthConfig": {
        "title": "OtelAuthConfig",
        "required": [
          "endpoint",
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "endpoint": {
            "type": "string",
            "format": "uri"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObjectId": {
        "title": "ObjectId",
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomerActorNewCustomerRequest": {
        "title": "NewCustomerRequest",
        "required": [
          "email",
          "password",
          "realmName"
        ],
        "type": "object",
        "properties": {
          "realmName": {
            "type": "string"
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "hierarchy": {
            "type": "boolean"
          },
          "alias": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerActorNewCustomerResponse": {
        "title": "NewCustomerResponse",
        "required": [
          "customerId",
          "name",
          "realmId",
          "realmName",
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "$ref": "#/components/schemas/AuthResponse"
          },
          "customerId": {
            "type": "string"
          },
          "realmId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "realmName": {
            "type": "string"
          },
          "activationPending": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CustomerActorCustomersResponse": {
        "title": "CustomersResponse",
        "type": "object",
        "properties": {
          "customers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerActorCustomer"
            }
          }
        },
        "additionalProperties": false
      },
      "ApiCustomersActivatePutCustomerResponse": {
        "title": "ApiCustomersActivatePutCustomerResponse"
      },
      "CustomerActorCustomerView": {
        "title": "CustomerView",
        "required": [
          "customerId",
          "name"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "realms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealmView"
            }
          }
        },
        "additionalProperties": false
      },
      "UpdateCustomerRequest": {
        "title": "UpdateCustomerRequest",
        "type": "object",
        "properties": {
          "paymentStatus": {
            "$ref": "#/components/schemas/PaymentStatus"
          }
        },
        "additionalProperties": false
      },
      "CustomerActorCustomer": {
        "title": "Customer",
        "required": [
          "customerId",
          "name"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "realms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Realm"
            }
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerActorAccount"
            },
            "readOnly": true,
            "deprecated": true
          },
          "paymentStatus": {
            "$ref": "#/components/schemas/PaymentStatus"
          },
          "activationStatus": {
            "$ref": "#/components/schemas/ActivationStatus"
          },
          "contact": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "CustomerActorRealmConfigResponse": {
        "title": "RealmConfigResponse",
        "type": "object",
        "properties": {
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "GetGamesResponse": {
        "title": "GetGamesResponse",
        "type": "object",
        "properties": {
          "realms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealmView"
            }
          }
        },
        "additionalProperties": false
      },
      "NewGameRequest": {
        "title": "NewGameRequest",
        "required": [
          "gameName"
        ],
        "type": "object",
        "properties": {
          "gameName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RealmView": {
        "title": "RealmView",
        "required": [
          "displayName",
          "realmId"
        ],
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "realmId": {
            "type": "string"
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "sharded": {
            "type": "boolean",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "archived": {
            "type": "boolean"
          },
          "secret": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerActorUpdateGameHierarchyRequest": {
        "title": "UpdateGameHierarchyRequest",
        "required": [
          "realms"
        ],
        "type": "object",
        "properties": {
          "realms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealmView"
            }
          }
        },
        "additionalProperties": false
      },
      "CreateRealmRequest": {
        "title": "CreateRealmRequest",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "plan": {
            "type": "string",
            "nullable": true
          },
          "sharded": {
            "type": "boolean",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RenameRealmRequest": {
        "title": "RenameRealmRequest",
        "required": [
          "newName"
        ],
        "type": "object",
        "properties": {
          "newName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CustomerActorRealmConfigSaveRequest": {
        "title": "RealmConfigSaveRequest",
        "type": "object",
        "properties": {
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "RealmConfigChangeRequest": {
        "title": "RealmConfigChangeRequest",
        "type": "object",
        "properties": {
          "upserts": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "deletes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerActorRealmConfiguration": {
        "title": "RealmConfiguration",
        "required": [
          "environment",
          "microserviceEcrUri",
          "microserviceUri",
          "portalUri",
          "storageBrowserUri",
          "websocketConfig"
        ],
        "type": "object",
        "properties": {
          "environment": {
            "type": "string"
          },
          "websocketConfig": {
            "$ref": "#/components/schemas/CustomerActorWebSocketConfiguration"
          },
          "microserviceUri": {
            "type": "string"
          },
          "microserviceEcrUri": {
            "type": "string"
          },
          "portalUri": {
            "type": "string"
          },
          "storageBrowserUri": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CustomerActorPromoteRealmRequest": {
        "title": "PromoteRealmRequest",
        "required": [
          "sourceRealmId"
        ],
        "type": "object",
        "properties": {
          "sourceRealmId": {
            "type": "string"
          },
          "promotions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotableType"
            },
            "nullable": true
          },
          "contentManifestIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerActorPromoteRealmResponse": {
        "title": "PromoteRealmResponse",
        "required": [
          "sourceRealmId"
        ],
        "type": "object",
        "properties": {
          "sourceRealmId": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerActorPromotionScope"
            }
          }
        },
        "additionalProperties": false
      },
      "CustomerActorAliasAvailableResponse": {
        "title": "AliasAvailableResponse",
        "required": [
          "alias",
          "available"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "available": {
            "type": "boolean"
          },
          "customerId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SetCustomerAliasRequest": {
        "title": "SetCustomerAliasRequest",
        "required": [
          "alias"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PaymentStatus": {
        "title": "PaymentStatus",
        "enum": [
          "Free",
          "Paid",
          "Banned"
        ],
        "type": "string"
      },
      "ActivationStatus": {
        "title": "ActivationStatus",
        "enum": [
          "PENDING",
          "ACTIVATED"
        ],
        "type": "string"
      },
      "CustomerActorWebSocketConfiguration": {
        "title": "WebSocketConfiguration",
        "type": "object",
        "properties": {
          "provider": {
            "type": "string"
          },
          "uri": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Realm": {
        "title": "Realm",
        "required": [
          "name",
          "plan"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "plan": {
            "type": "string"
          },
          "sharded": {
            "type": "boolean",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "isArchived": {
            "type": "boolean",
            "nullable": true
          },
          "customCharts": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "deprecated": true
          }
        },
        "additionalProperties": false
      },
      "CustomerActorAccount": {
        "title": "Account",
        "type": "object",
        "properties": {
          "accountId": {
            "type": "integer",
            "format": "int64"
          },
          "createdTimeMs": {
            "type": "integer",
            "format": "int64"
          },
          "updatedTimeMs": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "realmAssociations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealmAssociation"
            }
          },
          "thirdPartyAssociations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerActorThirdPartyAssociation"
            }
          },
          "external": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerActorExternalIdentity"
            },
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "roleString": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleAssociation"
            },
            "nullable": true
          },
          "deviceIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "realmId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PromotableType": {
        "title": "PromotableType",
        "enum": [
          "Content",
          "Microservices"
        ],
        "type": "string"
      },
      "CustomerActorPromotionScope": {
        "title": "PromotionScope",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/PromotableType"
          },
          "promotions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Promotion"
            }
          }
        },
        "additionalProperties": false
      },
      "RealmAssociation": {
        "title": "RealmAssociation",
        "type": "object",
        "properties": {
          "realmId": {
            "type": "string"
          },
          "playerId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CustomerActorThirdPartyAssociation": {
        "title": "ThirdPartyAssociation",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "userAppId": {
            "type": "string"
          },
          "userBusinessId": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "CustomerActorExternalIdentity": {
        "title": "ExternalIdentity",
        "type": "object",
        "properties": {
          "providerService": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "providerNamespace": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RoleAssociation": {
        "title": "RoleAssociation",
        "type": "object",
        "properties": {
          "realmId": {
            "type": "string"
          },
          "roleString": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Promotion": {
        "title": "Promotion",
        "required": [
          "destination",
          "id",
          "source"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/Promotable"
          },
          "destination": {
            "$ref": "#/components/schemas/Promotable"
          }
        },
        "additionalProperties": false
      },
      "Promotable": {
        "title": "Promotable",
        "required": [
          "checksum",
          "createdAt"
        ],
        "type": "object",
        "properties": {
          "checksum": {
            "type": "string"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "LobbyQueryResponse": {
        "title": "LobbyQueryResponse",
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Lobby"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CreateLobby": {
        "title": "CreateLobby",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "restriction": {
            "$ref": "#/components/schemas/LobbyRestriction"
          },
          "matchType": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "ContentId"
          },
          "playerTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "nullable": true,
            "readOnly": true
          },
          "passcodeLength": {
            "type": "integer",
            "format": "int32"
          },
          "maxPlayers": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Lobby": {
        "title": "Lobby",
        "type": "object",
        "properties": {
          "lobbyId": {
            "type": "string",
            "nullable": true
          },
          "matchType": {
            "$ref": "#/components/schemas/MatchType"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "host": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Gamertag"
          },
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LobbyPlayer"
            },
            "nullable": true,
            "readOnly": true
          },
          "passcode": {
            "type": "string",
            "nullable": true
          },
          "restriction": {
            "$ref": "#/components/schemas/LobbyRestriction"
          },
          "maxPlayers": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SetLobbyResponse": {
        "title": "SetLobbyResponse",
        "type": "object",
        "properties": {
          "lobbyId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JoinLobby": {
        "title": "JoinLobby",
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "nullable": true,
            "readOnly": true
          },
          "passcode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RemoveFromLobby": {
        "title": "RemoveFromLobby",
        "type": "object",
        "properties": {
          "playerId": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Gamertag"
          }
        },
        "additionalProperties": false
      },
      "Acknowledge": {
        "title": "Acknowledge",
        "type": "object",
        "additionalProperties": false
      },
      "UpdateLobby": {
        "title": "UpdateLobby",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "restriction": {
            "$ref": "#/components/schemas/LobbyRestriction"
          },
          "matchType": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "ContentId"
          },
          "maxPlayers": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "newHost": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/UpdateData"
          }
        },
        "additionalProperties": false
      },
      "AddTags": {
        "title": "AddTags",
        "type": "object",
        "properties": {
          "playerId": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Gamertag"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "nullable": true,
            "readOnly": true
          },
          "replace": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RemoveTags": {
        "title": "RemoveTags",
        "type": "object",
        "properties": {
          "playerId": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Gamertag"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CreateFederatedGameServer": {
        "title": "CreateFederatedGameServer",
        "type": "object",
        "properties": {
          "matchType": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "ContentId"
          }
        },
        "additionalProperties": false
      },
      "ApiLobbiesServerPostLobbyResponse": {
        "title": "ApiLobbiesServerPostLobbyResponse"
      },
      "LobbyRestriction": {
        "title": "LobbyRestriction",
        "enum": [
          "Null",
          "Closed",
          "Open"
        ],
        "type": "string"
      },
      "MatchType": {
        "title": "MatchType",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "ContentId"
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamContentProto"
            },
            "nullable": true,
            "readOnly": true
          },
          "waitAfterMinReachedSecs": {
            "type": "integer",
            "format": "int32"
          },
          "maxWaitDurationSecs": {
            "type": "integer",
            "format": "int32"
          },
          "matchingIntervalSecs": {
            "type": "integer",
            "format": "int32"
          },
          "federatedGameServerNamespace": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateData": {
        "title": "UpdateData",
        "type": "object",
        "properties": {
          "updates": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true,
            "readOnly": true
          },
          "deletes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Tag": {
        "title": "Tag",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LobbyPlayer": {
        "title": "LobbyPlayer",
        "type": "object",
        "properties": {
          "playerId": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Gamertag"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "nullable": true,
            "readOnly": true
          },
          "joined": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TeamContentProto": {
        "title": "TeamContentProto",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "maxPlayers": {
            "type": "integer",
            "format": "int32"
          },
          "minPlayers": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MessageRequest": {
        "title": "MessageRequest",
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "nullable": true
          },
          "pid": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Pid"
          },
          "playerId": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Gamertag"
          },
          "channel": {
            "type": "string",
            "nullable": true
          },
          "realmId": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Pid"
          }
        },
        "additionalProperties": false
      },
      "ApiMailboxPublishPostMailboxResponse": {
        "title": "ApiMailboxPublishPostMailboxResponse"
      },
      "CreateParty": {
        "title": "CreateParty",
        "type": "object",
        "properties": {
          "restriction": {
            "type": "string",
            "nullable": true
          },
          "leader": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Gamertag"
          },
          "maxSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Party": {
        "title": "Party",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "restriction": {
            "type": "string",
            "nullable": true
          },
          "leader": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Gamertag"
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true,
            "x-beamable-semantic-type": "Gamertag"
          },
          "maxSize": {
            "type": "integer",
            "format": "int32"
          },
          "pendingInvites": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UpdateParty": {
        "title": "UpdateParty",
        "type": "object",
        "properties": {
          "restriction": {
            "type": "string",
            "nullable": true
          },
          "maxSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PromoteNewLeader": {
        "title": "PromoteNewLeader",
        "type": "object",
        "properties": {
          "playerId": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Gamertag"
          }
        },
        "additionalProperties": false
      },
      "InviteToParty": {
        "title": "InviteToParty",
        "type": "object",
        "properties": {
          "playerId": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Gamertag"
          }
        },
        "additionalProperties": false
      },
      "ApiPartiesInvitePostPartyResponse": {
        "title": "ApiPartiesInvitePostPartyResponse"
      },
      "CancelInviteToParty": {
        "title": "CancelInviteToParty",
        "type": "object",
        "properties": {
          "playerId": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Gamertag"
          }
        },
        "additionalProperties": false
      },
      "ApiPartiesInviteDeletePartyResponse": {
        "title": "ApiPartiesInviteDeletePartyResponse"
      },
      "LeaveParty": {
        "title": "LeaveParty",
        "type": "object",
        "properties": {
          "playerId": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Gamertag"
          }
        },
        "additionalProperties": false
      },
      "ApiPartiesMembersDeletePartyResponse": {
        "title": "ApiPartiesMembersDeletePartyResponse"
      },
      "ApiPlayersLobbiesDeletePlayerLobbyResponse": {
        "title": "ApiPlayersLobbiesDeletePlayerLobbyResponse"
      },
      "ApiPlayersPartiesDeletePlayerPartyResponse": {
        "title": "ApiPlayersPartiesDeletePlayerPartyResponse"
      },
      "PartyInvitesForPlayerResponse": {
        "title": "PartyInvitesForPlayerResponse",
        "type": "object",
        "properties": {
          "invitations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartyInvitation"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PartyInvitation": {
        "title": "PartyInvitation",
        "type": "object",
        "properties": {
          "partyId": {
            "type": "string",
            "nullable": true
          },
          "invitedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TicketQueryResponse": {
        "title": "TicketQueryResponse",
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ticket"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Ticket": {
        "title": "Ticket",
        "type": "object",
        "properties": {
          "ticketId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expires": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "players": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true,
            "x-beamable-semantic-type": "Gamertag"
          },
          "matchType": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "ContentId"
          },
          "matchId": {
            "type": "string",
            "nullable": true
          },
          "stringProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true,
            "readOnly": true
          },
          "numberProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            },
            "nullable": true,
            "readOnly": true
          },
          "team": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "partyId": {
            "type": "string",
            "nullable": true
          },
          "watchOnlineStatus": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "nullable": true,
            "readOnly": true
          },
          "lobbyId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OnlineStatusQuery": {
        "title": "OnlineStatusQuery",
        "type": "object",
        "properties": {
          "playerIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "PlayersStatusResponse": {
        "title": "PlayersStatusResponse",
        "type": "object",
        "properties": {
          "playersStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnlineStatus"
            }
          }
        },
        "additionalProperties": false
      },
      "OnlineStatus": {
        "title": "OnlineStatus",
        "type": "object",
        "properties": {
          "online": {
            "type": "boolean"
          },
          "lastOnline": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "playerId": {
            "type": "string",
            "nullable": true,
            "x-beamable-semantic-type": "Gamertag"
          },
          "status": {
            "$ref": "#/components/schemas/PresenceStatus"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PresenceStatus": {
        "title": "PresenceStatus",
        "enum": [
          "Visible",
          "Invisible",
          "Dnd",
          "Away"
        ],
        "type": "string"
      },
      "JobExecutionEvent": {
        "title": "JobExecutionEvent",
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string"
          },
          "executionId": {
            "type": "string",
            "nullable": true
          },
          "jobDefinition": {
            "$ref": "#/components/schemas/JobDefinition"
          },
          "retryPolicy": {
            "$ref": "#/components/schemas/JobRetryPolicy"
          },
          "executionTime": {
            "type": "string",
            "format": "date-time"
          },
          "retryCount": {
            "type": "integer",
            "format": "int32"
          },
          "executionKey": {
            "type": "string",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "JobExecutionResult": {
        "title": "JobExecutionResult",
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "JobDefinitionSaveRequest": {
        "title": "JobDefinitionSaveRequest",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "triggers": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CronTrigger"
                },
                {
                  "$ref": "#/components/schemas/ExactTrigger"
                }
              ]
            }
          },
          "jobAction": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/HttpCall"
              },
              {
                "$ref": "#/components/schemas/PublishMessage"
              },
              {
                "$ref": "#/components/schemas/ServiceCall"
              }
            ]
          },
          "retryPolicy": {
            "$ref": "#/components/schemas/JobRetryPolicy"
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "isUnique": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JobDefinitionView": {
        "title": "JobDefinitionView",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "triggers": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CronTrigger"
                },
                {
                  "$ref": "#/components/schemas/ExactTrigger"
                }
              ]
            }
          },
          "jobAction": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/HttpCall"
              },
              {
                "$ref": "#/components/schemas/PublishMessage"
              },
              {
                "$ref": "#/components/schemas/ServiceCall"
              }
            ]
          },
          "retryPolicy": {
            "$ref": "#/components/schemas/JobRetryPolicy"
          },
          "lastUpdate": {
            "type": "string",
            "format": "date-time"
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "isUnique": {
            "type": "boolean"
          },
          "suspendedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "analytics": {
            "$ref": "#/components/schemas/JobAnalytics"
          },
          "owner": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ApiSchedulerJobsGetSchedulerResponse": {
        "title": "ApiSchedulerJobsGetSchedulerResponse",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/JobDefinition"
        }
      },
      "JobDefinitionViewCursorPagedResult": {
        "title": "JobDefinitionViewCursorPagedResult",
        "type": "object",
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobDefinitionView"
            }
          },
          "nextCursor": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiSchedulerJobDeleteSchedulerResponse": {
        "title": "ApiSchedulerJobDeleteSchedulerResponse"
      },
      "ApiSchedulerJobActivityGetSchedulerResponse": {
        "title": "ApiSchedulerJobActivityGetSchedulerResponse",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/JobActivity"
        }
      },
      "JobActivityViewCursorPagedResult": {
        "title": "JobActivityViewCursorPagedResult",
        "type": "object",
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobActivityView"
            }
          },
          "nextCursor": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiSchedulerJobNextExecutionsGetSchedulerResponse": {
        "title": "ApiSchedulerJobNextExecutionsGetSchedulerResponse",
        "type": "array",
        "items": {
          "type": "string",
          "format": "date-time"
        }
      },
      "ApiSchedulerJobCancelPutSchedulerResponse": {
        "title": "ApiSchedulerJobCancelPutSchedulerResponse"
      },
      "JobDefinition": {
        "title": "JobDefinition",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "triggers": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CronTrigger"
                },
                {
                  "$ref": "#/components/schemas/ExactTrigger"
                }
              ]
            }
          },
          "jobAction": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/HttpCall"
              },
              {
                "$ref": "#/components/schemas/PublishMessage"
              },
              {
                "$ref": "#/components/schemas/ServiceCall"
              }
            ]
          },
          "retryPolicy": {
            "$ref": "#/components/schemas/JobRetryPolicy"
          },
          "lastUpdate": {
            "type": "string",
            "format": "date-time"
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "nonce": {
            "type": "string",
            "nullable": true
          },
          "isUnique": {
            "type": "boolean"
          },
          "suspendedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "analytics": {
            "$ref": "#/components/schemas/JobAnalytics"
          }
        },
        "additionalProperties": false
      },
      "JobRetryPolicy": {
        "title": "JobRetryPolicy",
        "type": "object",
        "properties": {
          "maxRetryCount": {
            "type": "integer",
            "format": "int32"
          },
          "retryDelayMs": {
            "type": "integer",
            "format": "int32"
          },
          "useExponentialBackoff": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "JobAnalytics": {
        "title": "JobAnalytics",
        "type": "object",
        "properties": {
          "consecutiveFailures": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HttpCall": {
        "title": "HttpCall",
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringStringKeyValuePair"
            },
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PublishMessage": {
        "title": "PublishMessage",
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "topic": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "persist": {
            "type": "boolean"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceCall": {
        "title": "ServiceCall",
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringStringKeyValuePair"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JobActivity": {
        "title": "JobActivity",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "jobId": {
            "type": "string"
          },
          "executionId": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "$ref": "#/components/schemas/JobState"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "jobName": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "JobActivityView": {
        "title": "JobActivityView",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "jobId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "$ref": "#/components/schemas/JobState"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "jobName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CronTrigger": {
        "title": "CronTrigger",
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "expression": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ExactTrigger": {
        "title": "ExactTrigger",
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "executeAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "JobState": {
        "title": "JobState",
        "enum": [
          "ENQUEUED",
          "DISPATCHED",
          "RUNNING",
          "DONE",
          "CANCELED",
          "SUSPENDED",
          "ERROR"
        ],
        "type": "string"
      },
      "StringStringKeyValuePair": {
        "title": "StringStringKeyValuePair",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServicePlanActorServicePlansResponse": {
        "title": "ServicePlansResponse",
        "type": "object",
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServicePlanActorServicePlan"
            }
          }
        },
        "additionalProperties": false
      },
      "CreateServicePlanRequest": {
        "title": "CreateServicePlanRequest",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "mongoHosts": {
            "type": "string"
          },
          "mongoSharded": {
            "type": "boolean"
          },
          "mongoTls": {
            "type": "boolean"
          },
          "redisShards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RedisShardRequest"
            }
          },
          "messageBusAnalytics": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "messageBusCommon": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "mongoSrvAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServicePlanActorServicePlan": {
        "title": "ServicePlan",
        "required": [
          "dataDomain",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "dataDomain": {
            "$ref": "#/components/schemas/ServicePlanActorDataDomain"
          },
          "serviceLimits": {
            "$ref": "#/components/schemas/ServicePlanActorServiceLimits"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ServicePlanActorDataDomain": {
        "title": "DataDomain",
        "type": "object",
        "properties": {
          "mongoHosts": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mongoSrvAddress": {
            "type": "string",
            "nullable": true
          },
          "mongoSharded": {
            "type": "boolean"
          },
          "mongoTls": {
            "type": "boolean"
          },
          "messageBusCommon": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "messageBusAnalytics": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "redisShards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServicePlanActorRedisShard"
            }
          }
        },
        "additionalProperties": false
      },
      "ServicePlanActorServiceLimits": {
        "title": "ServiceLimits",
        "type": "object",
        "properties": {
          "beamo": {
            "$ref": "#/components/schemas/ServicePlanActorBeamoLimits"
          }
        },
        "additionalProperties": false
      },
      "RedisShardRequest": {
        "title": "RedisShardRequest",
        "required": [
          "masterHost",
          "shardId",
          "slaveHosts"
        ],
        "type": "object",
        "properties": {
          "shardId": {
            "type": "integer",
            "format": "int32"
          },
          "masterHost": {
            "type": "string"
          },
          "slaveHosts": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ServicePlanActorBeamoLimits": {
        "title": "BeamoLimits",
        "type": "object",
        "additionalProperties": false
      },
      "ServicePlanActorRedisShard": {
        "title": "RedisShard",
        "type": "object",
        "properties": {
          "shardId": {
            "type": "integer",
            "format": "int32"
          },
          "masterHost": {
            "type": "string"
          },
          "slaveHosts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "Match": {
        "title": "Match",
        "type": "object",
        "properties": {
          "matchId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "matchType": {
            "$ref": "#/components/schemas/MatchType"
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Team"
            },
            "nullable": true,
            "readOnly": true
          },
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ticket"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Team": {
        "title": "Team",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "players": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true,
            "x-beamable-semantic-type": "Gamertag"
          }
        },
        "additionalProperties": false
      },
      "TicketReservationRequest": {
        "title": "TicketReservationRequest",
        "type": "object",
        "properties": {
          "players": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true,
            "x-beamable-semantic-type": "Gamertag"
          },
          "matchTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true,
            "x-beamable-semantic-type": "ContentId"
          },
          "maxWaitDurationSecs": {
            "type": "integer",
            "format": "int32"
          },
          "team": {
            "type": "string",
            "nullable": true
          },
          "watchOnlineStatus": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TicketReservationResponse": {
        "title": "TicketReservationResponse",
        "type": "object",
        "properties": {
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ticket"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ApiMatchmakingTicketsDeleteTicketResponse": {
        "title": "ApiMatchmakingTicketsDeleteTicketResponse"
      },
      "ApiPlayersPresencePutPlayerPresenceResponse": {
        "title": "ApiPlayersPresencePutPlayerPresenceResponse"
      },
      "SetPresenceStatusRequest": {
        "title": "SetPresenceStatusRequest",
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/PresenceStatus"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReferenceSuperset": {
        "title": "ReferenceSuperset",
        "required": [
          "type",
          "id",
          "version",
          "uri"
        ],
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "uri": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "x-beamable-semantic-type": "ContentId"
          },
          "checksum": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "visibility": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BinaryDefinition": {
        "title": "BinaryDefinition",
        "required": [
          "id",
          "checksum",
          "uploadContentType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "x-beamable-semantic-type": "ContentId"
          },
          "checksum": {
            "type": "string"
          },
          "uploadContentType": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "PullManifestRequest": {
        "title": "Pull Manifest Request",
        "required": [
          "sourceRealmPid"
        ],
        "type": "object",
        "properties": {
          "sourceRealmPid": {
            "type": "string",
            "x-beamable-semantic-type": "Pid"
          },
          "id": {
            "type": "string",
            "x-beamable-semantic-type": "ContentManifestId"
          }
        },
        "additionalProperties": false
      },
      "ContentBasicGetManifestsResponse": {
        "title": "Get Manifests Response",
        "required": [
          "manifests"
        ],
        "type": "object",
        "properties": {
          "manifests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentBasicManifest"
            }
          }
        },
        "additionalProperties": false
      },
      "ClientContentInfoJson": {
        "title": "ClientContentInfoJson",
        "required": [
          "contentId",
          "version",
          "uri",
          "tags",
          "type"
        ],
        "type": "object",
        "properties": {
          "updatedAt": {
            "type": "integer",
            "format": "int64"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "uri": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "checksum": {
            "type": "string"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "contentId": {
            "type": "string",
            "x-beamable-semantic-type": "ContentId"
          },
          "type": {
            "$ref": "#/components/schemas/ContentType"
          }
        },
        "additionalProperties": false
      },
      "SaveBinaryRequest": {
        "title": "Save Binary Request",
        "required": [
          "binary"
        ],
        "type": "object",
        "properties": {
          "binary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BinaryDefinition"
            }
          }
        },
        "additionalProperties": false
      },
      "TextReference": {
        "title": "text",
        "required": [
          "type",
          "id",
          "version",
          "uri",
          "tags",
          "visibility"
        ],
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "uri": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "x-beamable-semantic-type": "ContentId"
          },
          "checksum": {
            "type": "string"
          },
          "lastChanged": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "enum": [
              "text"
            ],
            "type": "string",
            "default": "text"
          },
          "visibility": {
            "type": "string"
          },
          "created": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "SaveBinaryResponse": {
        "title": "Save Binary Response",
        "required": [
          "binary"
        ],
        "type": "object",
        "properties": {
          "binary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BinaryReference"
            }
          }
        },
        "additionalProperties": false
      },
      "SaveTextRequest": {
        "title": "Save Text Request",
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TextDefinition"
            }
          }
        },
        "additionalProperties": false
      },
      "TextDefinition": {
        "title": "TextDefinition",
        "required": [
          "id",
          "checksum",
          "properties"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "x-beamable-semantic-type": "ContentId"
          },
          "checksum": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "PutLocalizationsRequest": {
        "title": "Put Localizations Request",
        "required": [
          "localizations"
        ],
        "type": "object",
        "properties": {
          "localizations": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LocalizedValue"
              }
            }
          }
        },
        "additionalProperties": false
      },
      "ContentOrText": {
        "title": "Content Or Text",
        "required": [
          "id",
          "version",
          "properties"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "x-beamable-semantic-type": "ContentId"
          },
          "version": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "CommonResponse": {
        "title": "Common Response",
        "required": [
          "result",
          "data"
        ],
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "GetManifestDiffsRequest": {
        "title": "Get Manifest Diffs Request",
        "required": [
          "manifestId"
        ],
        "type": "object",
        "properties": {
          "manifestId": {
            "type": "string",
            "x-beamable-semantic-type": "ContentManifestId"
          },
          "fromUid": {
            "type": "string"
          },
          "toUid": {
            "type": "string"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "fromDate": {
            "type": "integer",
            "format": "int64"
          },
          "toDate": {
            "type": "integer",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ArchiveOrUnarchiveManifestsRequest": {
        "title": "Archive Or Unarchive Manifests Request",
        "required": [
          "manifestIds"
        ],
        "type": "object",
        "properties": {
          "manifestIds": {
            "type": "array",
            "items": {
              "type": "string",
              "x-beamable-semantic-type": "ContentManifestId"
            }
          }
        },
        "additionalProperties": false
      },
      "ContentMeta": {
        "title": "ContentMeta",
        "required": [
          "visibility"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OptionalJsonNodeWrapper"
          },
          "text": {
            "type": "string"
          },
          "$links": {
            "type": "array",
            "items": {
              "type": "string",
              "x-beamable-semantic-type": "ContentId"
            }
          },
          "$link": {
            "type": "string",
            "x-beamable-semantic-type": "ContentId"
          },
          "visibility": {
            "$ref": "#/components/schemas/ContentVisibility"
          }
        },
        "additionalProperties": false
      },
      "GetExactManifestRequest": {
        "title": "Get Exact Manifest Request",
        "required": [
          "uid"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BinaryReference": {
        "title": "binary",
        "required": [
          "type",
          "id",
          "tags",
          "version",
          "uri",
          "uploadUri",
          "uploadMethod",
          "visibility"
        ],
        "type": "object",
        "properties": {
          "uploadMethod": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "uri": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "x-beamable-semantic-type": "ContentId"
          },
          "checksum": {
            "type": "string"
          },
          "lastChanged": {
            "type": "string"
          },
          "uploadUri": {
            "type": "string"
          },
          "type": {
            "enum": [
              "binary"
            ],
            "type": "string",
            "default": "binary"
          },
          "visibility": {
            "type": "string"
          },
          "created": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ContentBasicGetManifestRequest": {
        "title": "Get Manifest Request",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the content manifest",
            "x-beamable-semantic-type": "ContentManifestId"
          },
          "uid": {
            "type": "string",
            "description": "UID of the content manifest"
          }
        },
        "additionalProperties": false
      },
      "PullAllManifestsRequest": {
        "title": "Pull All Manifests Request",
        "required": [
          "sourceRealmPid"
        ],
        "type": "object",
        "properties": {
          "sourceRealmPid": {
            "type": "string",
            "x-beamable-semantic-type": "Pid"
          }
        },
        "additionalProperties": false
      },
      "ClientManifestJsonResponse": {
        "title": "Client Manifest Json Response",
        "required": [
          "entries"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientContentInfoJson"
            }
          },
          "publisherAccountId": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GetManifestHistoryRequest": {
        "title": "Get Manifest History Request",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "x-beamable-semantic-type": "ContentManifestId"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ContentDefinition": {
        "title": "ContentDefinition",
        "required": [
          "id",
          "checksum",
          "properties"
        ],
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "x-beamable-semantic-type": "ContentId"
          },
          "checksum": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ContentMeta"
            }
          },
          "variants": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/ContentMeta"
              }
            }
          }
        },
        "additionalProperties": false
      },
      "ClientManifestResponse": {
        "title": "Client Manifest Response",
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientContentInfo"
            }
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "latestUpdate": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GetManifestRequestJson": {
        "title": "Get Manifest Request Json",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Content ID of the content manifest",
            "x-beamable-semantic-type": "ContentManifestId"
          },
          "uid": {
            "type": "string",
            "description": "UID of the content manifest"
          }
        },
        "additionalProperties": false
      },
      "ManifestDiffSummary": {
        "title": "ManifestDiffSummary",
        "required": [
          "manifestUid",
          "diffUrl",
          "createdDate"
        ],
        "type": "object",
        "properties": {
          "manifestUid": {
            "type": "string"
          },
          "diffUrl": {
            "type": "string"
          },
          "createdDate": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ContentBasicManifestChecksum": {
        "title": "ManifestChecksum",
        "required": [
          "id",
          "checksum",
          "createdAt"
        ],
        "type": "object",
        "properties": {
          "archived": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "x-beamable-semantic-type": "ContentManifestId"
          },
          "checksum": {
            "type": "string"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "uid": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SaveContentRequest": {
        "title": "Save Content Request",
        "required": [
          "content"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentDefinition"
            }
          }
        },
        "additionalProperties": false
      },
      "SaveManifestRequest": {
        "title": "Save Manifest Request",
        "required": [
          "id",
          "references"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "x-beamable-semantic-type": "ContentManifestId"
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferenceSuperset"
            }
          }
        },
        "additionalProperties": false
      },
      "SaveManifestResponse": {
        "title": "Save Manifest Response",
        "required": [
          "id",
          "uid",
          "checksum",
          "created"
        ],
        "type": "object",
        "properties": {
          "diffUrl": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "checksum": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "created": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RepeatManifestRequest": {
        "title": "Repeat Manifest Request",
        "required": [
          "uid"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ContentVisibility": {
        "title": "ContentVisibility",
        "enum": [
          "public",
          "private"
        ],
        "type": "string"
      },
      "ContentBasicManifest": {
        "title": "Manifest",
        "required": [
          "id",
          "references",
          "checksum",
          "created"
        ],
        "type": "object",
        "properties": {
          "archived": {
            "type": "boolean"
          },
          "diffObjectKey": {
            "type": "string"
          },
          "references": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ContentReference"
                },
                {
                  "$ref": "#/components/schemas/TextReference"
                },
                {
                  "$ref": "#/components/schemas/BinaryReference"
                }
              ]
            }
          },
          "publisherAccountId": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "string",
            "x-beamable-semantic-type": "ContentManifestId"
          },
          "checksum": {
            "type": "string"
          },
          "lastChanged": {
            "type": "integer",
            "format": "int64"
          },
          "uid": {
            "type": "string"
          },
          "created": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "OptionalJsonNodeWrapper": {
        "title": "OptionalJsonNodeWrapper",
        "type": "object",
        "properties": {
          "node": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-beamable-json-object": true
      },
      "LocalizationQuery": {
        "title": "LocalizationQuery",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "EmptyResponse": {
        "title": "Empty Response",
        "required": [
          "result"
        ],
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetManifestDiffsResponse": {
        "title": "Get Manifest Diffs Response",
        "required": [
          "manifestId",
          "diffs",
          "hasMore",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "manifestId": {
            "type": "string"
          },
          "diffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ManifestDiffSummary"
            }
          },
          "hasMore": {
            "type": "boolean"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetLocalizationsResponse": {
        "title": "Get Localizations Response",
        "required": [
          "localizations"
        ],
        "type": "object",
        "properties": {
          "localizations": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LocalizedValue"
              }
            }
          }
        },
        "additionalProperties": false
      },
      "GetContentRequest": {
        "title": "Get Content Request",
        "required": [
          "contentId",
          "version"
        ],
        "type": "object",
        "properties": {
          "contentId": {
            "type": "string",
            "x-beamable-semantic-type": "ContentId"
          },
          "version": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LocalizedValue": {
        "title": "LocalizedValue",
        "required": [
          "language",
          "value"
        ],
        "type": "object",
        "properties": {
          "language": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ContentBasicManifestChecksums": {
        "title": "Manifest Checksums",
        "required": [
          "manifests"
        ],
        "type": "object",
        "properties": {
          "manifests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentBasicManifestChecksum"
            }
          }
        },
        "additionalProperties": false
      },
      "SaveTextResponse": {
        "title": "Save Text Response",
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TextReference"
            }
          }
        },
        "additionalProperties": false
      },
      "ManifestSummary": {
        "title": "ManifestSummary",
        "required": [
          "uid",
          "manifest"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "manifest": {
            "$ref": "#/components/schemas/ContentBasicManifestChecksum"
          }
        },
        "additionalProperties": false
      },
      "DeleteLocalizationRequest": {
        "title": "Delete Localization Request",
        "required": [
          "localizations"
        ],
        "type": "object",
        "properties": {
          "localizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationQuery"
            }
          }
        },
        "additionalProperties": false
      },
      "ClientContentInfo": {
        "title": "ClientContentInfo",
        "required": [
          "contentId",
          "version",
          "uri",
          "tags",
          "type"
        ],
        "type": "object",
        "properties": {
          "updatedAt": {
            "type": "integer",
            "format": "int64"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "uri": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "checksum": {
            "type": "string"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "contentId": {
            "type": "string",
            "x-beamable-semantic-type": "ContentId"
          },
          "type": {
            "$ref": "#/components/schemas/ContentType"
          }
        },
        "additionalProperties": false,
        "x-beamable-primary-key": "contentId",
        "x-beamable-csv-order": "type,contentId,version,uri,tags"
      },
      "ContentType": {
        "title": "ContentType",
        "enum": [
          "content",
          "text",
          "binary"
        ],
        "type": "string"
      },
      "GetManifestHistoryResponse": {
        "title": "Get Manifest History Response",
        "required": [
          "manifests"
        ],
        "type": "object",
        "properties": {
          "manifests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ManifestSummary"
            }
          }
        },
        "additionalProperties": false
      },
      "SaveContentResponse": {
        "title": "Save Content Response",
        "required": [
          "content"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentReference"
            }
          }
        },
        "additionalProperties": false
      },
      "ContentReference": {
        "title": "content",
        "required": [
          "type",
          "id",
          "tags",
          "version",
          "uri",
          "visibility",
          "tag"
        ],
        "type": "object",
        "properties": {
          "tag": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "uri": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "x-beamable-semantic-type": "ContentId"
          },
          "checksum": {
            "type": "string"
          },
          "lastChanged": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "enum": [
              "content"
            ],
            "type": "string",
            "default": "content"
          },
          "visibility": {
            "$ref": "#/components/schemas/ContentVisibility"
          },
          "created": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "PullBeamoManifestRequest": {
        "title": "Pull Beamo Manifest Request",
        "required": [
          "sourceRealmPid"
        ],
        "type": "object",
        "properties": {
          "sourceRealmPid": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SupportedFederation": {
        "title": "SupportedFederation",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FederationType"
          },
          "nameSpace": {
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/OptionalJsonNodeWrapper"
          }
        },
        "additionalProperties": false
      },
      "BeamoBasicGetManifestsResponse": {
        "title": "Get Manifests Response",
        "required": [
          "manifests"
        ],
        "type": "object",
        "properties": {
          "manifests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ManifestView"
            }
          }
        },
        "additionalProperties": false
      },
      "GetLogsUrlRequest": {
        "title": "Get Logs Url Request",
        "required": [
          "serviceName"
        ],
        "type": "object",
        "properties": {
          "startTime": {
            "type": "integer",
            "format": "int64"
          },
          "serviceName": {
            "type": "string"
          },
          "nextToken": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "endTime": {
            "type": "integer",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetLogsUrlHeader": {
        "title": "GetLogsUrlHeader",
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UploadURL": {
        "title": "UploadURL",
        "required": [
          "key",
          "url"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetManifestsRequest": {
        "title": "Get Manifests Request",
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "archived": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetCurrentManifestRequest": {
        "title": "Get Current Manifest Request",
        "type": "object",
        "properties": {
          "archived": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DatabasePerformanceRequest": {
        "title": "Database Performance Request",
        "required": [
          "storageObjectName",
          "granularity"
        ],
        "type": "object",
        "properties": {
          "endDate": {
            "type": "string"
          },
          "storageObjectName": {
            "type": "string"
          },
          "granularity": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "period": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ServiceImageLayers": {
        "title": "ServiceImageLayers",
        "required": [
          "service",
          "layers"
        ],
        "type": "object",
        "properties": {
          "service": {
            "$ref": "#/components/schemas/BeamoBasicReference"
          },
          "layers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "MicroserviceRegistrationsQuery": {
        "title": "Microservice Registrations Query",
        "type": "object",
        "properties": {
          "serviceName": {
            "type": "string"
          },
          "routingKey": {
            "type": "string"
          },
          "federation": {
            "$ref": "#/components/schemas/SupportedFederation"
          },
          "localOnly": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PostManifestRequest": {
        "title": "Post Manifest Request",
        "required": [
          "manifest"
        ],
        "type": "object",
        "properties": {
          "manifest": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceReference"
            }
          },
          "comments": {
            "type": "string"
          },
          "autoDeploy": {
            "type": "boolean"
          },
          "storageReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceStorageReference"
            }
          }
        },
        "additionalProperties": false
      },
      "ServiceStorageStatus": {
        "title": "ServiceStorageStatus",
        "required": [
          "id",
          "storageType",
          "isRunning",
          "isCurrent"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "storageType": {
            "type": "string"
          },
          "isRunning": {
            "type": "boolean"
          },
          "isCurrent": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PASlowQuery": {
        "title": "PASlowQuery",
        "required": [
          "line",
          "namespace"
        ],
        "type": "object",
        "properties": {
          "line": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetSignedUrlResponse": {
        "title": "Get Signed Url Response",
        "required": [
          "headers",
          "url",
          "body",
          "method"
        ],
        "type": "object",
        "properties": {
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetLogsUrlHeader"
            }
          },
          "url": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "method": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PreSignedUrlsResponse": {
        "title": "Pre Signed Urls Response",
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoBasicURLResponse"
            }
          }
        },
        "additionalProperties": false
      },
      "ConnectionString": {
        "title": "Connection String",
        "required": [
          "connectionString"
        ],
        "type": "object",
        "properties": {
          "connectionString": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ServiceTemplate": {
        "title": "ServiceTemplate",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MicroserviceRegistrationRequest": {
        "title": "Microservice Registration Request",
        "required": [
          "serviceName"
        ],
        "type": "object",
        "properties": {
          "serviceName": {
            "type": "string"
          },
          "routingKey": {
            "type": "string"
          },
          "federation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupportedFederation"
            }
          },
          "trafficFilterEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BeamoBasicGetManifestRequest": {
        "title": "Get Manifest Request",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DatabaseMeasurement": {
        "title": "DatabaseMeasurement",
        "required": [
          "dataPoints",
          "name",
          "units"
        ],
        "type": "object",
        "properties": {
          "dataPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPoint"
            }
          },
          "name": {
            "type": "string"
          },
          "units": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MicroserviceRegistrations": {
        "title": "MicroserviceRegistrations",
        "required": [
          "instanceCount",
          "serviceName",
          "cid",
          "pid"
        ],
        "type": "object",
        "properties": {
          "routingKey": {
            "type": "string"
          },
          "serviceName": {
            "type": "string"
          },
          "trafficFilterEnabled": {
            "type": "boolean"
          },
          "cid": {
            "type": "string"
          },
          "pid": {
            "type": "string"
          },
          "instanceCount": {
            "type": "integer",
            "format": "int32"
          },
          "startedById": {
            "type": "integer",
            "format": "int64"
          },
          "federation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupportedFederation"
            }
          },
          "beamoName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Query": {
        "title": "Query",
        "required": [
          "queryId"
        ],
        "type": "object",
        "properties": {
          "queryId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BeamoBasicURLResponse": {
        "title": "URLResponse",
        "required": [
          "serviceName",
          "s3URLs"
        ],
        "type": "object",
        "properties": {
          "serviceName": {
            "type": "string"
          },
          "s3URLs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UploadURL"
            }
          }
        },
        "additionalProperties": false
      },
      "ManifestView": {
        "title": "ManifestView",
        "required": [
          "id",
          "manifest",
          "created",
          "checksum"
        ],
        "type": "object",
        "properties": {
          "createdByAccountId": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "string"
          },
          "checksum": {
            "type": "string"
          },
          "storageReference": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceStorageReference"
            }
          },
          "manifest": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceReference"
            }
          },
          "created": {
            "type": "integer",
            "format": "int64"
          },
          "comments": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetLogsInsightUrlRequest": {
        "title": "Get Logs Insight Url Request",
        "required": [
          "serviceName"
        ],
        "type": "object",
        "properties": {
          "startTime": {
            "type": "integer",
            "format": "int64"
          },
          "serviceName": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "endTime": {
            "type": "integer",
            "format": "int64"
          },
          "order": {
            "type": "string"
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ServiceDependencyReference": {
        "title": "ServiceDependencyReference",
        "required": [
          "id",
          "storageType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "storageType": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BeamoBasicManifestChecksum": {
        "title": "ManifestChecksum",
        "required": [
          "id",
          "checksum",
          "createdAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "checksum": {
            "type": "string"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "DataPoint": {
        "title": "DataPoint",
        "required": [
          "timestamp",
          "value"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MicroserviceSecretResponse": {
        "title": "Microservice Secret Response",
        "required": [
          "secret"
        ],
        "type": "object",
        "properties": {
          "secret": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BeamoBasicReference": {
        "title": "Reference",
        "required": [
          "arm",
          "archived"
        ],
        "type": "object",
        "properties": {
          "arm": {
            "type": "boolean"
          },
          "archived": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ServiceStatus": {
        "title": "ServiceStatus",
        "required": [
          "serviceName",
          "running",
          "imageId",
          "isCurrent"
        ],
        "type": "object",
        "properties": {
          "isCurrent": {
            "type": "boolean"
          },
          "running": {
            "type": "boolean"
          },
          "serviceName": {
            "type": "string"
          },
          "imageId": {
            "type": "string"
          },
          "serviceDependencyReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceDependencyReference"
            }
          }
        },
        "additionalProperties": false
      },
      "MicroserviceRegistrationsResponse": {
        "title": "Microservice Registrations Response",
        "required": [
          "registrations"
        ],
        "type": "object",
        "properties": {
          "registrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MicroserviceRegistrations"
            }
          }
        },
        "additionalProperties": false
      },
      "PASuggestedIndex": {
        "title": "PASuggestedIndex",
        "required": [
          "id",
          "impact",
          "index",
          "namespace",
          "weight"
        ],
        "type": "object",
        "properties": {
          "weight": {
            "type": "string"
          },
          "impact": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "index": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "GetLambdaURI": {
        "title": "Get Lambda URI",
        "required": [
          "uri"
        ],
        "type": "object",
        "properties": {
          "uri": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetManifestResponse": {
        "title": "Get Manifest Response",
        "required": [
          "manifest"
        ],
        "type": "object",
        "properties": {
          "manifest": {
            "$ref": "#/components/schemas/ManifestView"
          }
        },
        "additionalProperties": false
      },
      "DatabaseMeasurements": {
        "title": "DatabaseMeasurements",
        "required": [
          "databaseName",
          "links"
        ],
        "type": "object",
        "properties": {
          "measurements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DatabaseMeasurement"
            }
          },
          "groupId": {
            "type": "string"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "hostId": {
            "type": "string"
          },
          "granularity": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "databaseName": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "processId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ServiceReference": {
        "title": "ServiceReference",
        "required": [
          "serviceName",
          "enabled",
          "imageId",
          "templateId",
          "archived",
          "checksum",
          "arm"
        ],
        "type": "object",
        "properties": {
          "containerHealthCheckPort": {
            "type": "integer",
            "format": "int64"
          },
          "archived": {
            "type": "boolean"
          },
          "serviceName": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceComponent"
            }
          },
          "arm": {
            "type": "boolean"
          },
          "checksum": {
            "type": "string"
          },
          "templateId": {
            "type": "string"
          },
          "imageId": {
            "type": "string"
          },
          "imageCpuArch": {
            "type": "string"
          },
          "dependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceDependencyReference"
            }
          },
          "comments": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetStatusResponse": {
        "title": "Get Status Response",
        "required": [
          "services",
          "isCurrent"
        ],
        "type": "object",
        "properties": {
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceStatus"
            }
          },
          "isCurrent": {
            "type": "boolean"
          },
          "storageStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceStorageStatus"
            }
          }
        },
        "additionalProperties": false
      },
      "ServiceComponent": {
        "title": "ServiceComponent",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PerformanceResponse": {
        "title": "Performance Response",
        "required": [
          "namespaces",
          "indexes",
          "queries",
          "databaseMeasurements"
        ],
        "type": "object",
        "properties": {
          "namespaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PANamespace"
            }
          },
          "indexes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PASuggestedIndex"
            }
          },
          "queries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PASlowQuery"
            }
          },
          "databaseMeasurements": {
            "$ref": "#/components/schemas/DatabaseMeasurements"
          }
        },
        "additionalProperties": false
      },
      "GetTemplatesResponse": {
        "title": "Get Templates Response",
        "required": [
          "templates"
        ],
        "type": "object",
        "properties": {
          "templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceTemplate"
            }
          }
        },
        "additionalProperties": false
      },
      "ServiceStorageReference": {
        "title": "ServiceStorageReference",
        "required": [
          "id",
          "storageType",
          "enabled",
          "archived",
          "checksum"
        ],
        "type": "object",
        "properties": {
          "archived": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "storageType": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "checksum": {
            "type": "string"
          },
          "templateId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SupportedFederationRegistration": {
        "title": "SupportedFederationRegistration",
        "required": [
          "serviceName",
          "trafficFilterEnabled"
        ],
        "type": "object",
        "properties": {
          "serviceName": {
            "type": "string"
          },
          "routingKey": {
            "type": "string"
          },
          "federation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupportedFederation"
            }
          },
          "trafficFilterEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SupportedFederationsResponse": {
        "title": "Supported Federations Response",
        "required": [
          "registrations"
        ],
        "type": "object",
        "properties": {
          "registrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupportedFederationRegistration"
            }
          }
        },
        "additionalProperties": false
      },
      "BeamoBasicManifestChecksums": {
        "title": "Manifest Checksums",
        "required": [
          "manifests"
        ],
        "type": "object",
        "properties": {
          "manifests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeamoBasicManifestChecksum"
            }
          }
        },
        "additionalProperties": false
      },
      "LambdaResponse": {
        "title": "Lambda Response",
        "required": [
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "body": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetCurrentManifestResponse": {
        "title": "Get Current Manifest Response",
        "required": [
          "manifest"
        ],
        "type": "object",
        "properties": {
          "manifest": {
            "$ref": "#/components/schemas/ManifestView"
          }
        },
        "additionalProperties": false
      },
      "GetServiceURLsRequest": {
        "title": "Get Service UR Ls Request",
        "required": [
          "requests"
        ],
        "type": "object",
        "properties": {
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceImageLayers"
            }
          }
        },
        "additionalProperties": false
      },
      "FederationType": {
        "title": "FederationType",
        "enum": [
          "IFederatedPlayerInit",
          "IFederatedInventory",
          "IFederatedLogin",
          "IFederatedGameServer",
          "IFederatedCommerce"
        ],
        "type": "string"
      },
      "PostManifestResponse": {
        "title": "Post Manifest Response",
        "type": "object",
        "properties": {
          "manifest": {
            "$ref": "#/components/schemas/BeamoBasicManifestChecksum"
          }
        },
        "additionalProperties": false
      },
      "GetMetricsUrlRequest": {
        "title": "Get Metrics Url Request",
        "required": [
          "serviceName",
          "metricName"
        ],
        "type": "object",
        "properties": {
          "startTime": {
            "type": "integer",
            "format": "int64"
          },
          "serviceName": {
            "type": "string"
          },
          "metricName": {
            "type": "string"
          },
          "endTime": {
            "type": "integer",
            "format": "int64"
          },
          "period": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CommitImageRequest": {
        "title": "Commit Image Request",
        "required": [
          "service"
        ],
        "type": "object",
        "properties": {
          "service": {
            "$ref": "#/components/schemas/BeamoBasicReference"
          }
        },
        "additionalProperties": false
      },
      "GetElasticContainerRegistryURI": {
        "title": "Get Elastic Container Registry URI",
        "required": [
          "uri"
        ],
        "type": "object",
        "properties": {
          "uri": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PANamespace": {
        "title": "PANamespace",
        "required": [
          "namespace",
          "type"
        ],
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Link": {
        "title": "Link",
        "required": [
          "href",
          "rel"
        ],
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "rel": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EventInventoryRewardItem": {
        "title": "EventInventoryRewardItem",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "ItemCreateRequest": {
        "title": "ItemCreateRequest",
        "required": [
          "contentId",
          "properties"
        ],
        "type": "object",
        "properties": {
          "contentId": {
            "type": "string"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemProperty"
            }
          }
        },
        "additionalProperties": false
      },
      "EventClaimResponse": {
        "title": "Event Claim Response",
        "required": [
          "view",
          "gameRspJson"
        ],
        "type": "object",
        "properties": {
          "view": {
            "$ref": "#/components/schemas/EventPlayerStateView"
          },
          "gameRspJson": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EventPlayerView": {
        "title": "Event Player View",
        "required": [
          "running",
          "done"
        ],
        "type": "object",
        "properties": {
          "running": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventPlayerStateView"
            }
          },
          "done": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventPlayerStateView"
            }
          }
        },
        "additionalProperties": false
      },
      "EventRewardState": {
        "title": "EventRewardState",
        "required": [
          "min",
          "earned",
          "claimed",
          "pendingInventoryRewards"
        ],
        "type": "object",
        "properties": {
          "pendingInventoryRewards": {
            "$ref": "#/components/schemas/EventInventoryPendingRewards"
          },
          "currencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventInventoryRewardCurrency"
            }
          },
          "pendingCurrencyRewards": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "pendingItemRewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemCreateRequest"
            }
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventInventoryRewardItem"
            }
          },
          "min": {
            "type": "number",
            "format": "double"
          },
          "max": {
            "type": "number",
            "format": "double"
          },
          "earned": {
            "type": "boolean"
          },
          "claimed": {
            "type": "boolean"
          },
          "pendingEntitlementRewards": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "obtain": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventRewardObtain"
            }
          }
        },
        "additionalProperties": false
      },
      "EventScoreRequest": {
        "title": "Event Score Request",
        "required": [
          "eventId",
          "score"
        ],
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string"
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "increment": {
            "type": "boolean"
          },
          "stats": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "EventRewardObtain": {
        "title": "EventRewardObtain",
        "required": [
          "symbol",
          "count"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EventClaimRequest": {
        "title": "Event Claim Request",
        "required": [
          "eventId"
        ],
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EventInventoryRewardCurrency": {
        "title": "EventInventoryRewardCurrency",
        "required": [
          "id",
          "amount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "EventInventoryPendingRewards": {
        "title": "EventInventoryPendingRewards",
        "required": [
          "empty"
        ],
        "type": "object",
        "properties": {
          "currencies": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemCreateRequest"
            }
          },
          "empty": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "EventPlayerStateView": {
        "title": "EventPlayerStateView",
        "required": [
          "id",
          "name",
          "leaderboardId",
          "score",
          "rank",
          "scoreRewards",
          "rankRewards",
          "running",
          "secondsRemaining",
          "allPhases"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "running": {
            "type": "boolean"
          },
          "allPhases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventPlayerPhaseView"
            }
          },
          "rank": {
            "type": "integer",
            "format": "int64"
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "currentPhase": {
            "$ref": "#/components/schemas/EventPlayerPhaseView"
          },
          "secondsRemaining": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "string"
          },
          "leaderboardId": {
            "type": "string"
          },
          "rankRewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventRewardState"
            }
          },
          "groupRewards": {
            "$ref": "#/components/schemas/EventPlayerGroupState"
          },
          "scoreRewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventRewardState"
            }
          }
        },
        "additionalProperties": false
      },
      "EventPlayerPhaseView": {
        "title": "EventPlayerPhaseView",
        "required": [
          "name",
          "durationSeconds",
          "rules"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "durationSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventRule"
            }
          }
        },
        "additionalProperties": false
      },
      "ItemProperty": {
        "title": "ItemProperty",
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EventRule": {
        "title": "EventRule",
        "required": [
          "rule",
          "value"
        ],
        "type": "object",
        "properties": {
          "rule": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EventPlayerGroupState": {
        "title": "EventPlayerGroupState",
        "required": [
          "groupScore",
          "groupRank",
          "scoreRewards",
          "rankRewards"
        ],
        "type": "object",
        "properties": {
          "groupScore": {
            "type": "number",
            "format": "double"
          },
          "groupId": {
            "type": "string"
          },
          "rankRewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventRewardState"
            }
          },
          "groupRank": {
            "type": "integer",
            "format": "int64"
          },
          "scoreRewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventRewardState"
            }
          }
        },
        "additionalProperties": false
      },
      "LeaderboardCohort": {
        "title": "LeaderboardCohort",
        "required": [
          "id",
          "statRequirements"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "statRequirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerStatRequirement"
            }
          }
        },
        "additionalProperties": false
      },
      "LeaderboardCohortSettings": {
        "title": "LeaderboardCohortSettings",
        "required": [
          "cohorts"
        ],
        "type": "object",
        "properties": {
          "cohorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeaderboardCohort"
            }
          }
        },
        "additionalProperties": false
      },
      "Event": {
        "title": "Event",
        "required": [
          "symbol",
          "name",
          "start_date",
          "phases"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "phases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventPhase"
            }
          },
          "partition_size": {
            "type": "integer",
            "format": "int32"
          },
          "group_rewards": {
            "$ref": "#/components/schemas/EventGroupRewards"
          },
          "cohortSettings": {
            "$ref": "#/components/schemas/LeaderboardCohortSettings"
          },
          "permissions": {
            "$ref": "#/components/schemas/ClientPermission"
          },
          "stores": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "symbol": {
            "type": "string"
          },
          "score_rewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventRewardContent"
            }
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "rank_rewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventRewardContent"
            }
          }
        },
        "additionalProperties": false
      },
      "EventPhaseTime": {
        "title": "EventPhaseTime",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "startTime": {
            "type": "integer",
            "format": "int64"
          },
          "endTime": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "EventQueryResponse": {
        "title": "Event Query Response",
        "required": [
          "events"
        ],
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventObjectData"
            }
          }
        },
        "additionalProperties": false
      },
      "PlayerStatRequirement": {
        "title": "PlayerStatRequirement",
        "required": [
          "stat",
          "constraint",
          "value"
        ],
        "type": "object",
        "properties": {
          "domain": {
            "type": "string"
          },
          "stat": {
            "type": "string"
          },
          "constraint": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "access": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EventGroupRewards": {
        "title": "EventGroupRewards",
        "type": "object",
        "properties": {
          "scoreRewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventRewardContent"
            }
          }
        },
        "additionalProperties": false
      },
      "EventsWithinDateRangeRequest": {
        "title": "Events Within Date Range Request",
        "type": "object",
        "properties": {
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ClientPermission": {
        "title": "ClientPermission",
        "required": [
          "write_self"
        ],
        "type": "object",
        "properties": {
          "write_self": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "EventRewardContent": {
        "title": "EventRewardContent",
        "required": [
          "min"
        ],
        "type": "object",
        "properties": {
          "currencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventInventoryRewardCurrency"
            }
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventInventoryRewardItem"
            }
          },
          "min": {
            "type": "number",
            "format": "double"
          },
          "max": {
            "type": "number",
            "format": "double"
          },
          "obtain": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventRewardObtain"
            }
          }
        },
        "additionalProperties": false
      },
      "EventPhaseRuntime": {
        "title": "EventPhaseRuntime",
        "required": [
          "name",
          "startTime",
          "endTime",
          "rules"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "startTime": {
            "type": "integer",
            "format": "int64"
          },
          "endTime": {
            "type": "integer",
            "format": "int64"
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventRule"
            }
          }
        },
        "additionalProperties": false
      },
      "EventDateRanges": {
        "title": "EventDateRanges",
        "required": [
          "id",
          "name",
          "state",
          "dates"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "dates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DateRange"
            }
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "EventObjectData": {
        "title": "EventObjectData",
        "required": [
          "id",
          "content",
          "leaderboardId",
          "state",
          "done",
          "running"
        ],
        "type": "object",
        "properties": {
          "inFlight": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InFlightMessage"
            }
          },
          "startTime": {
            "type": "integer",
            "format": "int64"
          },
          "rootEventId": {
            "type": "string"
          },
          "originType": {
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/EventState"
          },
          "running": {
            "type": "boolean"
          },
          "phase": {
            "$ref": "#/components/schemas/EventPhaseRuntime"
          },
          "permissions": {
            "$ref": "#/components/schemas/ClientPermission"
          },
          "lastChildEventId": {
            "type": "string"
          },
          "endTime": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "content": {
            "$ref": "#/components/schemas/Event"
          },
          "done": {
            "type": "boolean"
          },
          "leaderboardId": {
            "type": "string"
          },
          "phaseTimes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventPhaseTime"
            }
          }
        },
        "additionalProperties": false
      },
      "DateRange": {
        "title": "DateRange",
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EventState": {
        "title": "EventState",
        "enum": [
          "running",
          "unknown",
          "cancelled",
          "done",
          "pending"
        ],
        "type": "string"
      },
      "EventsInDateRangeResponse": {
        "title": "Events In Date Range Response",
        "required": [
          "eventInDateRange"
        ],
        "type": "object",
        "properties": {
          "eventInDateRange": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventDateRanges"
            }
          }
        },
        "additionalProperties": false
      },
      "EventApplyRequest": {
        "title": "Event Apply Request",
        "required": [
          "content"
        ],
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Event"
          }
        },
        "additionalProperties": false
      },
      "Schedule": {
        "title": "Schedule",
        "required": [
          "activeFrom"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "crons": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "activeTo": {
            "type": "string"
          },
          "activeFrom": {
            "type": "string"
          },
          "definitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleDefinition"
            }
          }
        },
        "additionalProperties": false
      },
      "ScheduleDefinition": {
        "title": "ScheduleDefinition",
        "required": [
          "second",
          "minute",
          "hour",
          "dayOfMonth",
          "month",
          "dayOfWeek",
          "year"
        ],
        "type": "object",
        "properties": {
          "dayOfWeek": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "minute": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dayOfMonth": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "year": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hour": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "second": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "month": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "EventPhase": {
        "title": "EventPhase",
        "required": [
          "name",
          "duration_minutes",
          "durationMillis",
          "durationSeconds"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "duration_minutes": {
            "type": "integer",
            "format": "int32"
          },
          "durationMillis": {
            "type": "integer",
            "format": "int64"
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventRule"
            }
          },
          "durationSeconds": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "EventContentResponse": {
        "title": "Event Content Response",
        "required": [
          "content"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        },
        "additionalProperties": false
      },
      "EventPhaseEndRequest": {
        "title": "Event Phase End Request",
        "type": "object",
        "properties": {
          "time": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PingRsp": {
        "title": "Ping Rsp",
        "required": [
          "keepAlive"
        ],
        "type": "object",
        "properties": {
          "keepAlive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SetContentRequest": {
        "title": "Set Content Request",
        "required": [
          "event",
          "origin"
        ],
        "type": "object",
        "properties": {
          "event": {
            "$ref": "#/components/schemas/Event"
          },
          "origin": {
            "type": "string"
          },
          "rootEventId": {
            "type": "string"
          },
          "originType": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GroupCreate": {
        "title": "Group Create",
        "required": [
          "name",
          "enrollmentType",
          "requirement",
          "maxSize",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "enrollmentType": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "requirement": {
            "type": "integer",
            "format": "int64"
          },
          "clientData": {
            "type": "string"
          },
          "scores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupScoreBinding"
            }
          },
          "time": {
            "type": "integer",
            "description": "Milliseconds since midnight, January 1, 1970 UTC",
            "format": "int64",
            "x-beamable-date-format": "unix"
          },
          "type": {
            "$ref": "#/components/schemas/GroupType"
          },
          "maxSize": {
            "type": "integer",
            "format": "int32"
          },
          "group": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "DonationEntry": {
        "title": "DonationEntry",
        "required": [
          "playerId",
          "amount",
          "time"
        ],
        "type": "object",
        "properties": {
          "playerId": {
            "type": "integer",
            "format": "int64"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "time": {
            "type": "integer",
            "format": "int64"
          },
          "claimed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GroupType": {
        "title": "GroupType",
        "enum": [
          "guild",
          "subgroup"
        ],
        "type": "string"
      },
      "Member": {
        "title": "Member",
        "required": [
          "gamerTag",
          "role"
        ],
        "type": "object",
        "properties": {
          "canDemote": {
            "type": "boolean"
          },
          "canKick": {
            "type": "boolean"
          },
          "role": {
            "type": "string"
          },
          "gamerTag": {
            "type": "integer",
            "format": "int64"
          },
          "canPromote": {
            "type": "boolean"
          },
          "scores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupScoreBinding"
            }
          }
        },
        "additionalProperties": false
      },
      "GroupMembershipResponse": {
        "title": "Group Membership Response",
        "required": [
          "group",
          "member",
          "type",
          "subGroups"
        ],
        "type": "object",
        "properties": {
          "gamerTag": {
            "type": "integer",
            "format": "int64"
          },
          "member": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/GroupType"
          },
          "subGroups": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "group": {
            "$ref": "#/components/schemas/GroupMetaData"
          }
        },
        "additionalProperties": false
      },
      "GroupRole": {
        "title": "GroupRole",
        "required": [
          "name",
          "permissions"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "AvailabilityResponse": {
        "title": "Availability Response",
        "required": [
          "name",
          "tag"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "boolean"
          },
          "tag": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DonationRequest": {
        "title": "DonationRequest",
        "required": [
          "playerId",
          "currency",
          "timeRequested",
          "progress",
          "satisfied"
        ],
        "type": "object",
        "properties": {
          "timeRequested": {
            "type": "integer",
            "format": "int64"
          },
          "progress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DonationEntry"
            }
          },
          "satisfied": {
            "type": "boolean"
          },
          "playerId": {
            "type": "integer",
            "format": "int64"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          }
        },
        "additionalProperties": false
      },
      "GroupCreateResponse": {
        "title": "Group Create Response",
        "required": [
          "group"
        ],
        "type": "object",
        "properties": {
          "group": {
            "$ref": "#/components/schemas/GroupMetaData"
          }
        },
        "additionalProperties": false
      },
      "GroupSearchResponse": {
        "title": "Group Search Response",
        "required": [
          "groups"
        ],
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            }
          }
        },
        "additionalProperties": false
      },
      "GroupUserMember": {
        "title": "GroupUserMember",
        "required": [
          "id",
          "subGroups"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "subGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupUserMember"
            }
          },
          "joined": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GroupMemberInfo": {
        "title": "GroupMemberInfo",
        "type": "object",
        "properties": {
          "guild": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupUserMember"
            }
          },
          "subgroup": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupUserMember"
            }
          }
        },
        "additionalProperties": false
      },
      "CurrencyProperty": {
        "title": "CurrencyProperty",
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Group": {
        "title": "Group",
        "required": [
          "id",
          "name",
          "slogan",
          "motd",
          "enrollmentType",
          "requirement",
          "maxSize",
          "members",
          "subGroups",
          "created",
          "type",
          "freeSlots",
          "scores",
          "leader"
        ],
        "type": "object",
        "properties": {
          "inFlight": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InFlightMessage"
            }
          },
          "name": {
            "type": "string"
          },
          "enrollmentType": {
            "type": "string"
          },
          "donations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DonationRequest"
            }
          },
          "freeSlots": {
            "type": "integer",
            "format": "int32"
          },
          "maybeDonations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DonationRequest"
            }
          },
          "tag": {
            "type": "string"
          },
          "canUpdateMOTD": {
            "type": "boolean"
          },
          "shard": {
            "type": "string"
          },
          "canUpdateSlogan": {
            "type": "boolean"
          },
          "leader": {
            "type": "integer",
            "format": "int64"
          },
          "slogan": {
            "type": "string"
          },
          "requirement": {
            "type": "integer",
            "format": "int64"
          },
          "motd": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "clientData": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupRole"
            }
          },
          "scores": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "canUpdateEnrollment": {
            "type": "boolean"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Member"
            }
          },
          "canDisband": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/GroupType"
          },
          "maxSize": {
            "type": "integer",
            "format": "int32"
          },
          "subGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            }
          },
          "created": {
            "type": "integer",
            "description": "Milliseconds since midnight, January 1, 1970 UTC",
            "format": "int64",
            "x-beamable-date-format": "unix"
          }
        },
        "additionalProperties": false
      },
      "Currency": {
        "title": "Currency",
        "required": [
          "id",
          "amount"
        ],
        "type": "object",
        "properties": {
          "updatedAt": {
            "type": "integer",
            "format": "int64"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "string"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyProperty"
            }
          },
          "proxy": {
            "$ref": "#/components/schemas/FederationInfo"
          }
        },
        "additionalProperties": false
      },
      "GroupMembershipRequest": {
        "title": "Group Membership Request",
        "required": [
          "group",
          "type"
        ],
        "type": "object",
        "properties": {
          "successor": {
            "type": "integer",
            "format": "int64"
          },
          "score": {
            "type": "integer",
            "format": "int64"
          },
          "subGroup": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "$ref": "#/components/schemas/GroupType"
          },
          "group": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GroupScoreBinding": {
        "title": "GroupScoreBinding",
        "required": [
          "board",
          "derivatives",
          "score"
        ],
        "type": "object",
        "properties": {
          "board": {
            "type": "string"
          },
          "derivatives": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "score": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "AvailabilityRequest": {
        "title": "Availability Request",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/GroupType"
          },
          "subGroup": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GroupSearchRequest": {
        "title": "Group Search Request",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "scoreMin": {
            "type": "integer",
            "format": "int64"
          },
          "sortField": {
            "type": "string"
          },
          "userScore": {
            "type": "integer",
            "format": "int64"
          },
          "hasSlots": {
            "type": "boolean"
          },
          "enrollmentTypes": {
            "type": "string"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "scoreMax": {
            "type": "integer",
            "format": "int64"
          },
          "subGroup": {
            "type": "boolean"
          },
          "sortValue": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/GroupType"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GroupMetaData": {
        "title": "GroupMetaData",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GroupUser": {
        "title": "Group User",
        "required": [
          "gamerTag",
          "updated",
          "member",
          "allGroups"
        ],
        "type": "object",
        "properties": {
          "inFlight": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InFlightMessage"
            }
          },
          "gamerTag": {
            "type": "integer",
            "format": "int64"
          },
          "allGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupUserMember"
            }
          },
          "updated": {
            "type": "integer",
            "description": "Milliseconds since midnight, January 1, 1970 UTC",
            "format": "int64",
            "x-beamable-date-format": "unix"
          },
          "member": {
            "$ref": "#/components/schemas/GroupMemberInfo"
          },
          "scores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupScoreBinding"
            }
          }
        },
        "additionalProperties": false
      },
      "FederationInfo": {
        "title": "FederationInfo",
        "required": [
          "service",
          "namespace"
        ],
        "type": "object",
        "properties": {
          "service": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/OptionalJsonNodeWrapper"
          }
        },
        "additionalProperties": false
      },
      "GroupInvite": {
        "title": "Group Invite",
        "required": [
          "gamerTag"
        ],
        "type": "object",
        "properties": {
          "gamerTag": {
            "type": "integer",
            "format": "int64"
          },
          "subGroup": {
            "type": "integer",
            "format": "int64"
          },
          "useNewRewardsSystem": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateDonationRequest": {
        "title": "Create Donation Request",
        "required": [
          "currencyId",
          "amount"
        ],
        "type": "object",
        "properties": {
          "currencyId": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "config": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "KickRequest": {
        "title": "Kick Request",
        "required": [
          "gamerTag"
        ],
        "type": "object",
        "properties": {
          "gamerTag": {
            "type": "integer",
            "format": "int64"
          },
          "subGroup": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GroupUpdate": {
        "title": "Group Update",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "enrollmentType": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "slogan": {
            "type": "string"
          },
          "requirement": {
            "type": "integer",
            "format": "int64"
          },
          "motd": {
            "type": "string"
          },
          "clientData": {
            "type": "string"
          },
          "subGroup": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GroupApplication": {
        "title": "Group Application",
        "type": "object",
        "properties": {
          "subGroup": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "MakeDonationRequest": {
        "title": "Make Donation Request",
        "required": [
          "recipientId",
          "amount"
        ],
        "type": "object",
        "properties": {
          "recipientId": {
            "type": "integer",
            "format": "int64"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "autoClaim": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RoleChangeRequest": {
        "title": "Role Change Request",
        "required": [
          "gamerTag",
          "role"
        ],
        "type": "object",
        "properties": {
          "gamerTag": {
            "type": "integer",
            "format": "int64"
          },
          "role": {
            "type": "string"
          },
          "subGroup": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "DisbandRequest": {
        "title": "Disband Request",
        "type": "object",
        "properties": {
          "subGroup": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CurrencyContentResponse": {
        "title": "Currency Content Response",
        "required": [
          "content"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyArchetype"
            }
          }
        },
        "additionalProperties": false
      },
      "CurrencyArchetype": {
        "title": "CurrencyArchetype",
        "required": [
          "symbol"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "external": {
            "$ref": "#/components/schemas/FederationInfo"
          },
          "clientPermission": {
            "$ref": "#/components/schemas/ClientPermission"
          },
          "startingAmount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ItemArchetype": {
        "title": "ItemArchetype",
        "required": [
          "symbol"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "external": {
            "$ref": "#/components/schemas/FederationInfo"
          },
          "clientPermission": {
            "$ref": "#/components/schemas/ClientPermission"
          }
        },
        "additionalProperties": false
      },
      "ItemContentResponse": {
        "title": "Item Content Response",
        "required": [
          "content"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemArchetype"
            }
          }
        },
        "additionalProperties": false
      },
      "ItemGroup": {
        "title": "ItemGroup",
        "required": [
          "id",
          "items"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            }
          }
        },
        "additionalProperties": false
      },
      "ItemUpdateRequest": {
        "title": "ItemUpdateRequest",
        "required": [
          "contentId",
          "id",
          "properties"
        ],
        "type": "object",
        "properties": {
          "contentId": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemProperty"
            }
          }
        },
        "additionalProperties": false
      },
      "TimeRange": {
        "title": "TimeRange",
        "type": "object",
        "properties": {
          "from": {
            "type": "integer",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CurrencyPreview": {
        "title": "CurrencyPreview",
        "required": [
          "id",
          "amount",
          "originalAmount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "originalAmount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ContentTagFilter": {
        "title": "ContentTagFilter",
        "required": [
          "allOf",
          "anyOf",
          "noneOf"
        ],
        "type": "object",
        "properties": {
          "allOf": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "anyOf": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "noneOf": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "CurrencyView": {
        "title": "CurrencyView",
        "required": [
          "id",
          "amount",
          "properties"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyProperty"
            }
          },
          "proxy": {
            "$ref": "#/components/schemas/FederationInfo"
          }
        },
        "additionalProperties": false
      },
      "InventoryView": {
        "title": "Inventory View",
        "required": [
          "currencies",
          "items"
        ],
        "type": "object",
        "properties": {
          "currencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyView"
            }
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemGroup"
            }
          },
          "scope": {
            "type": "string"
          },
          "itemFilters": {
            "$ref": "#/components/schemas/InventoryFiltersDTO"
          }
        },
        "additionalProperties": false
      },
      "InventoryGetRequest": {
        "title": "Inventory Get Request",
        "type": "object",
        "properties": {
          "scope": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MultipliersGetResponse": {
        "title": "Multipliers Get Response",
        "required": [
          "multipliers"
        ],
        "type": "object",
        "properties": {
          "multipliers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VipBonus"
            }
          }
        },
        "additionalProperties": false
      },
      "EndTransactionRequest": {
        "title": "End Transaction Request",
        "required": [
          "transaction"
        ],
        "type": "object",
        "properties": {
          "transaction": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PredicateDTO": {
        "title": "PredicateDTO",
        "required": [
          "kind"
        ],
        "type": "object",
        "properties": {
          "caseInsensitive": {
            "type": "boolean"
          },
          "as": {
            "type": "string"
          },
          "lower": {
            "type": "string"
          },
          "upper": {
            "type": "string"
          },
          "substr": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "kind": {
            "type": "string"
          },
          "includeUpper": {
            "type": "boolean"
          },
          "value": {
            "type": "string"
          },
          "includeLower": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "InventoryUpdateRequest": {
        "title": "Inventory Update Request",
        "type": "object",
        "properties": {
          "currencies": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            }
          },
          "currencyProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CurrencyProperty"
              }
            }
          },
          "applyVipBonus": {
            "type": "boolean"
          },
          "updateItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemUpdateRequest"
            }
          },
          "newItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemCreateRequest"
            }
          },
          "transaction": {
            "type": "string"
          },
          "deleteItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemDeleteRequest"
            }
          }
        },
        "additionalProperties": false
      },
      "PropertyFilterDTO": {
        "title": "PropertyFilterDTO",
        "required": [
          "key",
          "predicate"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "predicate": {
            "$ref": "#/components/schemas/PredicateDTO"
          }
        },
        "additionalProperties": false
      },
      "Item": {
        "title": "Item",
        "required": [
          "id",
          "properties"
        ],
        "type": "object",
        "properties": {
          "updatedAt": {
            "type": "integer",
            "format": "int64"
          },
          "proxyId": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemProperty"
            }
          },
          "proxy": {
            "$ref": "#/components/schemas/FederationInfo"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "InventoryQueryRequest": {
        "title": "Inventory Query Request",
        "type": "object",
        "properties": {
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "itemFilters": {
            "$ref": "#/components/schemas/InventoryFiltersDTO"
          }
        },
        "additionalProperties": false
      },
      "ItemDeleteRequest": {
        "title": "ItemDeleteRequest",
        "required": [
          "contentId",
          "id"
        ],
        "type": "object",
        "properties": {
          "contentId": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "VipBonus": {
        "title": "VipBonus",
        "required": [
          "currency",
          "multiplier",
          "roundToNearest"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "multiplier": {
            "type": "number",
            "format": "double"
          },
          "roundToNearest": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PreviewVipBonusResponse": {
        "title": "Preview Vip Bonus Response",
        "required": [
          "currencies"
        ],
        "type": "object",
        "properties": {
          "currencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyPreview"
            }
          }
        },
        "additionalProperties": false
      },
      "InventoryFiltersDTO": {
        "title": "InventoryFiltersDTO",
        "type": "object",
        "properties": {
          "contentTagFilter": {
            "$ref": "#/components/schemas/ContentTagFilter"
          },
          "propertyFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyFilterDTO"
            }
          },
          "createdAt": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/TimeRange"
          }
        },
        "additionalProperties": false
      },
      "TransferRequest": {
        "title": "Transfer Request",
        "required": [
          "recipientPlayer"
        ],
        "type": "object",
        "properties": {
          "transaction": {
            "type": "string"
          },
          "recipientPlayer": {
            "type": "integer",
            "format": "int64",
            "x-beamable-semantic-type": "Gamertag"
          },
          "currencies": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "additionalProperties": false
      },
      "RankEntryStat": {
        "title": "RankEntryStat",
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LeaderboardUidResponse": {
        "title": "Leaderboard Uid Response",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ListLeaderBoardViewResponse": {
        "title": "List Leader Board View Response",
        "required": [
          "result",
          "lbs"
        ],
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          },
          "lbs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeaderBoardView"
            }
          }
        },
        "additionalProperties": false
      },
      "RankEntry": {
        "title": "RankEntry",
        "required": [
          "gt",
          "rank",
          "columns"
        ],
        "type": "object",
        "properties": {
          "stats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RankEntryStat"
            }
          },
          "rank": {
            "type": "integer",
            "format": "int64"
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "columns": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            }
          },
          "gt": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "LeaderboardPlayerAssignmentRequest": {
        "title": "Leaderboard Player Assignment Request",
        "required": [
          "boardId"
        ],
        "type": "object",
        "properties": {
          "boardId": {
            "type": "string"
          },
          "joinBoard": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LeaderboardPlayerRequest": {
        "title": "Leaderboard Player Request",
        "required": [
          "dbid"
        ],
        "type": "object",
        "properties": {
          "dbid": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "LeaderboardListRequest": {
        "title": "Leaderboard List Request",
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "prefix": {
            "type": "string"
          },
          "includePartitions": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LeaderboardAssignmentInfo": {
        "title": "Leaderboard Assignment Info",
        "required": [
          "playerId",
          "leaderboardId"
        ],
        "type": "object",
        "properties": {
          "playerId": {
            "type": "integer",
            "format": "int64"
          },
          "leaderboardId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LeaderboardListResponse": {
        "title": "Leaderboard List Response",
        "required": [
          "total",
          "offset",
          "nameList"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "nameList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "LeaderBoardView": {
        "title": "LeaderBoardView",
        "required": [
          "lbId",
          "boardSize",
          "rankings"
        ],
        "type": "object",
        "properties": {
          "lbId": {
            "type": "string"
          },
          "boardSize": {
            "type": "integer",
            "format": "int64"
          },
          "rankgt": {
            "$ref": "#/components/schemas/RankEntry"
          },
          "rankings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RankEntry"
            }
          }
        },
        "additionalProperties": false
      },
      "LeaderboardPartitionInfo": {
        "title": "Leaderboard Partition Info",
        "required": [
          "playerId",
          "leaderboardId",
          "isEmpty"
        ],
        "type": "object",
        "properties": {
          "playerId": {
            "type": "integer",
            "format": "int64"
          },
          "leaderboardId": {
            "type": "string"
          },
          "isEmpty": {
            "type": "boolean"
          },
          "partition": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LeaderboardPartitionRequest": {
        "title": "Leaderboard Partition Request",
        "required": [
          "playerId"
        ],
        "type": "object",
        "properties": {
          "playerId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "OrderRule": {
        "title": "OrderRule",
        "required": [
          "v",
          "o"
        ],
        "type": "object",
        "properties": {
          "v": {
            "type": "string"
          },
          "o": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LeaderboardMembershipRequest": {
        "title": "Leaderboard Membership Request",
        "required": [
          "playerId"
        ],
        "type": "object",
        "properties": {
          "playerId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "LeaderboardRemoveCacheEntryRequest": {
        "title": "Leaderboard Remove Cache Entry Request",
        "required": [
          "playerId"
        ],
        "type": "object",
        "properties": {
          "playerId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "LeaderboardGetRanksRequest": {
        "title": "Leaderboard Get Ranks Request",
        "required": [
          "ids"
        ],
        "type": "object",
        "properties": {
          "ids": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LeaderboardApiViewRequest": {
        "title": "Leaderboard Api View Request",
        "type": "object",
        "properties": {
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "focus": {
            "type": "integer",
            "format": "int64"
          },
          "friends": {
            "type": "boolean"
          },
          "from": {
            "type": "integer",
            "format": "int32"
          },
          "outlier": {
            "type": "integer",
            "format": "int64"
          },
          "guild": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MetadataView": {
        "title": "MetadataView",
        "required": [
          "parentLeaderboard",
          "partitioned",
          "cohorted",
          "frozen"
        ],
        "type": "object",
        "properties": {
          "freezeTime": {
            "type": "integer",
            "format": "int64"
          },
          "derivatives": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parentLeaderboard": {
            "type": "string"
          },
          "cohortSettings": {
            "$ref": "#/components/schemas/LeaderboardCohortSettings"
          },
          "permissions": {
            "$ref": "#/components/schemas/ClientPermission"
          },
          "frozen": {
            "type": "boolean"
          },
          "maxEntries": {
            "type": "integer",
            "format": "int32"
          },
          "partitioned": {
            "type": "boolean"
          },
          "cohorted": {
            "type": "boolean"
          },
          "expiration": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "MatchMakingRanking": {
        "title": "MatchMakingRanking",
        "required": [
          "gt",
          "rank",
          "isUnranked",
          "variables"
        ],
        "type": "object",
        "properties": {
          "gt": {
            "type": "integer",
            "format": "int64"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "isUnranked": {
            "type": "boolean"
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "LeaderBoardViewResponse": {
        "title": "Leader Board View Response",
        "required": [
          "result",
          "lb"
        ],
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          },
          "lb": {
            "$ref": "#/components/schemas/LeaderBoardView"
          }
        },
        "additionalProperties": false
      },
      "LeaderboardDetails": {
        "title": "Leaderboard Details",
        "required": [
          "fullName",
          "lbid",
          "numberOfEntries",
          "view"
        ],
        "type": "object",
        "properties": {
          "lbid": {
            "type": "string"
          },
          "orules": {
            "$ref": "#/components/schemas/OrderRules"
          },
          "numberOfEntries": {
            "type": "integer",
            "format": "int32"
          },
          "fullName": {
            "type": "string"
          },
          "metaData": {
            "$ref": "#/components/schemas/MetadataView"
          },
          "view": {
            "$ref": "#/components/schemas/LeaderBoardView"
          }
        },
        "additionalProperties": false
      },
      "OrderRules": {
        "title": "OrderRules",
        "required": [
          "orules"
        ],
        "type": "object",
        "properties": {
          "orules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderRule"
            }
          }
        },
        "additionalProperties": false
      },
      "LeaderboardRemoveEntryRequest": {
        "title": "Leaderboard Remove Entry Request",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "MatchMakingMatchesPvpResponse": {
        "title": "Match Making Matches Pvp Response",
        "required": [
          "result",
          "totalEntries",
          "playerRank",
          "windows"
        ],
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          },
          "totalEntries": {
            "type": "integer",
            "format": "int32"
          },
          "playerRank": {
            "$ref": "#/components/schemas/MatchMakingRanking"
          },
          "windows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchMakingWindowResp"
            }
          }
        },
        "additionalProperties": false
      },
      "LeaderboardGetMatchRequest": {
        "title": "Leaderboard Get Match Request",
        "required": [
          "poolSize",
          "windows",
          "windowSize"
        ],
        "type": "object",
        "properties": {
          "poolSize": {
            "type": "integer",
            "format": "int32"
          },
          "windows": {
            "type": "integer",
            "format": "int32"
          },
          "windowSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LeaderboardCreateRequest": {
        "title": "Leaderboard Create Request",
        "required": [
          "sharded"
        ],
        "type": "object",
        "properties": {
          "freezeTime": {
            "type": "integer",
            "format": "int64"
          },
          "derivatives": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scoreName": {
            "type": "string"
          },
          "cohortSettings": {
            "$ref": "#/components/schemas/LeaderboardCohortSettings"
          },
          "permissions": {
            "$ref": "#/components/schemas/ClientPermission"
          },
          "maxEntries": {
            "type": "integer",
            "format": "int32"
          },
          "partitioned": {
            "type": "boolean"
          },
          "sharded": {
            "type": "boolean"
          },
          "ttl": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "LeaderboardDetailsRequest": {
        "title": "Leaderboard Details Request",
        "type": "object",
        "properties": {
          "from": {
            "type": "integer",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MatchMakingWindowResp": {
        "title": "MatchMakingWindowResp",
        "required": [
          "difficulty",
          "matches"
        ],
        "type": "object",
        "properties": {
          "difficulty": {
            "type": "integer",
            "format": "int32"
          },
          "matches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchMakingRanking"
            }
          }
        },
        "additionalProperties": false
      },
      "LeaderboardSwapRequest": {
        "title": "Leaderboard Swap Request",
        "required": [
          "swapBase",
          "delta"
        ],
        "type": "object",
        "properties": {
          "winnerId": {
            "type": "integer",
            "format": "int64"
          },
          "loserId": {
            "type": "integer",
            "format": "int64"
          },
          "swapBase": {
            "type": "integer",
            "format": "int64"
          },
          "delta": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "LeaderboardAddRequest": {
        "title": "Leaderboard Add Request",
        "required": [
          "id",
          "score"
        ],
        "type": "object",
        "properties": {
          "maxScore": {
            "type": "number",
            "format": "double"
          },
          "stats": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "minScore": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "increment": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LeaderboardMembershipResponse": {
        "title": "Leaderboard Membership Response",
        "required": [
          "result"
        ],
        "type": "object",
        "properties": {
          "result": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateAccountWithCredsRequest": {
        "title": "Create Account With Creds Request",
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "provider_namespace": {
            "type": "string"
          },
          "challenge_solution": {
            "$ref": "#/components/schemas/ChallengeSolution"
          },
          "external_token": {
            "type": "string"
          },
          "initProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "provider_service": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PasswordUpdateConfirmation": {
        "title": "Password Update Confirmation",
        "required": [
          "code",
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DeviceIdAvailableRequest": {
        "title": "Device Id Available Request",
        "required": [
          "deviceId"
        ],
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AccountUpdate": {
        "title": "Account Update",
        "required": [
          "hasThirdPartyToken"
        ],
        "type": "object",
        "properties": {
          "thirdParty": {
            "type": "string"
          },
          "hasThirdPartyToken": {
            "type": "boolean"
          },
          "country": {
            "type": "string"
          },
          "external": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalIdentity"
            }
          },
          "language": {
            "type": "string"
          },
          "gamerTagAssoc": {
            "$ref": "#/components/schemas/GamerTagAssociation"
          },
          "token": {
            "type": "string"
          },
          "deviceId": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EmailUpdateRequest": {
        "title": "Email Update Request",
        "required": [
          "newEmail"
        ],
        "type": "object",
        "properties": {
          "newEmail": {
            "type": "string"
          },
          "codeType": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ThirdPartyAssociation": {
        "title": "ThirdPartyAssociation",
        "required": [
          "name",
          "appId",
          "userAppId",
          "meta"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "userBusinessId": {
            "type": "string"
          },
          "userAppId": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "appId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DeleteDevicesRequest": {
        "title": "Delete Devices Request",
        "type": "object",
        "properties": {
          "deviceIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "AccountPersonallyIdentifiableInformationResponse": {
        "title": "Account Personally Identifiable Information Response",
        "required": [
          "account",
          "stats",
          "paymentAudits"
        ],
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "stats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatsResponse"
            }
          },
          "paymentAudits": {
            "$ref": "#/components/schemas/ListAuditResponse"
          }
        },
        "additionalProperties": false
      },
      "AccountPortalView": {
        "title": "AccountPortalView",
        "required": [
          "id",
          "scopes",
          "thirdPartyAppAssociations"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "roleString": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "x-beamable-semantic-type": "AccountId"
          },
          "external": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalIdentity"
            }
          },
          "language": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleMapping"
            }
          },
          "thirdPartyAppAssociations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "SearchAccountsRequest": {
        "title": "Search Accounts Request",
        "required": [
          "query",
          "page",
          "pagesize"
        ],
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pagesize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PasswordUpdateRequest": {
        "title": "Password Update Request",
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "codeType": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PaymentAuditEntryViewModel": {
        "title": "PaymentAuditEntryViewModel",
        "required": [
          "gt",
          "txid",
          "providername",
          "details",
          "providerid",
          "txstate",
          "history",
          "entitlements"
        ],
        "type": "object",
        "properties": {
          "providerid": {
            "type": "string"
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentHistoryEntryViewModel"
            }
          },
          "txid": {
            "type": "integer",
            "format": "int64"
          },
          "providername": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "obtainItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemCreateRequest"
            }
          },
          "txstate": {
            "type": "string"
          },
          "updated": {
            "type": "integer",
            "format": "int64"
          },
          "obtainCurrency": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyChange"
            }
          },
          "entitlements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntitlementGenerator"
            }
          },
          "details": {
            "$ref": "#/components/schemas/PaymentDetailsEntryViewModel"
          },
          "replayGuardValue": {
            "type": "string"
          },
          "gt": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ExternalIdentityAvailableApiRequest": {
        "title": "External Identity Available Api Request",
        "required": [
          "provider_service",
          "user_id"
        ],
        "type": "object",
        "properties": {
          "provider_service": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "provider_namespace": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AccountPlayerView": {
        "title": "AccountPlayerView",
        "required": [
          "id",
          "scopes",
          "thirdPartyAppAssociations",
          "deviceIds"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "deviceIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "x-beamable-semantic-type": "Gamertag"
          },
          "external": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalIdentity"
            }
          },
          "language": {
            "type": "string"
          },
          "thirdPartyAppAssociations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "PaymentHistoryEntryViewModel": {
        "title": "PaymentHistoryEntryViewModel",
        "required": [
          "change"
        ],
        "type": "object",
        "properties": {
          "change": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AccountAvailableResponse": {
        "title": "Account Available Response",
        "required": [
          "available"
        ],
        "type": "object",
        "properties": {
          "available": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateElevatedAccountRequest": {
        "title": "Create Elevated Account Request",
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "initProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "EntitlementGenerator": {
        "title": "EntitlementGenerator",
        "required": [
          "symbol",
          "action"
        ],
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "claimWindow": {
            "$ref": "#/components/schemas/EntitlementClaimWindow"
          },
          "params": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "symbol": {
            "type": "string"
          },
          "specialization": {
            "type": "string"
          },
          "action": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "StatsResponse": {
        "title": "StatsResponse",
        "required": [
          "id",
          "stats"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "x-beamable-semantic-type": "Gamertag"
          },
          "stats": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "AttachExternalIdentityApiResponse": {
        "title": "Attach External Identity Api Response",
        "required": [
          "result"
        ],
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          },
          "challenge_token": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RoleMapping": {
        "title": "RoleMapping",
        "required": [
          "projectId",
          "role"
        ],
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AccountRegistration": {
        "title": "Account Registration",
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AttachExternalIdentityApiRequest": {
        "title": "Attach External Identity Api Request",
        "required": [
          "provider_service",
          "external_token"
        ],
        "type": "object",
        "properties": {
          "provider_service": {
            "type": "string"
          },
          "external_token": {
            "type": "string"
          },
          "challenge_solution": {
            "$ref": "#/components/schemas/ChallengeSolution"
          },
          "provider_namespace": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EmailUpdateConfirmation": {
        "title": "Email Update Confirmation",
        "required": [
          "code",
          "password"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ExternalIdentity": {
        "title": "ExternalIdentity",
        "required": [
          "providerService",
          "userId",
          "providerNamespace"
        ],
        "type": "object",
        "properties": {
          "providerService": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "providerNamespace": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateAccountWithCredsApiResponse": {
        "title": "Create Account With Creds Api Response",
        "type": "object",
        "properties": {
          "account": {
            "$ref": "#/components/schemas/AccountPlayerView"
          },
          "challenge_token": {
            "type": "string"
          },
          "token": {
            "$ref": "#/components/schemas/TokenResponse"
          }
        },
        "additionalProperties": false
      },
      "GetAdminsResponse": {
        "title": "Get Admins Response",
        "required": [
          "accounts"
        ],
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountPortalView"
            }
          }
        },
        "additionalProperties": false
      },
      "PaymentDetailsEntryViewModel": {
        "title": "PaymentDetailsEntryViewModel",
        "required": [
          "price",
          "quantity",
          "name",
          "reference",
          "gameplace",
          "sku",
          "providerProductId"
        ],
        "type": "object",
        "properties": {
          "reference": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "sku": {
            "type": "string"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          },
          "subcategory": {
            "type": "string"
          },
          "gameplace": {
            "type": "string"
          },
          "localPrice": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "localCurrency": {
            "type": "string"
          },
          "providerProductId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CurrencyChange": {
        "title": "CurrencyChange",
        "required": [
          "symbol",
          "amount"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "originalAmount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "EntitlementClaimWindow": {
        "title": "EntitlementClaimWindow",
        "required": [
          "open",
          "close"
        ],
        "type": "object",
        "properties": {
          "open": {
            "type": "integer",
            "format": "int64"
          },
          "close": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GamerTagAssociation": {
        "title": "GamerTagAssociation",
        "required": [
          "projectId",
          "gamerTag"
        ],
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "x-beamable-semantic-type": "Pid"
          },
          "gamerTag": {
            "type": "integer",
            "format": "int64",
            "x-beamable-semantic-type": "Gamertag"
          }
        },
        "additionalProperties": false
      },
      "ChallengeSolution": {
        "title": "ChallengeSolution",
        "required": [
          "challenge_token",
          "solution"
        ],
        "type": "object",
        "properties": {
          "challenge_token": {
            "type": "string"
          },
          "solution": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DeleteExternalIdentityApiRequest": {
        "title": "Delete External Identity Api Request",
        "required": [
          "provider_service",
          "user_id"
        ],
        "type": "object",
        "properties": {
          "provider_service": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "provider_namespace": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ThirdPartyAvailableRequest": {
        "title": "Third Party Available Request",
        "required": [
          "thirdParty",
          "token"
        ],
        "type": "object",
        "properties": {
          "thirdParty": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TokenResponse": {
        "title": "TokenResponse",
        "required": [
          "expires_in",
          "token_type"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "expires_in": {
            "type": "integer",
            "format": "int64"
          },
          "refresh_token": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "token_type": {
            "type": "string"
          },
          "challenge_token": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AccountSearchResponse": {
        "title": "Account Search Response",
        "required": [
          "accounts"
        ],
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          }
        },
        "additionalProperties": false
      },
      "ListAuditResponse": {
        "title": "ListAuditResponse",
        "required": [
          "audits"
        ],
        "type": "object",
        "properties": {
          "audits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentAuditEntryViewModel"
            }
          }
        },
        "additionalProperties": false
      },
      "AccountAvailableRequest": {
        "title": "Account Available Request",
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "FindAccountRequest": {
        "title": "Find Account Request",
        "required": [
          "query"
        ],
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Account": {
        "title": "Account",
        "required": [
          "id",
          "gamerTags",
          "thirdParties",
          "createdTimeMillis",
          "updatedTimeMillis",
          "external",
          "privilegedAccount"
        ],
        "type": "object",
        "properties": {
          "inFlight": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InFlightMessage"
            }
          },
          "createdTimeMillis": {
            "type": "integer",
            "format": "int64"
          },
          "realmId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "roleString": {
            "type": "string"
          },
          "deviceIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "privilegedAccount": {
            "type": "boolean"
          },
          "country": {
            "type": "string"
          },
          "wasMigrated": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "x-beamable-semantic-type": "AccountId"
          },
          "gamerTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GamerTagAssociation"
            }
          },
          "external": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalIdentity"
            }
          },
          "language": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleMapping"
            }
          },
          "updatedTimeMillis": {
            "type": "integer",
            "format": "int64"
          },
          "thirdParties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ThirdPartyAssociation"
            }
          },
          "deviceId": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "heartbeat": {
            "type": "integer",
            "format": "int64"
          },
          "password": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AccountRolesReport": {
        "title": "Account Roles Report",
        "required": [
          "accountId",
          "email",
          "realms"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "realms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealmRolesReport"
            }
          }
        },
        "additionalProperties": false
      },
      "DeleteThirdPartyAssociation": {
        "title": "Delete Third Party Association",
        "required": [
          "thirdParty",
          "userAppId"
        ],
        "type": "object",
        "properties": {
          "thirdParty": {
            "type": "string"
          },
          "userAppId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DeleteRole": {
        "title": "Delete Role",
        "type": "object",
        "properties": {
          "realm": {
            "type": "string",
            "x-beamable-semantic-type": "Pid"
          },
          "role": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateRole": {
        "title": "Update Role",
        "type": "object",
        "properties": {
          "cid": {
            "type": "string",
            "x-beamable-semantic-type": "Cid"
          },
          "realm": {
            "type": "string",
            "x-beamable-semantic-type": "Pid"
          },
          "role": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AvailableRolesResponse": {
        "title": "Available Roles Response",
        "required": [
          "roles"
        ],
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "RealmRolesReport": {
        "title": "RealmRolesReport",
        "required": [
          "realmName",
          "realmDisplayName",
          "roles"
        ],
        "type": "object",
        "properties": {
          "realmName": {
            "type": "string"
          },
          "realmDisplayName": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "TransferThirdPartyAssociation": {
        "title": "Transfer Third Party Association",
        "required": [
          "fromAccountId",
          "thirdParty"
        ],
        "type": "object",
        "properties": {
          "fromAccountId": {
            "type": "integer",
            "format": "int64"
          },
          "thirdParty": {
            "$ref": "#/components/schemas/ThirdPartyAssociation"
          }
        },
        "additionalProperties": false
      },
      "StatUpdateRequest": {
        "title": "StatUpdateRequest",
        "type": "object",
        "properties": {
          "objectId": {
            "type": "string",
            "x-beamable-semantic-type": "StatsType"
          },
          "set": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "add": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "emitAnalytics": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "StatsUnsubscribeRequest": {
        "title": "Stats Unsubscribe Request",
        "required": [
          "service"
        ],
        "type": "object",
        "properties": {
          "service": {
            "type": "string"
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "StatsSubscribeRequest": {
        "title": "Stats Subscribe Request",
        "required": [
          "service",
          "subscriptions"
        ],
        "type": "object",
        "properties": {
          "service": {
            "type": "string"
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "StatsSearchResponse": {
        "title": "Stats Search Response",
        "required": [
          "ids"
        ],
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64",
              "x-beamable-semantic-type": "Gamertag"
            }
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "NetworkSerializable": {
        "title": "NetworkSerializable",
        "type": "object",
        "additionalProperties": false
      },
      "BatchReadStatsRequest": {
        "title": "Batch Read Stats Request",
        "required": [
          "objectIds"
        ],
        "type": "object",
        "properties": {
          "objectIds": {
            "type": "string",
            "x-beamable-semantic-type": "StatsType"
          },
          "stats": {
            "type": "string"
          },
          "format": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BatchSetStatsRequest": {
        "title": "Batch Set Stats Request",
        "required": [
          "updates"
        ],
        "type": "object",
        "properties": {
          "updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatUpdateRequest"
            }
          }
        },
        "additionalProperties": false
      },
      "StatsSearchRequest": {
        "title": "Stats Search Request",
        "required": [
          "domain",
          "access",
          "objectType",
          "criteria"
        ],
        "type": "object",
        "properties": {
          "criteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatsSearchCriteria"
            }
          },
          "domain": {
            "type": "string"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "objectType": {
            "type": "string"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "access": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "StatsSearchCriteria": {
        "title": "StatsSearchCriteria",
        "required": [
          "stat",
          "rel"
        ],
        "type": "object",
        "properties": {
          "stat": {
            "type": "string"
          },
          "rel": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BatchReadStatsResponse": {
        "title": "Batch Read Stats Response",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NetworkSerializable"
            }
          }
        },
        "additionalProperties": false
      },
      "SearchExtendedResponse": {
        "title": "Search Extended Response",
        "required": [
          "gamerStats"
        ],
        "type": "object",
        "properties": {
          "gamerStats": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "SearchExtendedRequest": {
        "title": "Search Extended Request",
        "required": [
          "domain",
          "access",
          "objectType",
          "criteria",
          "statKeys"
        ],
        "type": "object",
        "properties": {
          "criteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatsSearchCriteria"
            }
          },
          "domain": {
            "type": "string"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "objectType": {
            "type": "string"
          },
          "statKeys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "access": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "StatUpdateRequestStringListFormat": {
        "title": "Stat Update Request String List Format",
        "type": "object",
        "properties": {
          "set": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatStringListEntry"
            }
          }
        },
        "additionalProperties": false
      },
      "StatRequest": {
        "title": "Stat Request",
        "type": "object",
        "properties": {
          "stats": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "StatStringListEntry": {
        "title": "StatStringListEntry",
        "required": [
          "k",
          "v"
        ],
        "type": "object",
        "properties": {
          "k": {
            "type": "string"
          },
          "v": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RewardsResponse": {
        "title": "Rewards Response",
        "required": [
          "rewardCurrencies"
        ],
        "type": "object",
        "properties": {
          "rewardCurrencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TournamentCurrencyReward"
            }
          }
        },
        "additionalProperties": false
      },
      "GroupStatus": {
        "title": "GroupStatus",
        "required": [
          "contentId",
          "tournamentId",
          "groupId",
          "tier",
          "stage",
          "lastUpdateCycle"
        ],
        "type": "object",
        "properties": {
          "lastUpdateCycle": {
            "type": "integer",
            "format": "int32"
          },
          "tournamentId": {
            "type": "string"
          },
          "stage": {
            "type": "integer",
            "format": "int32"
          },
          "tier": {
            "type": "integer",
            "format": "int32"
          },
          "groupId": {
            "type": "integer",
            "format": "int64"
          },
          "completed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompletedStatus"
            }
          },
          "contentId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetPlayerStatusRequest": {
        "title": "Get Player Status Request",
        "type": "object",
        "properties": {
          "tournamentId": {
            "type": "string"
          },
          "contentId": {
            "type": "string"
          },
          "hasUnclaimedRewards": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetPlayerStatusResponse": {
        "title": "Get Player Status Response",
        "required": [
          "statuses"
        ],
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerStatus"
            }
          }
        },
        "additionalProperties": false
      },
      "RewardsRequest": {
        "title": "Rewards Request",
        "type": "object",
        "properties": {
          "tournamentId": {
            "type": "string"
          },
          "contentId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ScoreRequest": {
        "title": "Score Request",
        "required": [
          "playerId",
          "tournamentId",
          "score"
        ],
        "type": "object",
        "properties": {
          "tournamentId": {
            "type": "string"
          },
          "stats": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "playerId": {
            "type": "integer",
            "format": "int64"
          },
          "contentId": {
            "type": "string"
          },
          "increment": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AdminGetPlayerStatusRequest": {
        "title": "Admin Get Player Status Request",
        "required": [
          "playerId"
        ],
        "type": "object",
        "properties": {
          "playerId": {
            "type": "integer",
            "format": "int64"
          },
          "tournamentId": {
            "type": "string"
          },
          "contentId": {
            "type": "string"
          },
          "hasUnclaimedRewards": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetGroupStatusRequest": {
        "title": "Get Group Status Request",
        "type": "object",
        "properties": {
          "contentId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetChampionsResponse": {
        "title": "Get Champions Response",
        "required": [
          "entries"
        ],
        "type": "object",
        "properties": {
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChampionScore"
            }
          }
        },
        "additionalProperties": false
      },
      "TournamentClientView": {
        "title": "TournamentClientView",
        "required": [
          "tournamentId",
          "secondsRemaining",
          "contentId",
          "cycle",
          "startTimeUtc",
          "endTimeUtc"
        ],
        "type": "object",
        "properties": {
          "tournamentId": {
            "type": "string"
          },
          "startTimeUtc": {
            "type": "string"
          },
          "secondsRemaining": {
            "type": "integer",
            "format": "int64"
          },
          "cycle": {
            "type": "integer",
            "format": "int32"
          },
          "endTimeUtc": {
            "type": "string"
          },
          "contentId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetStatusForGroupsResponse": {
        "title": "Get Status For Groups Response",
        "required": [
          "statuses",
          "contentId"
        ],
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupStatus"
            }
          },
          "contentId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetStandingsRequest": {
        "title": "Get Standings Request",
        "required": [
          "tournamentId"
        ],
        "type": "object",
        "properties": {
          "tournamentId": {
            "type": "string"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "focus": {
            "type": "integer",
            "format": "int64"
          },
          "cycle": {
            "type": "integer",
            "format": "int32"
          },
          "from": {
            "type": "integer",
            "format": "int32"
          },
          "contentId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TournamentEntry": {
        "title": "TournamentEntry",
        "required": [
          "playerId",
          "rank",
          "score",
          "tier",
          "stage",
          "stageChange",
          "currencyRewards"
        ],
        "type": "object",
        "properties": {
          "stage": {
            "type": "integer",
            "format": "int32"
          },
          "tier": {
            "type": "integer",
            "format": "int32"
          },
          "previousStageChange": {
            "type": "integer",
            "format": "int32"
          },
          "rank": {
            "type": "integer",
            "format": "int64"
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "currencyRewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TournamentCurrencyReward"
            }
          },
          "nextStageChange": {
            "type": "integer",
            "format": "int32"
          },
          "playerId": {
            "type": "integer",
            "format": "int64"
          },
          "stageChange": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PlayerStatusUpdate": {
        "title": "PlayerStatusUpdate",
        "type": "object",
        "properties": {
          "tier": {
            "type": "integer",
            "format": "int32"
          },
          "stage": {
            "type": "integer",
            "format": "int32"
          },
          "score": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "TournamentQueryResponse": {
        "title": "Tournament Query Response",
        "required": [
          "tournaments"
        ],
        "type": "object",
        "properties": {
          "tournaments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TournamentClientView"
            }
          }
        },
        "additionalProperties": false
      },
      "PlayerStatus": {
        "title": "PlayerStatus",
        "required": [
          "contentId",
          "tournamentId",
          "playerId",
          "tier",
          "stage",
          "lastUpdateCycle",
          "unclaimedRewards"
        ],
        "type": "object",
        "properties": {
          "lastUpdateCycle": {
            "type": "integer",
            "format": "int32"
          },
          "tournamentId": {
            "type": "string"
          },
          "stage": {
            "type": "integer",
            "format": "int32"
          },
          "unclaimedRewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TournamentCurrencyReward"
            }
          },
          "tier": {
            "type": "integer",
            "format": "int32"
          },
          "groupId": {
            "type": "integer",
            "format": "int64"
          },
          "playerId": {
            "type": "integer",
            "format": "int64"
          },
          "contentId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CompletedStatus": {
        "title": "CompletedStatus",
        "required": [
          "cycle",
          "tier",
          "stage",
          "delta"
        ],
        "type": "object",
        "properties": {
          "cycle": {
            "type": "integer",
            "format": "int32"
          },
          "tier": {
            "type": "integer",
            "format": "int32"
          },
          "stage": {
            "type": "integer",
            "format": "int32"
          },
          "delta": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetStandingsResponse": {
        "title": "Get Standings Response",
        "required": [
          "entries"
        ],
        "type": "object",
        "properties": {
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TournamentEntry"
            }
          },
          "me": {
            "$ref": "#/components/schemas/TournamentEntry"
          }
        },
        "additionalProperties": false
      },
      "TournamentQueryRequest": {
        "title": "Tournament Query Request",
        "type": "object",
        "properties": {
          "isRunning": {
            "type": "boolean"
          },
          "contentId": {
            "type": "string"
          },
          "cycle": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TournamentCurrencyReward": {
        "title": "TournamentCurrencyReward",
        "required": [
          "symbol",
          "amount"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "JoinRequest": {
        "title": "Join Request",
        "required": [
          "tournamentId"
        ],
        "type": "object",
        "properties": {
          "tournamentId": {
            "type": "string"
          },
          "contentId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetGroupsResponse": {
        "title": "Get Groups Response",
        "required": [
          "entries"
        ],
        "type": "object",
        "properties": {
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TournamentGroupEntry"
            }
          },
          "focus": {
            "$ref": "#/components/schemas/TournamentGroupEntry"
          }
        },
        "additionalProperties": false
      },
      "TournamentGroupEntry": {
        "title": "TournamentGroupEntry",
        "required": [
          "groupId",
          "rank",
          "score",
          "stageChange",
          "currencyRewards"
        ],
        "type": "object",
        "properties": {
          "rank": {
            "type": "integer",
            "format": "int64"
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "currencyRewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TournamentCurrencyReward"
            }
          },
          "groupId": {
            "type": "integer",
            "format": "int64"
          },
          "stageChange": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetStatusForGroupsRequest": {
        "title": "Get Status For Groups Request",
        "required": [
          "groupIds",
          "contentId"
        ],
        "type": "object",
        "properties": {
          "groupIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "contentId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetGroupStatusResponse": {
        "title": "Get Group Status Response",
        "required": [
          "statuses"
        ],
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupStatus"
            }
          }
        },
        "additionalProperties": false
      },
      "GetGroupsRequest": {
        "title": "Get Groups Request",
        "required": [
          "tournamentId"
        ],
        "type": "object",
        "properties": {
          "tournamentId": {
            "type": "string"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "focus": {
            "type": "integer",
            "format": "int64"
          },
          "cycle": {
            "type": "integer",
            "format": "int32"
          },
          "from": {
            "type": "integer",
            "format": "int32"
          },
          "contentId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AdminPlayerStatus": {
        "title": "AdminPlayerStatus",
        "required": [
          "contentId",
          "tournamentId",
          "playerId",
          "tier",
          "stage",
          "rank",
          "score",
          "unclaimedRewards",
          "nextCycleStartMs"
        ],
        "type": "object",
        "properties": {
          "tournamentId": {
            "type": "string"
          },
          "stage": {
            "type": "integer",
            "format": "int32"
          },
          "unclaimedRewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TournamentCurrencyReward"
            }
          },
          "tier": {
            "type": "integer",
            "format": "int32"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "playerId": {
            "type": "integer",
            "format": "int64"
          },
          "contentId": {
            "type": "string"
          },
          "nextCycleStartMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "UpdatePlayerStatusRequest": {
        "title": "Update Player Status Request",
        "required": [
          "playerId",
          "tournamentId",
          "update"
        ],
        "type": "object",
        "properties": {
          "playerId": {
            "type": "integer",
            "format": "int64"
          },
          "tournamentId": {
            "type": "string"
          },
          "update": {
            "$ref": "#/components/schemas/PlayerStatusUpdate"
          }
        },
        "additionalProperties": false
      },
      "ChampionScore": {
        "title": "ChampionScore",
        "required": [
          "playerId",
          "score",
          "cycle",
          "startTimeMs",
          "endTimeMs"
        ],
        "type": "object",
        "properties": {
          "endTimeMs": {
            "type": "integer",
            "format": "int64"
          },
          "startTimeMs": {
            "type": "integer",
            "format": "int64"
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "cycle": {
            "type": "integer",
            "format": "int32"
          },
          "playerId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GetChampionsRequest": {
        "title": "Get Champions Request",
        "required": [
          "tournamentId",
          "cycles"
        ],
        "type": "object",
        "properties": {
          "tournamentId": {
            "type": "string"
          },
          "cycles": {
            "type": "integer",
            "format": "int32"
          },
          "contentId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AdminGetPlayerStatusResponse": {
        "title": "Admin Get Player Status Response",
        "required": [
          "statuses"
        ],
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdminPlayerStatus"
            }
          }
        },
        "additionalProperties": false
      },
      "RevokeTokenRequest": {
        "title": "Revoke Token Request",
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ListTokensRequest": {
        "title": "List Tokens Request",
        "required": [
          "gamerTagOrAccountId",
          "page",
          "pageSize"
        ],
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "cid": {
            "type": "integer",
            "format": "int64",
            "x-beamable-semantic-type": "Cid"
          },
          "pid": {
            "type": "string",
            "x-beamable-semantic-type": "Pid"
          },
          "gamerTagOrAccountId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "AuthBasicContextInfo": {
        "title": "ContextInfo",
        "required": [
          "platform",
          "device"
        ],
        "type": "object",
        "properties": {
          "platform": {
            "type": "string"
          },
          "device": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetTokenRequest": {
        "title": "Get Token Request",
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TokenRequestWrapper": {
        "title": "Token Request Wrapper",
        "required": [
          "grant_type"
        ],
        "type": "object",
        "properties": {
          "device_id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "scope": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "refresh_token": {
            "type": "string"
          },
          "context": {
            "$ref": "#/components/schemas/AuthBasicContextInfo"
          },
          "third_party": {
            "type": "string"
          },
          "redirect_uri": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "provider_namespace": {
            "type": "string"
          },
          "challenge_solution": {
            "$ref": "#/components/schemas/ChallengeSolution"
          },
          "external_token": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "initProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "customerScoped": {
            "type": "boolean"
          },
          "provider_service": {
            "type": "string"
          },
          "grant_type": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ListTokenResponseItem": {
        "title": "ListTokenResponseItem",
        "required": [
          "token",
          "platform",
          "device",
          "created"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "platform": {
            "type": "string"
          },
          "device": {
            "type": "string"
          },
          "created": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ListTokenResponse": {
        "title": "List Token Response",
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListTokenResponseItem"
            }
          }
        },
        "additionalProperties": false
      },
      "Token": {
        "title": "Token",
        "required": [
          "token",
          "type",
          "created",
          "cid"
        ],
        "type": "object",
        "properties": {
          "revoked": {
            "type": "boolean"
          },
          "gamerTag": {
            "type": "integer",
            "format": "int64",
            "x-beamable-semantic-type": "Gamertag"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "accountId": {
            "type": "integer",
            "format": "int64",
            "x-beamable-semantic-type": "AccountId"
          },
          "cid": {
            "type": "integer",
            "format": "int64",
            "x-beamable-semantic-type": "Cid"
          },
          "pid": {
            "type": "string",
            "x-beamable-semantic-type": "Pid"
          },
          "expiresMs": {
            "type": "integer",
            "format": "int64"
          },
          "token": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "platform": {
            "type": "string"
          },
          "device": {
            "type": "string"
          },
          "created": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ObjectRequest": {
        "title": "ObjectRequest",
        "required": [
          "objectKey"
        ],
        "type": "object",
        "properties": {
          "objectKey": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ObjectRequests": {
        "title": "Object Requests",
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectRequest"
            }
          },
          "playerId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ObjectsMetadataResponse": {
        "title": "Objects Metadata Response",
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectMetadataResponse"
            }
          }
        },
        "additionalProperties": false
      },
      "URLSResponse": {
        "title": "URLS Response",
        "required": [
          "response"
        ],
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudsavingBasicURLResponse"
            }
          }
        },
        "additionalProperties": false
      },
      "CloudsavingBasicURLResponse": {
        "title": "URLResponse",
        "required": [
          "url",
          "objectKey"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "objectKey": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CloudsavingBasicReference": {
        "title": "Reference",
        "required": [
          "bucketName",
          "key",
          "size",
          "lastModified"
        ],
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "lastModified": {
            "type": "integer",
            "format": "int64"
          },
          "eTag": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "bucketName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ObjectMetadataResponse": {
        "title": "ObjectMetadataResponse",
        "required": [
          "objectKey",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "objectKey": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "MetadataPair": {
        "title": "MetadataPair",
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CloudsavingBasicManifest": {
        "title": "Manifest",
        "required": [
          "id",
          "manifest",
          "created",
          "replacement"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "manifest": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudsavingBasicReference"
            }
          },
          "created": {
            "type": "integer",
            "format": "int64"
          },
          "replacement": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PlayerBasicCloudDataRequest": {
        "title": "Player Basic Cloud Data Request",
        "type": "object",
        "properties": {
          "playerId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "UploadRequestsFromPortal": {
        "title": "Upload Requests From Portal",
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UploadRequestFromPortal"
            }
          },
          "playerId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "UploadRequests": {
        "title": "Upload Requests",
        "required": [
          "request"
        ],
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UploadRequest"
            }
          },
          "playerId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ReplaceObjectsRequest": {
        "title": "Replace Objects Request",
        "required": [
          "sourcePlayerId",
          "targetPlayerId"
        ],
        "type": "object",
        "properties": {
          "sourcePlayerId": {
            "type": "integer",
            "format": "int64"
          },
          "targetPlayerId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "UploadRequest": {
        "title": "UploadRequest",
        "required": [
          "objectKey",
          "sizeInBytes"
        ],
        "type": "object",
        "properties": {
          "objectKey": {
            "type": "string"
          },
          "lastModified": {
            "type": "integer",
            "format": "int64"
          },
          "checksum": {
            "type": "string"
          },
          "sizeInBytes": {
            "type": "integer",
            "format": "int64"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataPair"
            }
          },
          "deleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UploadRequestFromPortal": {
        "title": "UploadRequestFromPortal",
        "required": [
          "objectKey",
          "sizeInBytes"
        ],
        "type": "object",
        "properties": {
          "objectKey": {
            "type": "string"
          },
          "sizeInBytes": {
            "type": "integer",
            "format": "int64"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataPair"
            }
          },
          "lastModified": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CompletePurchaseRequest": {
        "title": "Complete Purchase Request",
        "required": [
          "txid",
          "receipt",
          "priceInLocalCurrency",
          "isoCurrencySymbol"
        ],
        "type": "object",
        "properties": {
          "txid": {
            "type": "integer",
            "format": "int64"
          },
          "receipt": {
            "type": "string"
          },
          "priceInLocalCurrency": {
            "type": "string"
          },
          "isoCurrencySymbol": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetProductsResponse": {
        "title": "Get Products Response",
        "required": [
          "products"
        ],
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductView"
            }
          }
        },
        "additionalProperties": false
      },
      "TrackPurchaseRequest": {
        "title": "Track Purchase Request",
        "required": [
          "purchaseId",
          "skuName",
          "skuProductId",
          "store",
          "priceInLocalCurrency",
          "isoCurrencySymbol",
          "obtainCurrency",
          "obtainItems"
        ],
        "type": "object",
        "properties": {
          "priceInLocalCurrency": {
            "type": "number",
            "format": "double"
          },
          "skuName": {
            "type": "string"
          },
          "skuProductId": {
            "type": "string"
          },
          "store": {
            "type": "string"
          },
          "obtainItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemCreateRequest"
            }
          },
          "obtainCurrency": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyChange"
            }
          },
          "purchaseId": {
            "type": "string"
          },
          "isoCurrencySymbol": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "FacebookUpdatedEntry": {
        "title": "FacebookUpdatedEntry",
        "required": [
          "id",
          "time",
          "changed_fields"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "time": {
            "type": "integer",
            "format": "int64"
          },
          "changed_fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "GetPricesRequest": {
        "title": "Get Prices Request",
        "required": [
          "steamId"
        ],
        "type": "object",
        "properties": {
          "steamId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "FacebookPaymentUpdateRequest": {
        "title": "Facebook Payment Update Request",
        "required": [
          "object",
          "entry"
        ],
        "type": "object",
        "properties": {
          "object": {
            "type": "string"
          },
          "entry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FacebookUpdatedEntry"
            }
          }
        },
        "additionalProperties": false
      },
      "GetOrderInfoRequest": {
        "title": "Get Order Info Request",
        "required": [
          "orderId"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ListAuditRequest": {
        "title": "List Audit Request",
        "type": "object",
        "properties": {
          "providerid": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "txid": {
            "type": "integer",
            "format": "int64"
          },
          "player": {
            "type": "integer",
            "format": "int64"
          },
          "start": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductView": {
        "title": "ProductView",
        "required": [
          "sku",
          "description",
          "isoCurrencyCode",
          "localizedPriceString",
          "localizedPrice"
        ],
        "type": "object",
        "properties": {
          "localizedPrice": {
            "type": "number",
            "format": "double"
          },
          "sku": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isoCurrencyCode": {
            "type": "string"
          },
          "localizedPriceString": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "FailPurchaseRequest": {
        "title": "Fail Purchase Request",
        "required": [
          "txid",
          "reason"
        ],
        "type": "object",
        "properties": {
          "txid": {
            "type": "integer",
            "format": "int64"
          },
          "reason": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BeginPurchaseRequest": {
        "title": "Begin Purchase Request",
        "required": [
          "purchaseId"
        ],
        "type": "object",
        "properties": {
          "purchaseId": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "time": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SteamOrderInfoItem": {
        "title": "SteamOrderInfoItem",
        "required": [
          "itemid",
          "qty",
          "amount",
          "vat",
          "itemstatus"
        ],
        "type": "object",
        "properties": {
          "vat": {
            "type": "integer",
            "format": "int64"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "itemid": {
            "type": "integer",
            "format": "int64"
          },
          "qty": {
            "type": "integer",
            "format": "int64"
          },
          "itemstatus": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "VerifyPurchaseRequest": {
        "title": "Verify Purchase Request",
        "required": [
          "receipt"
        ],
        "type": "object",
        "properties": {
          "receipt": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionVerificationRequest": {
        "title": "Subscription Verification Request",
        "required": [
          "hubMode",
          "hubChallenge",
          "hubVerifyToken"
        ],
        "type": "object",
        "properties": {
          "hubMode": {
            "type": "string"
          },
          "hubChallenge": {
            "type": "string"
          },
          "hubVerifyToken": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetProductResponse": {
        "title": "Get Product Response",
        "required": [
          "id",
          "name",
          "description",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LocalizedPriceMap": {
        "title": "Localized Price Map",
        "required": [
          "currency",
          "prices"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizedPrice"
            }
          }
        },
        "additionalProperties": false
      },
      "LocalizedPrice": {
        "title": "LocalizedPrice",
        "required": [
          "to",
          "price",
          "priceLocalized",
          "priceLocalizedString"
        ],
        "type": "object",
        "properties": {
          "to": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "integer",
            "format": "int64"
          },
          "priceLocalized": {
            "type": "number",
            "format": "double"
          },
          "priceLocalizedString": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PaymentResultResponse": {
        "title": "Payment Result Response",
        "required": [
          "result"
        ],
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BeginPurchaseResponse": {
        "title": "Begin Purchase Response",
        "required": [
          "txid"
        ],
        "type": "object",
        "properties": {
          "txid": {
            "type": "integer",
            "format": "int64"
          },
          "access_token": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SteamOrderInfoResponse": {
        "title": "Steam Order Info Response",
        "required": [
          "orderid",
          "transid",
          "steamid",
          "status",
          "currency",
          "time",
          "country",
          "usstate",
          "timecreated",
          "items"
        ],
        "type": "object",
        "properties": {
          "usstate": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SteamOrderInfoItem"
            }
          },
          "country": {
            "type": "string"
          },
          "timecreated": {
            "type": "string"
          },
          "transid": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string"
          },
          "orderid": {
            "type": "integer",
            "format": "int64"
          },
          "steamid": {
            "type": "integer",
            "format": "int64"
          },
          "currency": {
            "type": "string"
          },
          "time": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetProductRequest": {
        "title": "Get Product Request",
        "required": [
          "sku"
        ],
        "type": "object",
        "properties": {
          "sku": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CancelPurchaseRequest": {
        "title": "Cancel Purchase Request",
        "required": [
          "txid"
        ],
        "type": "object",
        "properties": {
          "txid": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "SteamAuthRequest": {
        "title": "Steam Auth Request",
        "required": [
          "ticket"
        ],
        "type": "object",
        "properties": {
          "ticket": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "FacebookPaymentUpdateResponse": {
        "title": "Facebook Payment Update Response",
        "required": [
          "result"
        ],
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionVerificationResponse": {
        "title": "Subscription Verification Response",
        "required": [
          "hubChallenge"
        ],
        "type": "object",
        "properties": {
          "hubChallenge": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "EmptyRsp": {
        "title": "Empty Rsp",
        "type": "object",
        "additionalProperties": false
      },
      "SendNotification": {
        "title": "SendNotification",
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RegisterReq": {
        "title": "Register Req",
        "required": [
          "provider",
          "token"
        ],
        "type": "object",
        "properties": {
          "provider": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SendReq": {
        "title": "Send Req",
        "required": [
          "msgs"
        ],
        "type": "object",
        "properties": {
          "msgs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SendMsg"
            }
          }
        },
        "additionalProperties": false
      },
      "SendMsg": {
        "title": "SendMsg",
        "required": [
          "to"
        ],
        "type": "object",
        "properties": {
          "to": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "notification": {
            "$ref": "#/components/schemas/SendNotification"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "NotificationRequestData": {
        "title": "NotificationRequestData",
        "type": "object",
        "properties": {
          "messageParams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "channel": {
            "type": "string"
          },
          "messageKey": {
            "type": "string"
          },
          "context": {
            "type": "string"
          },
          "shard": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "messageFull": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ServerEvent": {
        "title": "Server Event",
        "required": [
          "event",
          "toAll"
        ],
        "type": "object",
        "properties": {
          "event": {
            "type": "string"
          },
          "payload": {
            "type": "string"
          },
          "toAll": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "NotificationRequest": {
        "title": "Notification Request",
        "required": [
          "payload"
        ],
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/NotificationRequestData"
          },
          "customChannelSuffix": {
            "type": "string"
          },
          "dbid": {
            "type": "integer",
            "format": "int64"
          },
          "useSignalWhenPossible": {
            "type": "boolean"
          },
          "dbids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "additionalProperties": false
      },
      "SubscriberDetailsResponse": {
        "title": "Subscriber Details Response",
        "required": [
          "subscribeKey",
          "gameNotificationChannel",
          "playerChannel",
          "playerForRealmChannel",
          "customChannelPrefix",
          "authenticationKey",
          "playerChannels"
        ],
        "type": "object",
        "properties": {
          "customChannelPrefix": {
            "type": "string"
          },
          "playerForRealmChannel": {
            "type": "string"
          },
          "authenticationKey": {
            "type": "string"
          },
          "playerChannels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gameGlobalNotificationChannel": {
            "type": "string"
          },
          "gameNotificationChannel": {
            "type": "string"
          },
          "subscribeKey": {
            "type": "string"
          },
          "playerChannel": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ArchiveProjectRequest": {
        "title": "Archive Project Request",
        "required": [
          "pid"
        ],
        "type": "object",
        "properties": {
          "pid": {
            "type": "string",
            "x-beamable-semantic-type": "Pid"
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicUpdateGameHierarchyRequest": {
        "title": "Update Game Hierarchy Request",
        "required": [
          "rootPID",
          "projects"
        ],
        "type": "object",
        "properties": {
          "rootPID": {
            "type": "string",
            "x-beamable-semantic-type": "Pid"
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectView"
            }
          }
        },
        "additionalProperties": false
      },
      "LaunchMessageListResponse": {
        "title": "Launch Message List Response",
        "required": [
          "files"
        ],
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "CustomerResponse": {
        "title": "Customer Response",
        "required": [
          "customer"
        ],
        "type": "object",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/RealmsBasicCustomer"
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicCustomersResponse": {
        "title": "Customers Response",
        "required": [
          "result"
        ],
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealmsBasicCustomer"
            }
          }
        },
        "additionalProperties": false
      },
      "CreatePlanRequest": {
        "title": "Create Plan Request",
        "required": [
          "name",
          "mongoHosts",
          "sharded",
          "mongoSSL",
          "platformJBDC",
          "memcachedHosts",
          "redisShards"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "messageBusAnalytics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mongoSrvAddress": {
            "type": "string"
          },
          "memcachedHosts": {
            "type": "string"
          },
          "mongoSSL": {
            "type": "boolean"
          },
          "platformJBDC": {
            "type": "string"
          },
          "sharded": {
            "type": "boolean"
          },
          "mongoHosts": {
            "type": "string"
          },
          "messageBusCommon": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "redisShards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RedisShardRequest"
            }
          }
        },
        "additionalProperties": false
      },
      "ContentLimits": {
        "title": "ContentLimits",
        "type": "object",
        "properties": {
          "maxDistinctContentIds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicServiceLimits": {
        "title": "ServiceLimits",
        "type": "object",
        "properties": {
          "beamo": {
            "$ref": "#/components/schemas/RealmsBasicBeamoLimits"
          },
          "content": {
            "$ref": "#/components/schemas/ContentLimits"
          },
          "gateway": {
            "$ref": "#/components/schemas/GatewayLimits"
          }
        },
        "additionalProperties": false
      },
      "FailedInFlightFilterRequest": {
        "title": "Failed In Flight Filter Request",
        "required": [
          "serviceName"
        ],
        "type": "object",
        "properties": {
          "serviceObjectId": {
            "type": "string"
          },
          "serviceName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GatewayLimits": {
        "title": "GatewayLimits",
        "required": [
          "maxConcurrentRequests"
        ],
        "type": "object",
        "properties": {
          "maxConcurrentRequests": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicRealmConfiguration": {
        "title": "Realm Configuration",
        "required": [
          "environment",
          "websocketConfig",
          "microserviceURI",
          "microserviceEcrURI",
          "portalURI",
          "storageBrowserURI"
        ],
        "type": "object",
        "properties": {
          "websocketConfig": {
            "$ref": "#/components/schemas/RealmsBasicWebSocketConfiguration"
          },
          "microserviceURI": {
            "type": "string"
          },
          "portalURI": {
            "type": "string"
          },
          "microserviceEcrURI": {
            "type": "string"
          },
          "storageBrowserURI": {
            "type": "string"
          },
          "environment": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicNewCustomerRequest": {
        "title": "New Customer Request",
        "required": [
          "projectName",
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "projectName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "hierarchy": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PromoteRealmResponseOld": {
        "title": "Promote Realm Response Old",
        "required": [
          "sourcePid",
          "promotions"
        ],
        "type": "object",
        "properties": {
          "sourcePid": {
            "type": "string"
          },
          "promotions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealmPromotion"
            }
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicCustomerView": {
        "title": "CustomerView",
        "required": [
          "cid",
          "name",
          "projects"
        ],
        "type": "object",
        "properties": {
          "cid": {
            "type": "integer",
            "format": "int64",
            "x-beamable-semantic-type": "Cid"
          },
          "name": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectView"
            }
          }
        },
        "additionalProperties": false
      },
      "GetGameResponse": {
        "title": "Get Game Response",
        "required": [
          "projects"
        ],
        "type": "object",
        "properties": {
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectView"
            }
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicPromoteRealmRequest": {
        "title": "Promote Realm Request",
        "required": [
          "sourcePid"
        ],
        "type": "object",
        "properties": {
          "sourcePid": {
            "type": "string",
            "x-beamable-semantic-type": "Pid"
          },
          "promotions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contentManifestIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "CreateLaunchMessageRequest": {
        "title": "Create Launch Message Request",
        "required": [
          "name",
          "body"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "body": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicRealmConfigSaveRequest": {
        "title": "Realm Config Save Request",
        "required": [
          "config"
        ],
        "type": "object",
        "properties": {
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicInFlightFailureResponse": {
        "title": "In Flight Failure Response",
        "required": [
          "failures"
        ],
        "type": "object",
        "properties": {
          "failures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealmsBasicInFlightFailure"
            }
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicPromotionScope": {
        "title": "PromotionScope",
        "required": [
          "name",
          "promotions"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "promotions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Promotion"
            }
          }
        },
        "additionalProperties": false
      },
      "HtmlResponse": {
        "title": "Html Response",
        "required": [
          "html"
        ],
        "type": "object",
        "properties": {
          "html": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicServicePlan": {
        "title": "ServicePlan",
        "required": [
          "name",
          "dataDomain"
        ],
        "type": "object",
        "properties": {
          "minCustomerStatusSaved": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "dataDomain": {
            "$ref": "#/components/schemas/RealmsBasicDataDomain"
          },
          "limits": {
            "$ref": "#/components/schemas/RealmsBasicServiceLimits"
          },
          "created": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CustomerViewResponse": {
        "title": "Customer View Response",
        "required": [
          "customer"
        ],
        "type": "object",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/RealmsBasicCustomerView"
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicAliasAvailableResponse": {
        "title": "Alias Available Response",
        "required": [
          "alias",
          "available",
          "cid"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "available": {
            "type": "boolean"
          },
          "cid": {
            "type": "integer",
            "format": "int64",
            "x-beamable-semantic-type": "Cid"
          }
        },
        "additionalProperties": false
      },
      "RealmPromotion": {
        "title": "RealmPromotion",
        "required": [
          "name",
          "source",
          "destination"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/Promotable"
          },
          "destination": {
            "$ref": "#/components/schemas/Promotable"
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicBeamoLimits": {
        "title": "BeamoLimits",
        "required": [
          "maxContainerSize",
          "maxRunningContainersPerService"
        ],
        "type": "object",
        "properties": {
          "maxContainerSize": {
            "type": "string"
          },
          "maxRunningContainersPerService": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Project": {
        "title": "Project",
        "required": [
          "name",
          "secret",
          "plan",
          "customCharts",
          "archived",
          "root"
        ],
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "parent": {
            "type": "string"
          },
          "children": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "x-beamable-semantic-type": "Pid"
          },
          "customCharts": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "root": {
            "type": "boolean"
          },
          "archived": {
            "type": "boolean"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "status": {
            "type": "string"
          },
          "sharded": {
            "type": "boolean"
          },
          "sigval": {
            "type": "boolean"
          },
          "plan": {
            "type": "string"
          },
          "created": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ActivationRequest": {
        "title": "Activation Request",
        "required": [
          "token",
          "cid"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "cid": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicRealmConfigResponse": {
        "title": "Realm Config Response",
        "required": [
          "config"
        ],
        "type": "object",
        "properties": {
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicCustomer": {
        "title": "Customer",
        "required": [
          "cid",
          "name",
          "projects",
          "accounts"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "activationStatus": {
            "type": "string"
          },
          "paymentStatus": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "contact": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          },
          "cid": {
            "type": "integer",
            "format": "int64",
            "x-beamable-semantic-type": "Cid"
          },
          "updated": {
            "type": "integer",
            "format": "int64"
          },
          "crm_link": {
            "type": "string"
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealmsBasicAccount"
            }
          },
          "created": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "AliasAvailableRequest": {
        "title": "Alias Available Request",
        "required": [
          "alias"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetGameRequest": {
        "title": "Get Game Request",
        "required": [
          "rootPID"
        ],
        "type": "object",
        "properties": {
          "rootPID": {
            "type": "string",
            "x-beamable-semantic-type": "Pid"
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicInFlightFailure": {
        "title": "InFlightFailure",
        "required": [
          "id",
          "serviceObjectId",
          "serviceName",
          "inFlightMessage",
          "lastError",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "serviceObjectId": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "serviceName": {
            "type": "string"
          },
          "inFlightMessage": {
            "$ref": "#/components/schemas/InFlightMessage"
          },
          "lastError": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicWebSocketConfiguration": {
        "title": "WebSocketConfiguration",
        "required": [
          "provider"
        ],
        "type": "object",
        "properties": {
          "provider": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicNewCustomerResponse": {
        "title": "New Customer Response",
        "required": [
          "token",
          "cid",
          "pid",
          "name",
          "projectName",
          "activationPending"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "projectName": {
            "type": "string"
          },
          "activationPending": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "cid": {
            "type": "integer",
            "format": "int64",
            "x-beamable-semantic-type": "Cid"
          },
          "pid": {
            "type": "string",
            "x-beamable-semantic-type": "Pid"
          },
          "token": {
            "$ref": "#/components/schemas/TokenResponse"
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicDataDomain": {
        "title": "DataDomain",
        "required": [
          "mongoHosts",
          "mongoSharded",
          "memcachedHosts",
          "mongoSSLEnabled"
        ],
        "type": "object",
        "properties": {
          "messageBusAnalytics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mongoSrvAddress": {
            "type": "string"
          },
          "memcachedHosts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mongoSharded": {
            "type": "boolean"
          },
          "mongoSSL": {
            "type": "boolean"
          },
          "mongoHosts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mongoSSLEnabled": {
            "type": "boolean"
          },
          "messageBusCommon": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "redisShards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealmsBasicRedisShard"
            }
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicServicePlansResponse": {
        "title": "Service Plans Response",
        "required": [
          "result"
        ],
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealmsBasicServicePlan"
            }
          }
        },
        "additionalProperties": false
      },
      "RenameProjectRequest": {
        "title": "Rename Project Request",
        "required": [
          "projectId",
          "newName"
        ],
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "x-beamable-semantic-type": "Pid"
          },
          "newName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateProjectRequest": {
        "title": "Create Project Request",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "plan": {
            "type": "string"
          },
          "sharded": {
            "type": "boolean"
          },
          "parent": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UnarchiveProjectRequest": {
        "title": "Unarchive Project Request",
        "required": [
          "projectId"
        ],
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "x-beamable-semantic-type": "Pid"
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicRedisShard": {
        "title": "RedisShard",
        "required": [
          "shardId",
          "masterHost",
          "slaveHosts"
        ],
        "type": "object",
        "properties": {
          "shardId": {
            "type": "integer",
            "format": "int32"
          },
          "masterHost": {
            "type": "string"
          },
          "slaveHosts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicPromoteRealmResponse": {
        "title": "Promote Realm Response",
        "required": [
          "sourcePid",
          "scopes"
        ],
        "type": "object",
        "properties": {
          "sourcePid": {
            "type": "string",
            "x-beamable-semantic-type": "Pid"
          },
          "scopes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealmsBasicPromotionScope"
            }
          }
        },
        "additionalProperties": false
      },
      "RemoveLaunchMessageRequest": {
        "title": "Remove Launch Message Request",
        "required": [
          "file"
        ],
        "type": "object",
        "properties": {
          "file": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ProjectView": {
        "title": "ProjectView",
        "required": [
          "projectName",
          "pid"
        ],
        "type": "object",
        "properties": {
          "secret": {
            "type": "string"
          },
          "parent": {
            "type": "string",
            "x-beamable-semantic-type": "Pid"
          },
          "children": {
            "type": "array",
            "items": {
              "type": "string",
              "x-beamable-semantic-type": "Pid"
            }
          },
          "projectName": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          },
          "cid": {
            "type": "integer",
            "format": "int64",
            "x-beamable-semantic-type": "Cid"
          },
          "pid": {
            "type": "string",
            "x-beamable-semantic-type": "Pid"
          },
          "sharded": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RealmsBasicAccount": {
        "title": "Account",
        "required": [
          "user",
          "password",
          "projects"
        ],
        "type": "object",
        "properties": {
          "user": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "projects": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "InvitationDirection": {
        "title": "InvitationDirection",
        "enum": [
          "incoming",
          "outgoing"
        ],
        "type": "string"
      },
      "FriendSource": {
        "title": "FriendSource",
        "enum": [
          "native",
          "facebook"
        ],
        "type": "string"
      },
      "Player": {
        "title": "Player",
        "required": [
          "playerId"
        ],
        "type": "object",
        "properties": {
          "playerId": {
            "type": "string",
            "x-beamable-semantic-type": "Gamertag"
          }
        },
        "additionalProperties": false
      },
      "Friend": {
        "title": "Friend",
        "required": [
          "playerId",
          "source"
        ],
        "type": "object",
        "properties": {
          "playerId": {
            "type": "string",
            "x-beamable-semantic-type": "Gamertag"
          },
          "source": {
            "$ref": "#/components/schemas/FriendSource"
          }
        },
        "additionalProperties": false
      },
      "Invite": {
        "title": "Invite",
        "required": [
          "playerId",
          "direction"
        ],
        "type": "object",
        "properties": {
          "playerId": {
            "type": "string",
            "x-beamable-semantic-type": "Gamertag"
          },
          "direction": {
            "$ref": "#/components/schemas/InvitationDirection"
          }
        },
        "additionalProperties": false
      },
      "Social": {
        "title": "Social",
        "required": [
          "playerId",
          "friends",
          "blocked",
          "invites"
        ],
        "type": "object",
        "properties": {
          "playerId": {
            "type": "string",
            "x-beamable-semantic-type": "Gamertag"
          },
          "friends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Friend"
            }
          },
          "blocked": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Player"
            }
          },
          "invites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invite"
            }
          }
        },
        "additionalProperties": false
      },
      "GetSocialStatusesResponse": {
        "title": "Get Social Statuses Response",
        "required": [
          "statuses"
        ],
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Social"
            }
          }
        },
        "additionalProperties": false
      },
      "PlayerIdRequest": {
        "title": "Player Id Request",
        "required": [
          "playerId"
        ],
        "type": "object",
        "properties": {
          "playerId": {
            "type": "string",
            "x-beamable-semantic-type": "Gamertag"
          }
        },
        "additionalProperties": false
      },
      "FriendshipStatus": {
        "title": "Friendship Status",
        "required": [
          "playerId",
          "friendId",
          "isBlocked"
        ],
        "type": "object",
        "properties": {
          "playerId": {
            "type": "string",
            "x-beamable-semantic-type": "Gamertag"
          },
          "friendId": {
            "type": "string",
            "x-beamable-semantic-type": "Gamertag"
          },
          "isBlocked": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MakeFriendshipRequest": {
        "title": "Make Friendship Request",
        "required": [
          "gamerTag"
        ],
        "type": "object",
        "properties": {
          "gamerTag": {
            "type": "integer",
            "format": "int64",
            "x-beamable-semantic-type": "Gamertag"
          }
        },
        "additionalProperties": false
      },
      "GetSocialStatusesRequest": {
        "title": "Get Social Statuses Request",
        "required": [
          "playerIds"
        ],
        "type": "object",
        "properties": {
          "playerIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "ImportFriendsRequest": {
        "title": "Import Friends Request",
        "required": [
          "source",
          "token"
        ],
        "type": "object",
        "properties": {
          "source": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SendFriendRequest": {
        "title": "Send Friend Request",
        "required": [
          "gamerTag"
        ],
        "type": "object",
        "properties": {
          "gamerTag": {
            "type": "integer",
            "format": "int64",
            "x-beamable-semantic-type": "Gamertag"
          }
        },
        "additionalProperties": false
      },
      "CreateRoomResponse": {
        "title": "Create Room Response",
        "required": [
          "room"
        ],
        "type": "object",
        "properties": {
          "room": {
            "$ref": "#/components/schemas/RoomInfo"
          }
        },
        "additionalProperties": false
      },
      "SendMessageResponse": {
        "title": "Send Message Response",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "$ref": "#/components/schemas/ChatV2ObjectMessage"
          }
        },
        "additionalProperties": false
      },
      "LeaveRoomRequest": {
        "title": "Leave Room Request",
        "required": [
          "roomId"
        ],
        "type": "object",
        "properties": {
          "roomId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SendMessageRequest": {
        "title": "Send Message Request",
        "required": [
          "roomId",
          "content"
        ],
        "type": "object",
        "properties": {
          "roomId": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateRoomRequest": {
        "title": "Create Room Request",
        "required": [
          "roomName",
          "keepSubscribed",
          "players"
        ],
        "type": "object",
        "properties": {
          "roomName": {
            "type": "string"
          },
          "keepSubscribed": {
            "type": "boolean"
          },
          "players": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "additionalProperties": false
      },
      "RoomInfo": {
        "title": "RoomInfo",
        "required": [
          "id",
          "name",
          "keepSubscribed"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "keepSubscribed": {
            "type": "boolean"
          },
          "players": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "additionalProperties": false
      },
      "LeaveRoomResponse": {
        "title": "Leave Room Response",
        "required": [
          "removed"
        ],
        "type": "object",
        "properties": {
          "removed": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetRoomsResponse": {
        "title": "Get Rooms Response",
        "required": [
          "rooms"
        ],
        "type": "object",
        "properties": {
          "rooms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomInfo"
            }
          }
        },
        "additionalProperties": false
      },
      "ChatV2ObjectMessage": {
        "title": "Message",
        "required": [
          "messageId",
          "roomId",
          "gamerTag",
          "content",
          "censoredContent",
          "reactions",
          "timestampMillis"
        ],
        "type": "object",
        "properties": {
          "roomId": {
            "type": "string"
          },
          "gamerTag": {
            "type": "integer",
            "format": "int64"
          },
          "reactions": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "timestampMillis": {
            "type": "integer",
            "format": "int64"
          },
          "censoredContent": {
            "type": "string"
          },
          "messageId": {
            "type": "string",
            "format": "uuid"
          },
          "content": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ChatGetRequest": {
        "title": "Chat Get Request",
        "type": "object",
        "properties": {
          "scope": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "OfferDefinition": {
        "title": "OfferDefinition",
        "required": [
          "symbol",
          "titles",
          "descriptions",
          "images",
          "obtain"
        ],
        "type": "object",
        "properties": {
          "titles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "symbol": {
            "type": "string"
          },
          "obtainItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemCreateRequest"
            }
          },
          "lootRoll": {
            "$ref": "#/components/schemas/CommerceLootRoll"
          },
          "obtainCurrency": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyChange"
            }
          },
          "metadata": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "descriptions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "obtain": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "EntitlementRequirement": {
        "title": "EntitlementRequirement",
        "required": [
          "symbol",
          "constraint",
          "state"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "constraint": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "specialization": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetSkusReq": {
        "title": "Get Skus Req",
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Listing": {
        "title": "Listing",
        "required": [
          "symbol",
          "offerSymbol",
          "price",
          "playerStatRequirements",
          "cohortRequirements",
          "entitlementRequirements",
          "offerRequirements",
          "clientData"
        ],
        "type": "object",
        "properties": {
          "cohortRequirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CohortRequirement"
            }
          },
          "offerSymbol": {
            "type": "string"
          },
          "purchaseLimit": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "playerStatRequirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerStatRequirement"
            }
          },
          "buttonText": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "scheduleInstancePurchaseLimit": {
            "type": "integer",
            "format": "int32"
          },
          "entitlementRequirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntitlementRequirement"
            }
          },
          "symbol": {
            "type": "string"
          },
          "clientData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "activeDurationCoolDownSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "activeDurationSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "activeDurationPurchaseLimit": {
            "type": "integer",
            "format": "int32"
          },
          "offerRequirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfferRequirement"
            }
          },
          "activePeriod": {
            "$ref": "#/components/schemas/Period"
          }
        },
        "additionalProperties": false
      },
      "ResultResponse": {
        "title": "Result Response",
        "required": [
          "result"
        ],
        "type": "object",
        "properties": {
          "result": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SKU": {
        "title": "SKU",
        "required": [
          "name",
          "description",
          "realPrice",
          "productIds"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "realPrice": {
            "type": "integer",
            "format": "int32"
          },
          "productIds": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "GetCatalogResponse": {
        "title": "Get Catalog Response",
        "type": "object",
        "properties": {
          "catalog": {
            "$ref": "#/components/schemas/Catalog"
          }
        },
        "additionalProperties": false
      },
      "SKUDefinitions": {
        "title": "SKUDefinitions",
        "required": [
          "version",
          "created",
          "definitions"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "integer",
            "description": "Milliseconds since midnight, January 1, 1970 UTC",
            "format": "int64",
            "x-beamable-date-format": "unix"
          },
          "definitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SKU"
            }
          }
        },
        "additionalProperties": false
      },
      "Price": {
        "title": "Price",
        "required": [
          "type",
          "symbol"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "schedule": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "CommerceLootRoll": {
        "title": "CommerceLootRoll",
        "required": [
          "preroll"
        ],
        "type": "object",
        "properties": {
          "preroll": {
            "type": "boolean"
          },
          "externalTables": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "Period": {
        "title": "Period",
        "required": [
          "start"
        ],
        "type": "object",
        "properties": {
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "OfferConstraint": {
        "title": "OfferConstraint",
        "required": [
          "constraint",
          "value"
        ],
        "type": "object",
        "properties": {
          "constraint": {
            "type": "string"
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetSKUsResponse": {
        "title": "Get SK Us Response",
        "required": [
          "skus"
        ],
        "type": "object",
        "properties": {
          "skus": {
            "$ref": "#/components/schemas/SKUDefinitions"
          }
        },
        "additionalProperties": false
      },
      "GetCatalogReq": {
        "title": "Get Catalog Req",
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "SaveCatalogRequest": {
        "title": "Save Catalog Request",
        "required": [
          "stores",
          "offerDefinitions"
        ],
        "type": "object",
        "properties": {
          "stores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Store"
            }
          },
          "offerDefinitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfferDefinition"
            }
          }
        },
        "additionalProperties": false
      },
      "SaveSKUsRequest": {
        "title": "Save SK Us Request",
        "required": [
          "definitions"
        ],
        "type": "object",
        "properties": {
          "definitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SKU"
            }
          }
        },
        "additionalProperties": false
      },
      "OfferRequirement": {
        "title": "OfferRequirement",
        "required": [
          "offerSymbol",
          "purchases"
        ],
        "type": "object",
        "properties": {
          "offerSymbol": {
            "type": "string"
          },
          "purchases": {
            "$ref": "#/components/schemas/OfferConstraint"
          }
        },
        "additionalProperties": false
      },
      "CohortRequirement": {
        "title": "CohortRequirement",
        "required": [
          "trial",
          "cohort",
          "constraint"
        ],
        "type": "object",
        "properties": {
          "trial": {
            "type": "string"
          },
          "cohort": {
            "type": "string"
          },
          "constraint": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Catalog": {
        "title": "Catalog",
        "required": [
          "version",
          "created",
          "stores",
          "offerDefinitions"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "integer",
            "description": "Milliseconds since midnight, January 1, 1970 UTC",
            "format": "int64",
            "x-beamable-date-format": "unix"
          },
          "stores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Store"
            }
          },
          "offerDefinitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfferDefinition"
            }
          }
        },
        "additionalProperties": false
      },
      "Store": {
        "title": "Store",
        "required": [
          "symbol",
          "listings"
        ],
        "type": "object",
        "properties": {
          "activeListingLimit": {
            "type": "integer",
            "format": "int32"
          },
          "choose": {
            "type": "integer",
            "format": "int32"
          },
          "listings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Listing"
            }
          },
          "showInactiveListings": {
            "type": "boolean"
          },
          "symbol": {
            "type": "string"
          },
          "refreshTime": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ReportPurchaseRequest": {
        "title": "Report Purchase Request",
        "required": [
          "listingId"
        ],
        "type": "object",
        "properties": {
          "listingId": {
            "type": "string"
          },
          "free": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetActiveListingRequest": {
        "title": "Get Active Listing Request",
        "required": [
          "listing"
        ],
        "type": "object",
        "properties": {
          "listing": {
            "type": "string"
          },
          "store": {
            "type": "string"
          },
          "time": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetOffersReq": {
        "title": "Get Offers Req",
        "type": "object",
        "properties": {
          "language": {
            "type": "string"
          },
          "time": {
            "type": "string"
          },
          "stores": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ClearStatusRequest": {
        "title": "Clear Status Request",
        "required": [
          "store"
        ],
        "type": "object",
        "properties": {
          "store": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PlayerListingView": {
        "title": "PlayerListingView",
        "required": [
          "symbol",
          "offer",
          "secondsActive",
          "clientData",
          "clientDataList",
          "active",
          "queryAfterPurchase"
        ],
        "type": "object",
        "properties": {
          "clientDataList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientDataEntry"
            }
          },
          "symbol": {
            "type": "string"
          },
          "clientData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "cooldown": {
            "type": "integer",
            "format": "int32"
          },
          "secondsActive": {
            "type": "integer",
            "format": "int64"
          },
          "offer": {
            "$ref": "#/components/schemas/PlayerOfferView"
          },
          "queryAfterPurchase": {
            "type": "boolean"
          },
          "purchasesRemain": {
            "type": "integer",
            "format": "int32"
          },
          "secondsRemain": {
            "type": "integer",
            "format": "int64"
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "StatSubscriptionNotification": {
        "title": "Stat Subscription Notification",
        "required": [
          "statsBefore",
          "statsAfter"
        ],
        "type": "object",
        "properties": {
          "statsBefore": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "statsAfter": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "GetTotalCouponResponse": {
        "title": "Get Total Coupon Response",
        "required": [
          "count"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GiveCouponReq": {
        "title": "Give Coupon Req",
        "required": [
          "listing"
        ],
        "type": "object",
        "properties": {
          "listing": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetStoresReq": {
        "title": "Get Stores Req",
        "type": "object",
        "properties": {
          "scope": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PlayerStoreView": {
        "title": "PlayerStoreView",
        "required": [
          "symbol",
          "listings"
        ],
        "type": "object",
        "properties": {
          "listings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerListingView"
            }
          },
          "symbol": {
            "type": "string"
          },
          "nextDeltaSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "secondsRemain": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "PurchaseRequest": {
        "title": "Purchase Request",
        "required": [
          "purchaseId"
        ],
        "type": "object",
        "properties": {
          "purchaseId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PlayerOfferView": {
        "title": "PlayerOfferView",
        "required": [
          "symbol",
          "titles",
          "descriptions",
          "images",
          "obtain",
          "obtainCurrency",
          "obtainItems",
          "price",
          "coupons"
        ],
        "type": "object",
        "properties": {
          "coupons": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "buttonText": {
            "type": "string"
          },
          "titles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "symbol": {
            "type": "string"
          },
          "obtainItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemCreateRequest"
            }
          },
          "obtainCurrency": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyChange"
            }
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "descriptions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "obtain": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "ActiveListingResponse": {
        "title": "Active Listing Response",
        "required": [
          "storeSymbol",
          "listing"
        ],
        "type": "object",
        "properties": {
          "storeSymbol": {
            "type": "string"
          },
          "listing": {
            "$ref": "#/components/schemas/PlayerListingView"
          }
        },
        "additionalProperties": false
      },
      "UpdateListingCooldownRequest": {
        "title": "UpdateListingCooldownRequest",
        "required": [
          "symbol",
          "cooldownReduction"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "cooldownReduction": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetActiveOffersResponse": {
        "title": "Get Active Offers Response",
        "required": [
          "stores"
        ],
        "type": "object",
        "properties": {
          "stores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerStoreView"
            }
          }
        },
        "additionalProperties": false
      },
      "CooldownModifierRequest": {
        "title": "Cooldown Modifier Request",
        "required": [
          "gamerTag",
          "updateListingCooldownRequests"
        ],
        "type": "object",
        "properties": {
          "gamerTag": {
            "type": "integer",
            "format": "int64"
          },
          "updateListingCooldownRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateListingCooldownRequest"
            }
          }
        },
        "additionalProperties": false
      },
      "ClientDataEntry": {
        "title": "ClientDataEntry",
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RewardCalendarDay": {
        "title": "RewardCalendarDay",
        "required": [
          "obtain"
        ],
        "type": "object",
        "properties": {
          "obtain": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntitlementGenerator"
            }
          }
        },
        "additionalProperties": false
      },
      "CalendarView": {
        "title": "CalendarView",
        "required": [
          "id",
          "days",
          "nextIndex",
          "remainingSeconds",
          "nextClaimSeconds"
        ],
        "type": "object",
        "properties": {
          "nextIndex": {
            "type": "integer",
            "format": "int32"
          },
          "nextClaimSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "string"
          },
          "remainingSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "days": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewardCalendarDay"
            }
          }
        },
        "additionalProperties": false
      },
      "CalendarClaimRequest": {
        "title": "Calendar Claim Request",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CalendarQueryResponse": {
        "title": "Calendar Query Response",
        "required": [
          "calendars"
        ],
        "type": "object",
        "properties": {
          "calendars": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalendarView"
            }
          }
        },
        "additionalProperties": false
      },
      "ListTagsResponse": {
        "title": "List Tags Response",
        "required": [
          "tags"
        ],
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "WebhookComet": {
        "title": "WebhookComet",
        "required": [
          "symbol",
          "method",
          "route",
          "variables",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "method": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "variables": {
            "$ref": "#/components/schemas/RouteVariables"
          },
          "symbol": {
            "type": "string"
          },
          "route": {
            "$ref": "#/components/schemas/ServiceRoute"
          },
          "parameters": {
            "$ref": "#/components/schemas/RouteParameters"
          }
        },
        "additionalProperties": false
      },
      "WebhookServiceType": {
        "title": "WebhookServiceType",
        "enum": [
          "UserMicroservice",
          "ObjectService",
          "BasicService"
        ],
        "type": "string"
      },
      "AnnouncementContent": {
        "title": "AnnouncementContent",
        "required": [
          "symbol",
          "channel",
          "title",
          "summary",
          "body"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "channel": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gift": {
            "$ref": "#/components/schemas/PlayerReward"
          },
          "stat_requirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerStatRequirement"
            }
          },
          "symbol": {
            "type": "string"
          },
          "clientData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "end_date": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnouncementAttachment"
            }
          },
          "summary": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WebhookInvocationType": {
        "title": "WebhookInvocationType",
        "enum": [
          "NonBlocking",
          "Blocking"
        ],
        "type": "string"
      },
      "AnnouncementContentResponse": {
        "title": "Announcement Content Response",
        "required": [
          "content"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnouncementContent"
            }
          }
        },
        "additionalProperties": false
      },
      "LocalizationRef": {
        "title": "LocalizationRef",
        "required": [
          "localizationId",
          "empty"
        ],
        "type": "object",
        "properties": {
          "localizationId": {
            "type": "string"
          },
          "defaultValue": {
            "type": "string"
          },
          "empty": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AnnouncementAttachment": {
        "title": "AnnouncementAttachment",
        "required": [
          "symbol",
          "count"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentProperty"
            }
          }
        },
        "additionalProperties": false
      },
      "RouteVariable": {
        "title": "RouteVariable",
        "required": [
          "name",
          "typeName"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "typeName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WebhookInvocationStrategy": {
        "title": "WebhookInvocationStrategy",
        "required": [
          "invocationType",
          "retryType"
        ],
        "type": "object",
        "properties": {
          "invocationType": {
            "$ref": "#/components/schemas/WebhookInvocationType"
          },
          "retryType": {
            "$ref": "#/components/schemas/WebhookRetryType"
          }
        },
        "additionalProperties": false
      },
      "RouteParameter": {
        "title": "RouteParameter",
        "required": [
          "name",
          "body",
          "typeName"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "typeName": {
            "type": "string"
          },
          "variableRef": {
            "$ref": "#/components/schemas/VariableReference"
          }
        },
        "additionalProperties": false
      },
      "RouteVariables": {
        "title": "RouteVariables",
        "required": [
          "variables"
        ],
        "type": "object",
        "properties": {
          "variables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RouteVariable"
            }
          }
        },
        "additionalProperties": false
      },
      "PlayerReward": {
        "title": "PlayerReward",
        "required": [
          "addCurrencyMap",
          "addItemRequests"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "addItemRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemCreateRequest"
            }
          },
          "changeCurrencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyChangeReward"
            }
          },
          "callWebhooks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookReward"
            }
          },
          "addItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewItemReward"
            }
          },
          "applyVipBonus": {
            "type": "boolean"
          },
          "addCurrencyMap": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "VariableReference": {
        "title": "VariableReference",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AttachmentProperty": {
        "title": "AttachmentProperty",
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RouteParameters": {
        "title": "RouteParameters",
        "required": [
          "parameters"
        ],
        "type": "object",
        "properties": {
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RouteParameter"
            }
          },
          "payload": {
            "type": "string"
          },
          "objectId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ListDefinitionsResponse": {
        "title": "List Definitions Response",
        "required": [
          "content"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnouncementDto"
            }
          }
        },
        "additionalProperties": false
      },
      "ServiceRoute": {
        "title": "ServiceRoute",
        "required": [
          "service",
          "endpoint",
          "serviceTypeStr"
        ],
        "type": "object",
        "properties": {
          "service": {
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          },
          "serviceTypeStr": {
            "$ref": "#/components/schemas/WebhookServiceType"
          }
        },
        "additionalProperties": false
      },
      "CurrencyChangeReward": {
        "title": "CurrencyChangeReward",
        "required": [
          "symbol",
          "amount"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "DeleteAnnouncementRequest": {
        "title": "Delete Announcement Request",
        "required": [
          "symbol"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ListTagsRequest": {
        "title": "List Tags Request",
        "type": "object",
        "properties": {
          "tagNameFilter": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AnnouncementDto": {
        "title": "AnnouncementDto",
        "required": [
          "symbol",
          "channel",
          "title",
          "summary",
          "body"
        ],
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/components/schemas/LocalizationRef"
          },
          "channel": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gift": {
            "$ref": "#/components/schemas/PlayerReward"
          },
          "stat_requirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerStatRequirement"
            }
          },
          "symbol": {
            "type": "string"
          },
          "clientData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "end_date": {
            "type": "string"
          },
          "title": {
            "$ref": "#/components/schemas/LocalizationRef"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnouncementAttachment"
            }
          },
          "summary": {
            "$ref": "#/components/schemas/LocalizationRef"
          }
        },
        "additionalProperties": false
      },
      "WebhookReward": {
        "title": "WebhookReward",
        "required": [
          "strategy"
        ],
        "type": "object",
        "properties": {
          "webhookSymbol": {
            "type": "string"
          },
          "strategy": {
            "$ref": "#/components/schemas/WebhookInvocationStrategy"
          },
          "webHookComet": {
            "$ref": "#/components/schemas/WebhookComet"
          }
        },
        "additionalProperties": false
      },
      "NewItemReward": {
        "title": "NewItemReward",
        "required": [
          "symbol"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "WebhookRetryType": {
        "title": "WebhookRetryType",
        "enum": [
          "None",
          "Once",
          "ExponentialBackoff"
        ],
        "type": "string"
      },
      "SearchAnnouncementsRequest": {
        "title": "Search Announcements Request",
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AnnouncementRawResponse": {
        "title": "Announcement Raw Response",
        "required": [
          "announcements"
        ],
        "type": "object",
        "properties": {
          "announcements": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AnnouncementState"
            }
          }
        },
        "additionalProperties": false
      },
      "AnnouncementQuery": {
        "title": "Announcement Query",
        "type": "object",
        "properties": {
          "include_deleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AnnouncementState": {
        "title": "AnnouncementState",
        "required": [
          "isRead",
          "isClaimed",
          "isDeleted"
        ],
        "type": "object",
        "properties": {
          "isRead": {
            "type": "boolean"
          },
          "isClaimed": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AnnouncementRequest": {
        "title": "Announcement Request",
        "type": "object",
        "properties": {
          "announcement": {
            "type": "string"
          },
          "announcements": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "AnnouncementQueryResponse": {
        "title": "Announcement Query Response",
        "required": [
          "announcements"
        ],
        "type": "object",
        "properties": {
          "announcements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnouncementView"
            }
          }
        },
        "additionalProperties": false
      },
      "AnnouncementView": {
        "title": "AnnouncementView",
        "required": [
          "id",
          "channel",
          "title",
          "summary",
          "body",
          "attachments",
          "isRead",
          "isClaimed",
          "isDeleted",
          "clientDataList"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "isClaimed": {
            "type": "boolean"
          },
          "channel": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "clientDataList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientDataEntry"
            }
          },
          "gift": {
            "$ref": "#/components/schemas/PlayerReward"
          },
          "secondsRemaining": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isRead": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnnouncementAttachment"
            }
          },
          "summary": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateMailRequest": {
        "title": "Update Mail Request",
        "required": [
          "mailId"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "expires": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "mailId": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "type": "string"
          },
          "acceptAttachments": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetTemplateRequest": {
        "title": "Get Template Request",
        "required": [
          "templateName",
          "gamerTag"
        ],
        "type": "object",
        "properties": {
          "templateName": {
            "type": "string"
          },
          "gamerTag": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "AttachmentRequest": {
        "title": "AttachmentRequest",
        "required": [
          "symbol",
          "action"
        ],
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "symbol": {
            "type": "string"
          },
          "specialization": {
            "type": "string"
          },
          "target": {
            "type": "integer",
            "format": "int64"
          },
          "action": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MailResponse": {
        "title": "Mail Response",
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/Message"
          }
        },
        "additionalProperties": false
      },
      "MailTemplate": {
        "title": "Mail Template",
        "required": [
          "subject",
          "body"
        ],
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SendMailRequest": {
        "title": "SendMailRequest",
        "required": [
          "senderGamerTag",
          "receiverGamerTag",
          "category"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "expires": {
            "type": "string"
          },
          "playerRewards": {
            "$ref": "#/components/schemas/PlayerReward"
          },
          "receiverGamerTag": {
            "type": "integer",
            "format": "int64"
          },
          "subject": {
            "type": "string"
          },
          "rewards": {
            "$ref": "#/components/schemas/MailRewards"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "senderGamerTag": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "type": "string"
          },
          "bodyRef": {
            "type": "integer",
            "format": "int64"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentRequest"
            }
          }
        },
        "additionalProperties": false
      },
      "Attachment": {
        "title": "Attachment",
        "required": [
          "id",
          "wrapped",
          "state"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "wrapped": {
            "$ref": "#/components/schemas/EntitlementGenerator"
          },
          "state": {
            "type": "string"
          },
          "target": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "AcceptMultipleAttachments": {
        "title": "Accept Multiple Attachments",
        "required": [
          "mailIds"
        ],
        "type": "object",
        "properties": {
          "mailIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "additionalProperties": false
      },
      "GetMailDetailsRequest": {
        "title": "Get Mail Details Request",
        "required": [
          "mid"
        ],
        "type": "object",
        "properties": {
          "mid": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Message": {
        "title": "Message",
        "required": [
          "id",
          "sent",
          "receiverGamerTag",
          "senderGamerTag",
          "category",
          "state",
          "attachments"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "expires": {
            "type": "integer",
            "description": "Milliseconds since midnight, January 1, 1970 UTC",
            "format": "int64",
            "x-beamable-date-format": "unix"
          },
          "playerRewards": {
            "$ref": "#/components/schemas/PlayerReward"
          },
          "receiverGamerTag": {
            "type": "integer",
            "format": "int64"
          },
          "subject": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "rewards": {
            "$ref": "#/components/schemas/MailRewards"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "senderGamerTag": {
            "type": "integer",
            "format": "int64"
          },
          "sent": {
            "type": "integer",
            "description": "Milliseconds since midnight, January 1, 1970 UTC",
            "format": "int64",
            "x-beamable-date-format": "unix"
          },
          "category": {
            "type": "string"
          },
          "bodyRef": {
            "type": "integer",
            "format": "int64"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          },
          "claimedTimeMs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "MailSuccessResponse": {
        "title": "Mail Success Response",
        "required": [
          "result"
        ],
        "type": "object",
        "properties": {
          "result": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BulkSendMailRequest": {
        "title": "Bulk Send Mail Request",
        "required": [
          "sendMailRequests"
        ],
        "type": "object",
        "properties": {
          "sendMailRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SendMailRequest"
            }
          }
        },
        "additionalProperties": false
      },
      "MailRewards": {
        "title": "MailRewards",
        "required": [
          "currencies",
          "items"
        ],
        "type": "object",
        "properties": {
          "currencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyChange"
            }
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemCreateRequest"
            }
          },
          "applyVipBonus": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MailSearchClause": {
        "title": "MailSearchClause",
        "required": [
          "name",
          "onlyCount"
        ],
        "type": "object",
        "properties": {
          "forSender": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "onlyCount": {
            "type": "boolean"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "start": {
            "type": "integer",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "states": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "MailSearchRequest": {
        "title": "Mail Search Request",
        "required": [
          "clauses"
        ],
        "type": "object",
        "properties": {
          "clauses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MailSearchClause"
            }
          }
        },
        "additionalProperties": false
      },
      "MailSearchResponse": {
        "title": "Mail Search Response",
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MailSearchResponseClause"
            }
          }
        },
        "additionalProperties": false
      },
      "SendMailObjectRequest": {
        "title": "Send Mail Object Request",
        "required": [
          "senderGamerTag",
          "category"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "expires": {
            "type": "string"
          },
          "playerRewards": {
            "$ref": "#/components/schemas/PlayerReward"
          },
          "subject": {
            "type": "string"
          },
          "rewards": {
            "$ref": "#/components/schemas/MailRewards"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "senderGamerTag": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "type": "string"
          },
          "bodyRef": {
            "type": "integer",
            "format": "int64"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentRequest"
            }
          }
        },
        "additionalProperties": false
      },
      "SendMailResponse": {
        "title": "Send Mail Response",
        "type": "object",
        "properties": {
          "mailId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "MyMailUpdate": {
        "title": "MyMailUpdate",
        "required": [
          "id",
          "update"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "update": {
            "$ref": "#/components/schemas/UpdateMailRequest"
          }
        },
        "additionalProperties": false
      },
      "MailQueryResponse": {
        "title": "Mail Query Response",
        "required": [
          "unreadCount"
        ],
        "type": "object",
        "properties": {
          "unreadCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "BulkUpdateMailObjectRequest": {
        "title": "Bulk Update Mail Object Request",
        "required": [
          "updateMailRequests"
        ],
        "type": "object",
        "properties": {
          "updateMailRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyMailUpdate"
            }
          }
        },
        "additionalProperties": false
      },
      "ListMailCategoriesResponse": {
        "title": "List Mail Categories Response",
        "required": [
          "result"
        ],
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "MailSearchResponseClause": {
        "title": "MailSearchResponseClause",
        "required": [
          "name",
          "count"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          }
        },
        "additionalProperties": false
      },
      "SessionHistoryRequest": {
        "title": "Session History Request",
        "required": [
          "dbid"
        ],
        "type": "object",
        "properties": {
          "dbid": {
            "type": "integer",
            "format": "int64"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SessionHeartbeat": {
        "title": "Session Heartbeat",
        "required": [
          "gt"
        ],
        "type": "object",
        "properties": {
          "gt": {
            "type": "integer",
            "format": "int64"
          },
          "heartbeat": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Era": {
        "title": "Era",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OnlineStatusResponses": {
        "title": "Online Status Responses",
        "required": [
          "players"
        ],
        "type": "object",
        "properties": {
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerOnlineStatusResponse"
            }
          }
        },
        "additionalProperties": false
      },
      "SessionHistoryResponse": {
        "title": "Session History Response",
        "required": [
          "date",
          "sessions",
          "payments",
          "totalPaid",
          "daysPlayed"
        ],
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "totalPaid": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentTotal"
            }
          },
          "sessions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "date": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "installDate": {
            "type": "string"
          },
          "daysPlayed": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LocalDate": {
        "title": "LocalDate",
        "required": [
          "year",
          "month",
          "monthValue",
          "dayOfMonth",
          "chronology",
          "dayOfYear",
          "dayOfWeek",
          "leapYear",
          "era"
        ],
        "type": "object",
        "properties": {
          "dayOfYear": {
            "type": "integer",
            "format": "int32"
          },
          "leapYear": {
            "type": "boolean"
          },
          "chronology": {
            "$ref": "#/components/schemas/IsoChronology"
          },
          "dayOfWeek": {
            "enum": [
              "SATURDAY",
              "MONDAY",
              "THURSDAY",
              "TUESDAY",
              "FRIDAY",
              "WEDNESDAY",
              "SUNDAY"
            ],
            "type": "string"
          },
          "monthValue": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfMonth": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "era": {
            "$ref": "#/components/schemas/Era"
          },
          "month": {
            "enum": [
              "DECEMBER",
              "APRIL",
              "JULY",
              "SEPTEMBER",
              "JUNE",
              "FEBRUARY",
              "OCTOBER",
              "AUGUST",
              "NOVEMBER",
              "MARCH",
              "MAY",
              "JANUARY"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "StartSessionRequest": {
        "title": "Start Session Request",
        "type": "object",
        "properties": {
          "source": {
            "type": "string"
          },
          "customParams": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "shard": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          },
          "deviceParams": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "language": {
            "$ref": "#/components/schemas/SessionLanguageContext"
          },
          "time": {
            "type": "integer",
            "format": "int64"
          },
          "platform": {
            "type": "string"
          },
          "gamer": {
            "type": "integer",
            "format": "int64"
          },
          "device": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CohortEntry": {
        "title": "CohortEntry",
        "required": [
          "trial",
          "cohort"
        ],
        "type": "object",
        "properties": {
          "trial": {
            "type": "string"
          },
          "cohort": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "OnlineStatusRequest": {
        "title": "Online Status Request",
        "required": [
          "playerIds",
          "intervalSecs"
        ],
        "type": "object",
        "properties": {
          "playerIds": {
            "type": "string"
          },
          "intervalSecs": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "SessionClientHistoryRequest": {
        "title": "Session Client History Request",
        "type": "object",
        "properties": {
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PlayerOnlineStatusResponse": {
        "title": "PlayerOnlineStatusResponse",
        "required": [
          "playerId",
          "online",
          "lastSeen"
        ],
        "type": "object",
        "properties": {
          "playerId": {
            "type": "integer",
            "format": "int64"
          },
          "online": {
            "type": "boolean"
          },
          "lastSeen": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GamerTag": {
        "title": "GamerTag",
        "required": [
          "tag",
          "platform"
        ],
        "type": "object",
        "properties": {
          "tag": {
            "type": "integer",
            "format": "int64"
          },
          "alias": {
            "type": "string"
          },
          "added": {
            "type": "integer",
            "format": "int64"
          },
          "trials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CohortEntry"
            }
          },
          "platform": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/SessionUser"
          }
        },
        "additionalProperties": false
      },
      "SessionUser": {
        "title": "SessionUser",
        "required": [
          "id",
          "email",
          "firstName",
          "lastName",
          "username",
          "gamerTag",
          "lang",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "gamerTag": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "cid": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "heartbeat": {
            "type": "integer",
            "format": "int64"
          },
          "password": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SessionLanguageContext": {
        "title": "SessionLanguageContext",
        "required": [
          "code",
          "ctx"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "ctx": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "IsoChronology": {
        "title": "IsoChronology",
        "required": [
          "calendarType",
          "id"
        ],
        "type": "object",
        "properties": {
          "calendarType": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SessionClientHistoryResponse": {
        "title": "Session Client History Response",
        "required": [
          "date",
          "sessions",
          "daysPlayed"
        ],
        "type": "object",
        "properties": {
          "date": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "sessions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "installDate": {
            "type": "string"
          },
          "daysPlayed": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentTotal": {
        "title": "PaymentTotal",
        "required": [
          "totalRevenue"
        ],
        "type": "object",
        "properties": {
          "currencyCode": {
            "type": "string"
          },
          "totalRevenue": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "StartSessionResponse": {
        "title": "Start Session Response",
        "required": [
          "result"
        ],
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          },
          "gamer": {
            "$ref": "#/components/schemas/GamerTag"
          }
        },
        "additionalProperties": false
      },
      "ScheduleTrialRequest": {
        "title": "Schedule Trial Request",
        "required": [
          "name",
          "time"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "time": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Trial": {
        "title": "Trial",
        "required": [
          "ttype",
          "name",
          "strategy",
          "active",
          "assigned",
          "ctype",
          "cohorts"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "activated": {
            "type": "integer",
            "format": "int64"
          },
          "cohorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Cohort"
            }
          },
          "ctype": {
            "type": "string"
          },
          "scheduleStart": {
            "type": "integer",
            "format": "int64"
          },
          "assigned": {
            "type": "integer",
            "format": "int64"
          },
          "strategy": {
            "type": "string"
          },
          "customRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomCohortRule"
            }
          },
          "ttype": {
            "type": "string"
          },
          "created": {
            "type": "integer",
            "format": "int64"
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CustomCohortRule": {
        "title": "CustomCohortRule",
        "required": [
          "customAttr",
          "customOp",
          "customVal"
        ],
        "type": "object",
        "properties": {
          "customOp": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "customItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomCohortRule"
            }
          },
          "customAttr": {
            "type": "string"
          },
          "customVal": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "access": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Cohort": {
        "title": "Cohort",
        "required": [
          "name",
          "assigned"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "customRule": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomCohortRule"
            }
          },
          "populationCap": {
            "type": "integer",
            "format": "int64"
          },
          "assigned": {
            "type": "integer",
            "format": "int64"
          },
          "pct": {
            "type": "integer",
            "format": "int32"
          },
          "cloudData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudStorage"
            }
          }
        },
        "additionalProperties": false
      },
      "DeleteTrialDataRequest": {
        "title": "Delete Trial Data Request",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CloudDataStatus": {
        "title": "CloudDataStatus",
        "required": [
          "ejected",
          "processing",
          "sent",
          "forSending"
        ],
        "type": "object",
        "properties": {
          "ejected": {
            "type": "boolean"
          },
          "processing": {
            "type": "boolean"
          },
          "sent": {
            "type": "boolean"
          },
          "forSending": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SaveGameDataResponse": {
        "title": "Save Game Data Response",
        "required": [
          "result",
          "sid",
          "version"
        ],
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          },
          "sid": {
            "type": "integer",
            "format": "int64"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "PauseTrialRequest": {
        "title": "Pause Trial Request",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "StartTrialRequest": {
        "title": "Start Trial Request",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CloudStorage": {
        "title": "CloudStorage",
        "required": [
          "sid",
          "stype",
          "sent",
          "ejected",
          "status"
        ],
        "type": "object",
        "properties": {
          "retrieved": {
            "type": "integer",
            "format": "int64"
          },
          "uniqueIdentifier": {
            "type": "string"
          },
          "ejected": {
            "type": "boolean"
          },
          "data": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "added": {
            "type": "integer",
            "format": "int64"
          },
          "stype": {
            "type": "integer",
            "format": "int32"
          },
          "updated": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "$ref": "#/components/schemas/CloudDataStatus"
          },
          "jobId": {
            "type": "string"
          },
          "sent": {
            "type": "boolean"
          },
          "expiration": {
            "type": "integer",
            "format": "int64"
          },
          "gt": {
            "type": "integer",
            "format": "int64"
          },
          "sid": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ListTrialsResponse": {
        "title": "List Trials Response",
        "required": [
          "result"
        ],
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Trial"
            }
          }
        },
        "additionalProperties": false
      },
      "GetPlayerTrialsResponse": {
        "title": "Get Player Trials Response",
        "required": [
          "trials",
          "cohortData"
        ],
        "type": "object",
        "properties": {
          "trials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CohortEntry"
            }
          },
          "cohortData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudStorage"
            }
          }
        },
        "additionalProperties": false
      },
      "GetS3DataResponse": {
        "title": "Get S 3 Data Response",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "additionalProperties": false
      },
      "CreateTrialRestRequest": {
        "title": "Create Trial Rest Request",
        "required": [
          "name",
          "strat",
          "cohortType",
          "cohorts"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "cohorts": {
            "type": "string"
          },
          "cohortType": {
            "type": "string"
          },
          "strat": {
            "type": "string"
          },
          "customRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrialCustomRule"
            }
          }
        },
        "additionalProperties": false
      },
      "UploadTrialDataRequest": {
        "title": "Upload Trial Data Request",
        "required": [
          "trialName",
          "cohortName",
          "dataName",
          "filePayloadBase64"
        ],
        "type": "object",
        "properties": {
          "trialName": {
            "type": "string"
          },
          "cohortName": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "filePayloadBase64": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TrialCustomRule": {
        "title": "TrialCustomRule",
        "required": [
          "customAttr",
          "customOp",
          "customVal"
        ],
        "type": "object",
        "properties": {
          "customOp": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "customItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrialCustomRule"
            }
          },
          "customAttr": {
            "type": "string"
          },
          "customVal": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "access": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetS3DataRequest": {
        "title": "Get S 3 Data Request",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "DeleteTrialRequest": {
        "title": "Delete Trial Request",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "trialType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GetPlayerTrialsRequest": {
        "title": "Get Player Trials Request",
        "required": [
          "dbid"
        ],
        "type": "object",
        "properties": {
          "dbid": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "TrialSuccessResponse": {
        "title": "Trial Success Response",
        "required": [
          "result"
        ],
        "type": "object",
        "properties": {
          "result": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "auth": {
        "type": "apiKey",
        "description": "Bearer authentication with a player access token in the Authorization header.",
        "name": "Authorization",
        "in": "header"
      },
      "scope": {
        "type": "apiKey",
        "description": "The cid and pid of your project in cid.pid format",
        "name": "X-BEAM-SCOPE",
        "in": "header"
      },
      "server": {
        "type": "apiKey",
        "description": "Signed Request authentication using project secret key.",
        "name": "X-DE-SIGNATURE",
        "in": "header"
      },
      "user": {
        "type": "http",
        "description": "Bearer authentication with a player access token in the Authorization header.",
        "scheme": "bearer",
        "bearerFormat": "Bearer <Access Token>"
      }
    }
  },
  "externalDocs": {
    "description": "Beamable Documentation",
    "url": "https://help.beamable.com"
  }
}